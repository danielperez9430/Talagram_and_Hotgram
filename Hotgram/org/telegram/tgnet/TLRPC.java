package org.telegram.tgnet;

import android.text.TextUtils;
import com.google.a.a.c;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map$Entry;

public class TLRPC {
    public abstract class Audio extends TLObject {
        public long access_hash;
        public int date;
        public int dc_id;
        public int duration;
        public long id;
        public byte[] iv;
        public byte[] key;
        public String mime_type;
        public int size;
        public int user_id;

        public Audio() {
            super();
        }

        public static Audio TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_audioEmpty_layer45 v0;
            TL_audio_layer45 v0_3;
            switch(arg2) {
                case -945003370: {
                    TL_audio_old2 v0_4 = new TL_audio_old2();
                    break;
                }
                case -102543275: {
                    v0_3 = new TL_audio_layer45();
                    break;
                }
                case 1114908135: {
                    TL_audio_old v0_2 = new TL_audio_old();
                    break;
                }
                case 1431655926: {
                    TL_audioEncrypted v0_1 = new TL_audioEncrypted();
                    break;
                }
                case 1483311320: {
                    v0 = new TL_audioEmpty_layer45();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_audioEmpty_layer45)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Audio", Integer.valueOf(arg2)));
                }
            }

            if((((TL_audioEmpty_layer45)v0_3)) != null) {
                ((Audio)v0_3).readParams(arg1, arg3);
            }

            return ((Audio)v0_3);
        }
    }

    public abstract class Bool extends TLObject {
        public Bool() {
            super();
        }

        public static Bool TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_boolFalse v0;
            if(arg2 == -1720552011) {
                TL_boolTrue v0_1 = new TL_boolTrue();
            }
            else if(arg2 != -1132882121) {
                v0 = null;
            }
            else {
                v0 = new TL_boolFalse();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Bool", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((Bool)v0).readParams(arg1, arg3);
            }

            return ((Bool)v0);
        }
    }

    public abstract class BotInfo extends TLObject {
        public ArrayList commands;
        public String description;
        public int user_id;
        public int version;

        public BotInfo() {
            super();
            this.commands = new ArrayList();
        }

        public static BotInfo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_botInfo_layer48 v0;
            TL_botInfo v0_2;
            if(arg2 == -1729618630) {
                v0_2 = new TL_botInfo();
            }
            else if(arg2 == -1154598962) {
                TL_botInfoEmpty_layer48 v0_1 = new TL_botInfoEmpty_layer48();
            }
            else if(arg2 != 164583517) {
                v0 = null;
            }
            else {
                v0 = new TL_botInfo_layer48();
            }

            if((((TL_botInfo_layer48)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in BotInfo", Integer.valueOf(arg2)));
                }
            }

            if((((TL_botInfo_layer48)v0_2)) != null) {
                ((BotInfo)v0_2).readParams(arg1, arg3);
            }

            return ((BotInfo)v0_2);
        }
    }

    public abstract class BotInlineMessage extends TLObject {
        public String address;
        public ArrayList entities;
        public String first_name;
        public int flags;
        public GeoPoint geo;
        public String last_name;
        public String message;
        public boolean no_webpage;
        public int period;
        public String phone_number;
        public String provider;
        public ReplyMarkup reply_markup;
        public String title;
        public String vcard;
        public String venue_id;
        public String venue_type;

        public BotInlineMessage() {
            super();
            this.entities = new ArrayList();
        }

        public static BotInlineMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_botInlineMessageMediaAuto v0;
            TL_botInlineMessageMediaVenue_layer77 v0_3;
            switch(arg2) {
                case 175419739: {
                    TL_botInlineMessageMediaAuto_layer74 v0_1 = new TL_botInlineMessageMediaAuto_layer74();
                    break;
                }
                case 416402882: {
                    TL_botInlineMessageMediaContact v0_8 = new TL_botInlineMessageMediaContact();
                    break;
                }
                case 904770772: {
                    TL_botInlineMessageMediaContact_layer81 v0_7 = new TL_botInlineMessageMediaContact_layer81();
                    break;
                }
                case 982505656: {
                    TL_botInlineMessageMediaGeo_layer71 v0_5 = new TL_botInlineMessageMediaGeo_layer71();
                    break;
                }
                case 1130767150: {
                    v0_3 = new TL_botInlineMessageMediaVenue_layer77();
                    break;
                }
                case 1984755728: {
                    v0 = new TL_botInlineMessageMediaAuto();
                    break;
                }
                case -1970903652: {
                    TL_botInlineMessageMediaVenue v0_6 = new TL_botInlineMessageMediaVenue();
                    break;
                }
                case -1937807902: {
                    TL_botInlineMessageText v0_4 = new TL_botInlineMessageText();
                    break;
                }
                case -1222451611: {
                    TL_botInlineMessageMediaGeo v0_2 = new TL_botInlineMessageMediaGeo();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_botInlineMessageMediaAuto)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in BotInlineMessage", Integer.valueOf(arg2)));
                }
            }

            if((((TL_botInlineMessageMediaAuto)v0_3)) != null) {
                ((BotInlineMessage)v0_3).readParams(arg1, arg3);
            }

            return ((BotInlineMessage)v0_3);
        }
    }

    public abstract class BotInlineResult extends TLObject {
        public WebDocument content;
        public String description;
        public Document document;
        public int flags;
        public String id;
        public Photo photo;
        public long query_id;
        public BotInlineMessage send_message;
        public WebDocument thumb;
        public String title;
        public String type;
        public String url;

        public BotInlineResult() {
            super();
        }

        public static BotInlineResult TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_botInlineMediaResult v0;
            TL_botInlineResult v0_1;
            if(arg2 == 295067450) {
                v0_1 = new TL_botInlineResult();
            }
            else if(arg2 != 400266251) {
                v0 = null;
            }
            else {
                v0 = new TL_botInlineMediaResult();
            }

            if((((TL_botInlineMediaResult)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in BotInlineResult", Integer.valueOf(arg2)));
                }
            }

            if((((TL_botInlineMediaResult)v0_1)) != null) {
                ((BotInlineResult)v0_1).readParams(arg1, arg3);
            }

            return ((BotInlineResult)v0_1);
        }
    }

    public abstract class ChannelAdminLogEventAction extends TLObject {
        public Message message;
        public Message new_message;
        public ChannelParticipant new_participant;
        public ChatPhoto new_photo;
        public InputStickerSet new_stickerset;
        public ChannelParticipant participant;
        public Message prev_message;
        public ChannelParticipant prev_participant;
        public ChatPhoto prev_photo;
        public InputStickerSet prev_stickerset;
        public String prev_value;

        public ChannelAdminLogEventAction() {
            super();
        }

        public static ChannelAdminLogEventAction TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channelAdminLogEventActionEditMessage v0;
            TL_channelAdminLogEventActionTogglePreHistoryHidden v0_5;
            switch(arg2) {
                case 1783299128: {
                    TL_channelAdminLogEventActionChangeUsername v0_3 = new TL_channelAdminLogEventActionChangeUsername();
                    break;
                }
                case 1889215493: {
                    v0 = new TL_channelAdminLogEventActionEditMessage();
                    break;
                }
                case -1312568665: {
                    TL_channelAdminLogEventActionChangeStickerSet v0_10 = new TL_channelAdminLogEventActionChangeStickerSet();
                    break;
                }
                case -1204857405: {
                    TL_channelAdminLogEventActionChangePhoto v0_8 = new TL_channelAdminLogEventActionChangePhoto();
                    break;
                }
                case -714643696: {
                    TL_channelAdminLogEventActionParticipantToggleAdmin v0_6 = new TL_channelAdminLogEventActionParticipantToggleAdmin();
                    break;
                }
                case -484690728: {
                    TL_channelAdminLogEventActionParticipantInvite v0_4 = new TL_channelAdminLogEventActionParticipantInvite();
                    break;
                }
                case -422036098: {
                    TL_channelAdminLogEventActionParticipantToggleBan v0_2 = new TL_channelAdminLogEventActionParticipantToggleBan();
                    break;
                }
                case -421545947: {
                    TL_channelAdminLogEventActionChangeTitle v0_1 = new TL_channelAdminLogEventActionChangeTitle();
                    break;
                }
                case -370660328: {
                    TL_channelAdminLogEventActionUpdatePinned v0_15 = new TL_channelAdminLogEventActionUpdatePinned();
                    break;
                }
                case -124291086: {
                    TL_channelAdminLogEventActionParticipantLeave v0_14 = new TL_channelAdminLogEventActionParticipantLeave();
                    break;
                }
                case 405815507: {
                    TL_channelAdminLogEventActionParticipantJoin v0_13 = new TL_channelAdminLogEventActionParticipantJoin();
                    break;
                }
                case 460916654: {
                    TL_channelAdminLogEventActionToggleInvites v0_12 = new TL_channelAdminLogEventActionToggleInvites();
                    break;
                }
                case 648939889: {
                    TL_channelAdminLogEventActionToggleSignatures v0_11 = new TL_channelAdminLogEventActionToggleSignatures();
                    break;
                }
                case 1121994683: {
                    TL_channelAdminLogEventActionDeleteMessage v0_9 = new TL_channelAdminLogEventActionDeleteMessage();
                    break;
                }
                case 1427671598: {
                    TL_channelAdminLogEventActionChangeAbout v0_7 = new TL_channelAdminLogEventActionChangeAbout();
                    break;
                }
                case 1599903217: {
                    v0_5 = new TL_channelAdminLogEventActionTogglePreHistoryHidden();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_channelAdminLogEventActionEditMessage)v0_5)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChannelAdminLogEventAction", Integer.valueOf(arg2)));
                }
            }

            if((((TL_channelAdminLogEventActionEditMessage)v0_5)) != null) {
                ((ChannelAdminLogEventAction)v0_5).readParams(arg1, arg3);
            }

            return ((ChannelAdminLogEventAction)v0_5);
        }
    }

    public abstract class ChannelMessagesFilter extends TLObject {
        public boolean exclude_new_messages;
        public int flags;
        public ArrayList ranges;

        public ChannelMessagesFilter() {
            super();
            this.ranges = new ArrayList();
        }

        public static ChannelMessagesFilter TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channelMessagesFilter v0;
            TL_channelMessagesFilterEmpty v0_1;
            if(arg2 == -1798033689) {
                v0_1 = new TL_channelMessagesFilterEmpty();
            }
            else if(arg2 != -847783593) {
                v0 = null;
            }
            else {
                v0 = new TL_channelMessagesFilter();
            }

            if((((TL_channelMessagesFilter)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChannelMessagesFilter", Integer.valueOf(arg2)));
                }
            }

            if((((TL_channelMessagesFilter)v0_1)) != null) {
                ((ChannelMessagesFilter)v0_1).readParams(arg1, arg3);
            }

            return ((ChannelMessagesFilter)v0_1);
        }
    }

    public abstract class ChannelParticipant extends TLObject {
        public TL_channelAdminRights admin_rights;
        public TL_channelBannedRights banned_rights;
        public boolean can_edit;
        public int date;
        public int flags;
        public int inviter_id;
        public int kicked_by;
        public boolean left;
        public int promoted_by;
        public int user_id;

        public ChannelParticipant() {
            super();
        }

        public static ChannelParticipant TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channelParticipantBanned v0;
            TL_channelParticipantModerator_layer67 v0_2;
            switch(arg2) {
                case 367766557: {
                    TL_channelParticipant v0_3 = new TL_channelParticipant();
                    break;
                }
                case 573315206: {
                    v0 = new TL_channelParticipantBanned();
                    break;
                }
                case -1933187430: {
                    TL_channelParticipantKicked_layer67 v0_4 = new TL_channelParticipantKicked_layer67();
                    break;
                }
                case -1861910545: {
                    v0_2 = new TL_channelParticipantModerator_layer67();
                    break;
                }
                case -1743180447: {
                    TL_channelParticipantEditor_layer67 v0_1 = new TL_channelParticipantEditor_layer67();
                    break;
                }
                case -1557620115: {
                    TL_channelParticipantSelf v0_7 = new TL_channelParticipantSelf();
                    break;
                }
                case -1473271656: {
                    TL_channelParticipantAdmin v0_6 = new TL_channelParticipantAdmin();
                    break;
                }
                case -471670279: {
                    TL_channelParticipantCreator v0_5 = new TL_channelParticipantCreator();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_channelParticipantBanned)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChannelParticipant", Integer.valueOf(arg2)));
                }
            }

            if((((TL_channelParticipantBanned)v0_2)) != null) {
                ((ChannelParticipant)v0_2).readParams(arg1, arg3);
            }

            return ((ChannelParticipant)v0_2);
        }
    }

    public abstract class ChannelParticipantsFilter extends TLObject {
        public String q;

        public ChannelParticipantsFilter() {
            super();
        }

        public static ChannelParticipantsFilter TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channelParticipantsBanned v0;
            switch(arg2) {
                case -1548400251: {
                    TL_channelParticipantsKicked v0_1 = new TL_channelParticipantsKicked();
                    break;
                }
                case -1328445861: {
                    TL_channelParticipantsBots v0_5 = new TL_channelParticipantsBots();
                    break;
                }
                case -1268741783: {
                    TL_channelParticipantsAdmins v0_4 = new TL_channelParticipantsAdmins();
                    break;
                }
                case -566281095: {
                    TL_channelParticipantsRecent v0_3 = new TL_channelParticipantsRecent();
                    break;
                }
                case 106343499: {
                    TL_channelParticipantsSearch v0_2 = new TL_channelParticipantsSearch();
                    break;
                }
                case 338142689: {
                    v0 = new TL_channelParticipantsBanned();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChannelParticipantsFilter", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((ChannelParticipantsFilter)v0).readParams(arg1, arg3);
            }

            return ((ChannelParticipantsFilter)v0);
        }
    }

    public abstract class Chat extends TLObject {
        public long access_hash;
        public boolean admin;
        public TL_channelAdminRights admin_rights;
        public boolean admins_enabled;
        public TL_channelBannedRights banned_rights;
        public boolean broadcast;
        public boolean creator;
        public int date;
        public boolean deactivated;
        public boolean democracy;
        public boolean explicit_content;
        public int flags;
        public int id;
        public boolean kicked;
        public boolean left;
        public boolean megagroup;
        public InputChannel migrated_to;
        public boolean min;
        public boolean moderator;
        public int participants_count;
        public ChatPhoto photo;
        public boolean restricted;
        public String restriction_reason;
        public boolean signatures;
        public String title;
        public int until_date;
        public String username;
        public boolean verified;
        public int version;

        public Chat() {
            super();
        }

        public static Chat TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chat_old2 v0;
            TL_chat v0_1;
            switch(arg2) {
                case -83047359: {
                    TL_chatForbidden_old v0_14 = new TL_chatForbidden_old();
                    break;
                }
                case 120753115: {
                    TL_chatForbidden v0_13 = new TL_chatForbidden();
                    break;
                }
                case 213142300: {
                    TL_channel_layer72 v0_12 = new TL_channel_layer72();
                    break;
                }
                case 681420594: {
                    TL_channelForbidden v0_11 = new TL_channelForbidden();
                    break;
                }
                case 763724588: {
                    TL_channelForbidden_layer52 v0_10 = new TL_channelForbidden_layer52();
                    break;
                }
                case 1158377749: {
                    TL_channel_layer77 v0_9 = new TL_channel_layer77();
                    break;
                }
                case 1260090630: {
                    TL_channel_layer48 v0_7 = new TL_channel_layer48();
                    break;
                }
                case 1737397639: {
                    TL_channel_old v0_5 = new TL_channel_old();
                    break;
                }
                case 1855757255: {
                    TL_chat_old v0_3 = new TL_chat_old();
                    break;
                }
                case 1930607688: {
                    v0 = new TL_chat_old2();
                    break;
                }
                case -2059962289: {
                    TL_channelForbidden_layer67 v0_8 = new TL_channelForbidden_layer67();
                    break;
                }
                case -1683826688: {
                    TL_chatEmpty v0_6 = new TL_chatEmpty();
                    break;
                }
                case -1588737454: {
                    TL_channel_layer67 v0_4 = new TL_channel_layer67();
                    break;
                }
                case -930515796: {
                    TL_channel v0_2 = new TL_channel();
                    break;
                }
                case -652419756: {
                    v0_1 = new TL_chat();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_chat_old2)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Chat", Integer.valueOf(arg2)));
                }
            }

            if((((TL_chat_old2)v0_1)) != null) {
                ((Chat)v0_1).readParams(arg1, arg3);
            }

            return ((Chat)v0_1);
        }
    }

    public abstract class ChatFull extends TLObject {
        public String about;
        public int admins_count;
        public int available_min_id;
        public int banned_count;
        public ArrayList bot_info;
        public int call_msg_id;
        public boolean can_set_stickers;
        public boolean can_set_username;
        public boolean can_view_participants;
        public Photo chat_photo;
        public ExportedChatInvite exported_invite;
        public int flags;
        public boolean hidden_prehistory;
        public int id;
        public int kicked_count;
        public int migrated_from_chat_id;
        public int migrated_from_max_id;
        public PeerNotifySettings notify_settings;
        public ChatParticipants participants;
        public int participants_count;
        public int pinned_msg_id;
        public int read_inbox_max_id;
        public int read_outbox_max_id;
        public StickerSet stickerset;
        public int unread_count;
        public int unread_important_count;

        public ChatFull() {
            super();
            this.bot_info = new ArrayList();
        }

        public static ChatFull TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channelFull_layer72 v0;
            TL_channelFull_layer67 v0_1;
            switch(arg2) {
                case 401891279: {
                    TL_channelFull_layer71 v0_5 = new TL_channelFull_layer71();
                    break;
                }
                case 771925524: {
                    TL_chatFull v0_3 = new TL_chatFull();
                    break;
                }
                case 1991201921: {
                    v0 = new TL_channelFull_layer72();
                    break;
                }
                case -1781833897: {
                    TL_channelFull_layer70 v0_6 = new TL_channelFull_layer70();
                    break;
                }
                case -1749097118: {
                    TL_channelFull_layer52 v0_4 = new TL_channelFull_layer52();
                    break;
                }
                case -1640751649: {
                    TL_channelFull_layer48 v0_2 = new TL_channelFull_layer48();
                    break;
                }
                case -1009430225: {
                    v0_1 = new TL_channelFull_layer67();
                    break;
                }
                case -877254512: {
                    TL_channelFull v0_8 = new TL_channelFull();
                    break;
                }
                case -88925533: {
                    TL_channelFull_old v0_7 = new TL_channelFull_old();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_channelFull_layer72)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChatFull", Integer.valueOf(arg2)));
                }
            }

            if((((TL_channelFull_layer72)v0_1)) != null) {
                ((ChatFull)v0_1).readParams(arg1, arg3);
            }

            return ((ChatFull)v0_1);
        }
    }

    public abstract class ChatInvite extends TLObject {
        public boolean broadcast;
        public boolean channel;
        public Chat chat;
        public int flags;
        public boolean isPublic;
        public boolean megagroup;
        public ArrayList participants;
        public int participants_count;
        public ChatPhoto photo;
        public String title;

        public ChatInvite() {
            super();
            this.participants = new ArrayList();
        }

        public static ChatInvite TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chatInviteAlready v0;
            TL_chatInvite v0_1;
            if(arg2 == -613092008) {
                v0_1 = new TL_chatInvite();
            }
            else if(arg2 != 1516793212) {
                v0 = null;
            }
            else {
                v0 = new TL_chatInviteAlready();
            }

            if((((TL_chatInviteAlready)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChatInvite", Integer.valueOf(arg2)));
                }
            }

            if((((TL_chatInviteAlready)v0_1)) != null) {
                ((ChatInvite)v0_1).readParams(arg1, arg3);
            }

            return ((ChatInvite)v0_1);
        }
    }

    public abstract class ChatParticipant extends TLObject {
        public int date;
        public int inviter_id;
        public int user_id;

        public ChatParticipant() {
            super();
        }

        public static ChatParticipant TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chatParticipantAdmin v0;
            TL_chatParticipantCreator v0_1;
            if(arg2 == -925415106) {
                TL_chatParticipant v0_2 = new TL_chatParticipant();
            }
            else if(arg2 == -636267638) {
                v0_1 = new TL_chatParticipantCreator();
            }
            else if(arg2 != -489233354) {
                v0 = null;
            }
            else {
                v0 = new TL_chatParticipantAdmin();
            }

            if((((TL_chatParticipantAdmin)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChatParticipant", Integer.valueOf(arg2)));
                }
            }

            if((((TL_chatParticipantAdmin)v0_1)) != null) {
                ((ChatParticipant)v0_1).readParams(arg1, arg3);
            }

            return ((ChatParticipant)v0_1);
        }
    }

    public abstract class ChatParticipants extends TLObject {
        public int admin_id;
        public int chat_id;
        public int flags;
        public ArrayList participants;
        public ChatParticipant self_participant;
        public int version;

        public ChatParticipants() {
            super();
            this.participants = new ArrayList();
        }

        public static ChatParticipants TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chatParticipants_old v0;
            if(arg2 == -57668565) {
                TL_chatParticipantsForbidden v0_3 = new TL_chatParticipantsForbidden();
            }
            else if(arg2 == 265468810) {
                TL_chatParticipantsForbidden_old v0_2 = new TL_chatParticipantsForbidden_old();
            }
            else if(arg2 == 1061556205) {
                TL_chatParticipants v0_1 = new TL_chatParticipants();
            }
            else if(arg2 != 2017571861) {
                v0 = null;
            }
            else {
                v0 = new TL_chatParticipants_old();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChatParticipants", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((ChatParticipants)v0).readParams(arg1, arg3);
            }

            return ((ChatParticipants)v0);
        }
    }

    public abstract class ChatPhoto extends TLObject {
        public FileLocation photo_big;
        public FileLocation photo_small;

        public ChatPhoto() {
            super();
        }

        public static ChatPhoto TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chatPhoto v0;
            TL_chatPhotoEmpty v0_1;
            if(arg2 == 935395612) {
                v0_1 = new TL_chatPhotoEmpty();
            }
            else if(arg2 != 1632839530) {
                v0 = null;
            }
            else {
                v0 = new TL_chatPhoto();
            }

            if((((TL_chatPhoto)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ChatPhoto", Integer.valueOf(arg2)));
                }
            }

            if((((TL_chatPhoto)v0_1)) != null) {
                ((ChatPhoto)v0_1).readParams(arg1, arg3);
            }

            return ((ChatPhoto)v0_1);
        }
    }

    public abstract class ContactLink extends TLObject {
        public ContactLink() {
            super();
        }

        public static ContactLink TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_contactLinkUnknown v0;
            TL_contactLinkNone v0_2;
            if(arg2 == -721239344) {
                TL_contactLinkContact v0_3 = new TL_contactLinkContact();
            }
            else if(arg2 == -17968211) {
                v0_2 = new TL_contactLinkNone();
            }
            else if(arg2 == 646922073) {
                TL_contactLinkHasPhone v0_1 = new TL_contactLinkHasPhone();
            }
            else if(arg2 != 1599050311) {
                v0 = null;
            }
            else {
                v0 = new TL_contactLinkUnknown();
            }

            if((((TL_contactLinkUnknown)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ContactLink", Integer.valueOf(arg2)));
                }
            }

            if((((TL_contactLinkUnknown)v0_2)) != null) {
                ((ContactLink)v0_2).readParams(arg1, arg3);
            }

            return ((ContactLink)v0_2);
        }
    }

    public abstract class DecryptedMessage extends TLObject {
        public DecryptedMessageAction action;
        public ArrayList entities;
        public int flags;
        public long grouped_id;
        public DecryptedMessageMedia media;
        public String message;
        public byte[] random_bytes;
        public long random_id;
        public long reply_to_random_id;
        public int ttl;
        public String via_bot_name;

        public DecryptedMessage() {
            super();
            this.entities = new ArrayList();
        }

        public static DecryptedMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_decryptedMessageService v0;
            TL_decryptedMessage_layer8 v0_4;
            switch(arg2) {
                case -1438109059: {
                    TL_decryptedMessageService_layer8 v0_5 = new TL_decryptedMessageService_layer8();
                    break;
                }
                case 528568095: {
                    v0_4 = new TL_decryptedMessage_layer8();
                    break;
                }
                case 541931640: {
                    TL_decryptedMessage_layer17 v0_3 = new TL_decryptedMessage_layer17();
                    break;
                }
                case 917541342: {
                    TL_decryptedMessage_layer45 v0_2 = new TL_decryptedMessage_layer45();
                    break;
                }
                case 1930838368: {
                    v0 = new TL_decryptedMessageService();
                    break;
                }
                case -1848883596: {
                    TL_decryptedMessage v0_1 = new TL_decryptedMessage();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_decryptedMessageService)v0_4)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DecryptedMessage", Integer.valueOf(arg2)));
                }
            }

            if((((TL_decryptedMessageService)v0_4)) != null) {
                ((DecryptedMessage)v0_4).readParams(arg1, arg3);
            }

            return ((DecryptedMessage)v0_4);
        }
    }

    public abstract class DecryptedMessageAction extends TLObject {
        public SendMessageAction action;
        public int end_seq_no;
        public long exchange_id;
        public byte[] g_a;
        public byte[] g_b;
        public long key_fingerprint;
        public int layer;
        public ArrayList random_ids;
        public int start_seq_no;
        public int ttl_seconds;

        public DecryptedMessageAction() {
            super();
            this.random_ids = new ArrayList();
        }

        public static DecryptedMessageAction TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_decryptedMessageActionAcceptKey v0;
            TL_decryptedMessageActionCommitKey v0_10;
            switch(arg2) {
                case -332526693: {
                    v0_10 = new TL_decryptedMessageActionCommitKey();
                    break;
                }
                case -217806717: {
                    TL_decryptedMessageActionNotifyLayer v0_9 = new TL_decryptedMessageActionNotifyLayer();
                    break;
                }
                case -204906213: {
                    TL_decryptedMessageActionRequestKey v0_8 = new TL_decryptedMessageActionRequestKey();
                    break;
                }
                case 206520510: {
                    TL_decryptedMessageActionReadMessages v0_7 = new TL_decryptedMessageActionReadMessages();
                    break;
                }
                case 1360072880: {
                    TL_decryptedMessageActionResend v0_6 = new TL_decryptedMessageActionResend();
                    break;
                }
                case 1700872964: {
                    TL_decryptedMessageActionDeleteMessages v0_5 = new TL_decryptedMessageActionDeleteMessages();
                    break;
                }
                case 1729750108: {
                    TL_decryptedMessageActionFlushHistory v0_3 = new TL_decryptedMessageActionFlushHistory();
                    break;
                }
                case 1877046107: {
                    v0 = new TL_decryptedMessageActionAcceptKey();
                    break;
                }
                case -1967000459: {
                    TL_decryptedMessageActionScreenshotMessages v0_4 = new TL_decryptedMessageActionScreenshotMessages();
                    break;
                }
                case -1586283796: {
                    TL_decryptedMessageActionSetMessageTTL v0_2 = new TL_decryptedMessageActionSetMessageTTL();
                    break;
                }
                case -1473258141: {
                    TL_decryptedMessageActionNoop v0_1 = new TL_decryptedMessageActionNoop();
                    break;
                }
                case -860719551: {
                    TL_decryptedMessageActionTyping v0_12 = new TL_decryptedMessageActionTyping();
                    break;
                }
                case -586814357: {
                    TL_decryptedMessageActionAbortKey v0_11 = new TL_decryptedMessageActionAbortKey();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_decryptedMessageActionAcceptKey)v0_10)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DecryptedMessageAction", Integer.valueOf(arg2)));
                }
            }

            if((((TL_decryptedMessageActionAcceptKey)v0_10)) != null) {
                ((DecryptedMessageAction)v0_10).readParams(arg1, arg3);
            }

            return ((DecryptedMessageAction)v0_10);
        }
    }

    public abstract class DecryptedMessageMedia extends TLObject {
        public double _long;
        public long access_hash;
        public String address;
        public ArrayList attributes;
        public String caption;
        public int date;
        public int dc_id;
        public int duration;
        public String file_name;
        public String first_name;
        public int h;
        public long id;
        public byte[] iv;
        public byte[] key;
        public String last_name;
        public double lat;
        public String mime_type;
        public String phone_number;
        public String provider;
        public int size;
        public int thumb_h;
        public int thumb_w;
        public String title;
        public String url;
        public int user_id;
        public String venue_id;
        public int w;

        public DecryptedMessageMedia() {
            super();
            this.attributes = new ArrayList();
        }

        public static DecryptedMessageMedia TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_decryptedMessageMediaDocument v0;
            TL_decryptedMessageMediaVideo v0_6;
            switch(arg2) {
                case 846826124: {
                    TL_decryptedMessageMediaPhoto_layer8 v0_12 = new TL_decryptedMessageMediaPhoto_layer8();
                    break;
                }
                case 2063502050: {
                    v0 = new TL_decryptedMessageMediaDocument();
                    break;
                }
                case -1978796689: {
                    TL_decryptedMessageMediaVenue v0_8 = new TL_decryptedMessageMediaVenue();
                    break;
                }
                case -1760785394: {
                    v0_6 = new TL_decryptedMessageMediaVideo();
                    break;
                }
                case -1332395189: {
                    TL_decryptedMessageMediaDocument_layer8 v0_4 = new TL_decryptedMessageMediaDocument_layer8();
                    break;
                }
                case -452652584: {
                    TL_decryptedMessageMediaWebPage v0_2 = new TL_decryptedMessageMediaWebPage();
                    break;
                }
                case -235238024: {
                    TL_decryptedMessageMediaPhoto v0_1 = new TL_decryptedMessageMediaPhoto();
                    break;
                }
                case -90853155: {
                    TL_decryptedMessageMediaExternalDocument v0_14 = new TL_decryptedMessageMediaExternalDocument();
                    break;
                }
                case 144661578: {
                    TL_decryptedMessageMediaEmpty v0_13 = new TL_decryptedMessageMediaEmpty();
                    break;
                }
                case 893913689: {
                    TL_decryptedMessageMediaGeoPoint v0_11 = new TL_decryptedMessageMediaGeoPoint();
                    break;
                }
                case 1290694387: {
                    TL_decryptedMessageMediaVideo_layer8 v0_10 = new TL_decryptedMessageMediaVideo_layer8();
                    break;
                }
                case 1380598109: {
                    TL_decryptedMessageMediaVideo_layer17 v0_9 = new TL_decryptedMessageMediaVideo_layer17();
                    break;
                }
                case 1474341323: {
                    TL_decryptedMessageMediaAudio v0_7 = new TL_decryptedMessageMediaAudio();
                    break;
                }
                case 1485441687: {
                    TL_decryptedMessageMediaContact v0_5 = new TL_decryptedMessageMediaContact();
                    break;
                }
                case 1619031439: {
                    TL_decryptedMessageMediaAudio_layer8 v0_3 = new TL_decryptedMessageMediaAudio_layer8();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_decryptedMessageMediaDocument)v0_6)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DecryptedMessageMedia", Integer.valueOf(arg2)));
                }
            }

            if((((TL_decryptedMessageMediaDocument)v0_6)) != null) {
                ((DecryptedMessageMedia)v0_6).readParams(arg1, arg3);
            }

            return ((DecryptedMessageMedia)v0_6);
        }
    }

    public abstract class DialogPeer extends TLObject {
        public DialogPeer() {
            super();
        }

        public static DialogPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_dialogPeer v0;
            TL_dialogPeerFeed v0_1;
            if(arg2 == -633170927) {
                v0_1 = new TL_dialogPeerFeed();
            }
            else if(arg2 != -445792507) {
                v0 = null;
            }
            else {
                v0 = new TL_dialogPeer();
            }

            if((((TL_dialogPeer)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DialogPeer", Integer.valueOf(arg2)));
                }
            }

            if((((TL_dialogPeer)v0_1)) != null) {
                ((DialogPeer)v0_1).readParams(arg1, arg3);
            }

            return ((DialogPeer)v0_1);
        }
    }

    public class Document extends TLObject {
        public long access_hash;
        public ArrayList attributes;
        public int date;
        public int dc_id;
        public String file_name;
        public long id;
        public byte[] iv;
        public byte[] key;
        public String mime_type;
        public int size;
        public PhotoSize thumb;
        public int user_id;
        public int version;

        public Document() {
            super();
            this.attributes = new ArrayList();
        }

        public static Document TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_documentEncrypted v0;
            switch(arg2) {
                case -1627626714: {
                    TL_document_old v0_5 = new TL_document_old();
                    break;
                }
                case -106717361: {
                    TL_document_layer53 v0_4 = new TL_document_layer53();
                    break;
                }
                case 922273905: {
                    TL_documentEmpty v0_3 = new TL_documentEmpty();
                    break;
                }
                case 1431655766: {
                    TL_documentEncrypted_old v0_2 = new TL_documentEncrypted_old();
                    break;
                }
                case 1431655768: {
                    v0 = new TL_documentEncrypted();
                    break;
                }
                case -2027738169: {
                    TL_document v0_1 = new TL_document();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Document", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((Document)v0).readParams(arg1, arg3);
            }

            return ((Document)v0);
        }
    }

    public class DocumentAttribute extends TLObject {
        public String alt;
        @c(a="documentTitle") public String documentTitle;
        public int duration;
        public String file_name;
        public int flags;
        public int h;
        public boolean mask;
        public TL_maskCoords mask_coords;
        public String performer;
        public boolean round_message;
        public InputStickerSet stickerset;
        public boolean supports_streaming;
        public String title;
        public boolean voice;
        public int w;
        public byte[] waveform;

        public DocumentAttribute() {
            super();
        }

        public static DocumentAttribute TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_documentAttributeImageSize v0;
            TL_documentAttributeAnimated v0_8;
            switch(arg2) {
                case -556656416: {
                    TL_documentAttributeAudio_layer45 v0_12 = new TL_documentAttributeAudio_layer45();
                    break;
                }
                case -83208409: {
                    TL_documentAttributeSticker_old v0_11 = new TL_documentAttributeSticker_old();
                    break;
                }
                case 85215461: {
                    TL_documentAttributeAudio_old v0_10 = new TL_documentAttributeAudio_old();
                    break;
                }
                case 250621158: {
                    TL_documentAttributeVideo v0_9 = new TL_documentAttributeVideo();
                    break;
                }
                case 297109817: {
                    v0_8 = new TL_documentAttributeAnimated();
                    break;
                }
                case 358154344: {
                    TL_documentAttributeFilename v0_7 = new TL_documentAttributeFilename();
                    break;
                }
                case 978674434: {
                    TL_documentAttributeSticker_layer55 v0_6 = new TL_documentAttributeSticker_layer55();
                    break;
                }
                case 1494273227: {
                    TL_documentAttributeVideo_layer65 v0_5 = new TL_documentAttributeVideo_layer65();
                    break;
                }
                case 1662637586: {
                    TL_documentAttributeSticker v0_3 = new TL_documentAttributeSticker();
                    break;
                }
                case 1815593308: {
                    v0 = new TL_documentAttributeImageSize();
                    break;
                }
                case -1744710921: {
                    TL_documentAttributeHasStickers v0_4 = new TL_documentAttributeHasStickers();
                    break;
                }
                case -1739392570: {
                    TL_documentAttributeAudio v0_2 = new TL_documentAttributeAudio();
                    break;
                }
                case -1723033470: {
                    TL_documentAttributeSticker_old2 v0_1 = new TL_documentAttributeSticker_old2();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_documentAttributeImageSize)v0_8)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DocumentAttribute", Integer.valueOf(arg2)));
                }
            }

            if((((TL_documentAttributeImageSize)v0_8)) != null) {
                ((DocumentAttribute)v0_8).readParams(arg1, arg3);
            }

            return ((DocumentAttribute)v0_8);
        }

        public String getDocumentTitle() {
            return this.documentTitle;
        }
    }

    public abstract class DraftMessage extends TLObject {
        public int date;
        public ArrayList entities;
        public int flags;
        public String message;
        public boolean no_webpage;
        public int reply_to_msg_id;

        public DraftMessage() {
            super();
            this.entities = new ArrayList();
        }

        public static DraftMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_draftMessageEmpty v0;
            if(arg2 == -1169445179) {
                TL_draftMessageEmpty_layer81 v0_2 = new TL_draftMessageEmpty_layer81();
            }
            else if(arg2 == -40996577) {
                TL_draftMessage v0_1 = new TL_draftMessage();
            }
            else if(arg2 != 453805082) {
                v0 = null;
            }
            else {
                v0 = new TL_draftMessageEmpty();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in DraftMessage", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((DraftMessage)v0).readParams(arg1, arg3);
            }

            return ((DraftMessage)v0);
        }
    }

    public abstract class EncryptedChat extends TLObject {
        public byte[] a_or_b;
        public long access_hash;
        public int admin_id;
        public byte[] auth_key;
        public int date;
        public long exchange_id;
        public byte[] future_auth_key;
        public long future_key_fingerprint;
        public byte[] g_a;
        public byte[] g_a_or_b;
        public int id;
        public int in_seq_no;
        public int key_create_date;
        public long key_fingerprint;
        public byte[] key_hash;
        public short key_use_count_in;
        public short key_use_count_out;
        public int layer;
        public int mtproto_seq;
        public byte[] nonce;
        public int participant_id;
        public int seq_in;
        public int seq_out;
        public int ttl;
        public int user_id;

        public EncryptedChat() {
            super();
        }

        public static EncryptedChat TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_encryptedChat_old v0;
            TL_encryptedChatWaiting v0_3;
            switch(arg2) {
                case 1006044124: {
                    v0_3 = new TL_encryptedChatWaiting();
                    break;
                }
                case 1711395151: {
                    v0 = new TL_encryptedChat_old();
                    break;
                }
                case -1417756512: {
                    TL_encryptedChatEmpty v0_2 = new TL_encryptedChatEmpty();
                    break;
                }
                case -931638658: {
                    TL_encryptedChatRequested v0_1 = new TL_encryptedChatRequested();
                    break;
                }
                case -94974410: {
                    TL_encryptedChat v0_6 = new TL_encryptedChat();
                    break;
                }
                case -39213129: {
                    TL_encryptedChatRequested_old v0_5 = new TL_encryptedChatRequested_old();
                    break;
                }
                case 332848423: {
                    TL_encryptedChatDiscarded v0_4 = new TL_encryptedChatDiscarded();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_encryptedChat_old)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in EncryptedChat", Integer.valueOf(arg2)));
                }
            }

            if((((TL_encryptedChat_old)v0_3)) != null) {
                ((EncryptedChat)v0_3).readParams(arg1, arg3);
            }

            return ((EncryptedChat)v0_3);
        }
    }

    public abstract class EncryptedFile extends TLObject {
        public long access_hash;
        public int dc_id;
        public long id;
        public int key_fingerprint;
        public int size;

        public EncryptedFile() {
            super();
        }

        public static EncryptedFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_encryptedFile v0;
            if(arg2 == -1038136962) {
                TL_encryptedFileEmpty v0_1 = new TL_encryptedFileEmpty();
            }
            else if(arg2 != 1248893260) {
                v0 = null;
            }
            else {
                v0 = new TL_encryptedFile();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in EncryptedFile", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((EncryptedFile)v0).readParams(arg1, arg3);
            }

            return ((EncryptedFile)v0);
        }
    }

    public abstract class EncryptedMessage extends TLObject {
        public byte[] bytes;
        public int chat_id;
        public int date;
        public EncryptedFile file;
        public long random_id;

        public EncryptedMessage() {
            super();
        }

        public static EncryptedMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_encryptedMessageService v0;
            TL_encryptedMessage v0_1;
            if(arg2 == -317144808) {
                v0_1 = new TL_encryptedMessage();
            }
            else if(arg2 != 594758406) {
                v0 = null;
            }
            else {
                v0 = new TL_encryptedMessageService();
            }

            if((((TL_encryptedMessageService)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in EncryptedMessage", Integer.valueOf(arg2)));
                }
            }

            if((((TL_encryptedMessageService)v0_1)) != null) {
                ((EncryptedMessage)v0_1).readParams(arg1, arg3);
            }

            return ((EncryptedMessage)v0_1);
        }
    }

    public abstract class ExportedChatInvite extends TLObject {
        public String link;

        public ExportedChatInvite() {
            super();
        }

        public static ExportedChatInvite TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_chatInviteEmpty v0;
            if(arg2 == -64092740) {
                TL_chatInviteExported v0_1 = new TL_chatInviteExported();
            }
            else if(arg2 != 1776236393) {
                v0 = null;
            }
            else {
                v0 = new TL_chatInviteEmpty();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ExportedChatInvite", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((ExportedChatInvite)v0).readParams(arg1, arg3);
            }

            return ((ExportedChatInvite)v0);
        }
    }

    public abstract class FileLocation extends TLObject {
        public int dc_id;
        public byte[] iv;
        public byte[] key;
        public int local_id;
        public long secret;
        public long volume_id;

        public FileLocation() {
            super();
        }

        public static FileLocation TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_fileLocationUnavailable v0;
            TL_fileEncryptedLocation v0_1;
            if(arg2 == 1406570614) {
                TL_fileLocation v0_2 = new TL_fileLocation();
            }
            else if(arg2 == 1431655764) {
                v0_1 = new TL_fileEncryptedLocation();
            }
            else if(arg2 != 2086234950) {
                v0 = null;
            }
            else {
                v0 = new TL_fileLocationUnavailable();
            }

            if((((TL_fileLocationUnavailable)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in FileLocation", Integer.valueOf(arg2)));
                }
            }

            if((((TL_fileLocationUnavailable)v0_1)) != null) {
                ((FileLocation)v0_1).readParams(arg1, arg3);
            }

            return ((FileLocation)v0_1);
        }
    }

    public abstract class FoundGif extends TLObject {
        public String content_type;
        public String content_url;
        public Document document;
        public int h;
        public Photo photo;
        public String thumb_url;
        public String url;
        public int w;

        public FoundGif() {
            super();
        }

        public static FoundGif TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_foundGif v0;
            TL_foundGifCached v0_1;
            if(arg2 == -1670052855) {
                v0_1 = new TL_foundGifCached();
            }
            else if(arg2 != 372165663) {
                v0 = null;
            }
            else {
                v0 = new TL_foundGif();
            }

            if((((TL_foundGif)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in FoundGif", Integer.valueOf(arg2)));
                }
            }

            if((((TL_foundGif)v0_1)) != null) {
                ((FoundGif)v0_1).readParams(arg1, arg3);
            }

            return ((FoundGif)v0_1);
        }
    }

    public abstract class GeoPoint extends TLObject {
        public double _long;
        public long access_hash;
        public double lat;

        public GeoPoint() {
            super();
        }

        public static GeoPoint TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_geoPoint_layer81 v0;
            TL_geoPoint v0_2;
            if(arg2 == 43446532) {
                v0_2 = new TL_geoPoint();
            }
            else if(arg2 == 286776671) {
                TL_geoPointEmpty v0_1 = new TL_geoPointEmpty();
            }
            else if(arg2 != 541710092) {
                v0 = null;
            }
            else {
                v0 = new TL_geoPoint_layer81();
            }

            if((((TL_geoPoint_layer81)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in GeoPoint", Integer.valueOf(arg2)));
                }
            }

            if((((TL_geoPoint_layer81)v0_2)) != null) {
                ((GeoPoint)v0_2).readParams(arg1, arg3);
            }

            return ((GeoPoint)v0_2);
        }
    }

    public abstract class GroupCall extends TLObject {
        public long access_hash;
        public int admin_id;
        public int channel_id;
        public TL_groupCallConnection connection;
        public int duration;
        public byte[] encryption_key;
        public int flags;
        public long id;
        public long key_fingerprint;
        public int participants_count;
        public TL_phoneCallProtocol protocol;
        public byte[] reflector_group_tag;
        public byte[] reflector_self_secret;
        public byte[] reflector_self_tag;

        public GroupCall() {
            super();
        }

        public static GroupCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_groupCallDiscarded v0;
            TL_groupCall v0_2;
            if(arg2 == 177149476) {
                v0_2 = new TL_groupCall();
            }
            else if(arg2 == 1829443076) {
                TL_groupCallPrivate v0_1 = new TL_groupCallPrivate();
            }
            else if(arg2 != 2004925620) {
                v0 = null;
            }
            else {
                v0 = new TL_groupCallDiscarded();
            }

            if((((TL_groupCallDiscarded)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in GroupCall", Integer.valueOf(arg2)));
                }
            }

            if((((TL_groupCallDiscarded)v0_2)) != null) {
                ((GroupCall)v0_2).readParams(arg1, arg3);
            }

            return ((GroupCall)v0_2);
        }
    }

    public abstract class GroupCallParticipant extends TLObject {
        public int date;
        public int flags;
        public int inviter_id;
        public byte[] member_tag_hash;
        public TL_inputPhoneCall phone_call;
        public boolean readonly;
        public byte[] streams;
        public int user_id;

        public GroupCallParticipant() {
            super();
        }

        public static GroupCallParticipant TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_groupCallParticipant v0;
            if(arg2 == 930387696) {
                TL_groupCallParticipantInvited v0_3 = new TL_groupCallParticipantInvited();
            }
            else if(arg2 == 1100680690) {
                TL_groupCallParticipantLeft v0_2 = new TL_groupCallParticipantLeft();
            }
            else if(arg2 == 1326135736) {
                TL_groupCallParticipantAdmin v0_1 = new TL_groupCallParticipantAdmin();
            }
            else if(arg2 != 1486730135) {
                v0 = null;
            }
            else {
                v0 = new TL_groupCallParticipant();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in GroupCallParticipant", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((GroupCallParticipant)v0).readParams(arg1, arg3);
            }

            return ((GroupCallParticipant)v0);
        }
    }

    public abstract class InputChannel extends TLObject {
        public long access_hash;
        public int channel_id;

        public InputChannel() {
            super();
        }

        public static InputChannel TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputChannelEmpty v0;
            TL_inputChannel v0_1;
            if(arg2 == -1343524562) {
                v0_1 = new TL_inputChannel();
            }
            else if(arg2 != -292807034) {
                v0 = null;
            }
            else {
                v0 = new TL_inputChannelEmpty();
            }

            if((((TL_inputChannelEmpty)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputChannel", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputChannelEmpty)v0_1)) != null) {
                ((InputChannel)v0_1).readParams(arg1, arg3);
            }

            return ((InputChannel)v0_1);
        }
    }

    public abstract class InputChatPhoto extends TLObject {
        public InputFile file;
        public InputPhoto id;

        public InputChatPhoto() {
            super();
        }

        public static InputChatPhoto TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputChatPhotoEmpty v0;
            TL_inputChatUploadedPhoto v0_1;
            if(arg2 == -1991004873) {
                TL_inputChatPhoto v0_2 = new TL_inputChatPhoto();
            }
            else if(arg2 == -1837345356) {
                v0_1 = new TL_inputChatUploadedPhoto();
            }
            else if(arg2 != 480546647) {
                v0 = null;
            }
            else {
                v0 = new TL_inputChatPhotoEmpty();
            }

            if((((TL_inputChatPhotoEmpty)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputChatPhoto", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputChatPhotoEmpty)v0_1)) != null) {
                ((InputChatPhoto)v0_1).readParams(arg1, arg3);
            }

            return ((InputChatPhoto)v0_1);
        }
    }

    public abstract class InputCheckPasswordSRP extends TLObject {
        public InputCheckPasswordSRP() {
            super();
        }

        public static InputCheckPasswordSRP TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputCheckPasswordSRP v0;
            if(arg2 == -1736378792) {
                TL_inputCheckPasswordEmpty v0_1 = new TL_inputCheckPasswordEmpty();
            }
            else if(arg2 != -763367294) {
                v0 = null;
            }
            else {
                v0 = new TL_inputCheckPasswordSRP();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputCheckPasswordSRP", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputCheckPasswordSRP)v0).readParams(arg1, arg3);
            }

            return ((InputCheckPasswordSRP)v0);
        }
    }

    public abstract class InputDialogPeer extends TLObject {
        public InputDialogPeer() {
            super();
        }

        public static InputDialogPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputDialogPeerFeed v0;
            if(arg2 == -55902537) {
                TL_inputDialogPeer v0_1 = new TL_inputDialogPeer();
            }
            else if(arg2 != 741914831) {
                v0 = null;
            }
            else {
                v0 = new TL_inputDialogPeerFeed();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputDialogPeer", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputDialogPeer)v0).readParams(arg1, arg3);
            }

            return ((InputDialogPeer)v0);
        }
    }

    public abstract class InputDocument extends TLObject {
        public long access_hash;
        public long id;

        public InputDocument() {
            super();
        }

        public static InputDocument TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputDocumentEmpty v0;
            TL_inputDocument v0_1;
            if(arg2 == 410618194) {
                v0_1 = new TL_inputDocument();
            }
            else if(arg2 != 1928391342) {
                v0 = null;
            }
            else {
                v0 = new TL_inputDocumentEmpty();
            }

            if((((TL_inputDocumentEmpty)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputDocument", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputDocumentEmpty)v0_1)) != null) {
                ((InputDocument)v0_1).readParams(arg1, arg3);
            }

            return ((InputDocument)v0_1);
        }
    }

    public abstract class InputEncryptedFile extends TLObject {
        public long access_hash;
        public long id;
        public int key_fingerprint;
        public String md5_checksum;
        public int parts;

        public InputEncryptedFile() {
            super();
        }

        public static InputEncryptedFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputEncryptedFileUploaded v0;
            TL_inputEncryptedFileBigUploaded v0_2;
            if(arg2 == 406307684) {
                TL_inputEncryptedFileEmpty v0_3 = new TL_inputEncryptedFileEmpty();
            }
            else if(arg2 == 767652808) {
                v0_2 = new TL_inputEncryptedFileBigUploaded();
            }
            else if(arg2 == 1511503333) {
                TL_inputEncryptedFile v0_1 = new TL_inputEncryptedFile();
            }
            else if(arg2 != 1690108678) {
                v0 = null;
            }
            else {
                v0 = new TL_inputEncryptedFileUploaded();
            }

            if((((TL_inputEncryptedFileUploaded)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputEncryptedFile", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputEncryptedFileUploaded)v0_2)) != null) {
                ((InputEncryptedFile)v0_2).readParams(arg1, arg3);
            }

            return ((InputEncryptedFile)v0_2);
        }
    }

    public abstract class InputFile extends TLObject {
        public long id;
        public String md5_checksum;
        public String name;
        public int parts;

        public InputFile() {
            super();
        }

        public static InputFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputFileBig v0;
            TL_inputFile v0_1;
            if(arg2 == -181407105) {
                v0_1 = new TL_inputFile();
            }
            else if(arg2 != -95482955) {
                v0 = null;
            }
            else {
                v0 = new TL_inputFileBig();
            }

            if((((TL_inputFileBig)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputFile", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputFileBig)v0_1)) != null) {
                ((InputFile)v0_1).readParams(arg1, arg3);
            }

            return ((InputFile)v0_1);
        }
    }

    public abstract class InputFileLocation extends TLObject {
        public long access_hash;
        public long id;
        public int local_id;
        public long secret;
        public long volume_id;

        public InputFileLocation() {
            super();
        }

        public static InputFileLocation TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputDocumentFileLocation v0;
            TL_inputFileLocation v0_1;
            if(arg2 == -182231723) {
                TL_inputEncryptedFileLocation v0_2 = new TL_inputEncryptedFileLocation();
            }
            else if(arg2 == 342061462) {
                v0_1 = new TL_inputFileLocation();
            }
            else if(arg2 != 1313188841) {
                v0 = null;
            }
            else {
                v0 = new TL_inputDocumentFileLocation();
            }

            if((((TL_inputDocumentFileLocation)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputFileLocation", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputDocumentFileLocation)v0_1)) != null) {
                ((InputFileLocation)v0_1).readParams(arg1, arg3);
            }

            return ((InputFileLocation)v0_1);
        }
    }

    public abstract class InputGame extends TLObject {
        public long access_hash;
        public InputUser bot_id;
        public long id;
        public String short_name;

        public InputGame() {
            super();
        }

        public static InputGame TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputGameID v0;
            if(arg2 == -1020139510) {
                TL_inputGameShortName v0_1 = new TL_inputGameShortName();
            }
            else if(arg2 != 53231223) {
                v0 = null;
            }
            else {
                v0 = new TL_inputGameID();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputGame", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputGame)v0).readParams(arg1, arg3);
            }

            return ((InputGame)v0);
        }
    }

    public abstract class InputGeoPoint extends TLObject {
        public double _long;
        public double lat;

        public InputGeoPoint() {
            super();
        }

        public static InputGeoPoint TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputGeoPoint v0;
            if(arg2 == -457104426) {
                TL_inputGeoPointEmpty v0_1 = new TL_inputGeoPointEmpty();
            }
            else if(arg2 != -206066487) {
                v0 = null;
            }
            else {
                v0 = new TL_inputGeoPoint();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputGeoPoint", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputGeoPoint)v0).readParams(arg1, arg3);
            }

            return ((InputGeoPoint)v0);
        }
    }

    public abstract class InputMedia extends TLObject {
        public String address;
        public ArrayList attributes;
        public InputFile file;
        public String first_name;
        public int flags;
        public InputGeoPoint geo_point;
        public String last_name;
        public String mime_type;
        public boolean nosound_video;
        public int period;
        public String phone_number;
        public String provider;
        public String q;
        public ArrayList stickers;
        public InputFile thumb;
        public String title;
        public int ttl_seconds;
        public String url;
        public String vcard;
        public String venue_id;
        public String venue_type;

        public InputMedia() {
            super();
            this.stickers = new ArrayList();
            this.attributes = new ArrayList();
        }

        public static InputMedia TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputMediaGeoLive v0;
            TL_inputMediaGifExternal v0_5;
            switch(arg2) {
                case -750828557: {
                    TL_inputMediaGame v0_12 = new TL_inputMediaGame();
                    break;
                }
                case -440664550: {
                    TL_inputMediaPhotoExternal v0_11 = new TL_inputMediaPhotoExternal();
                    break;
                }
                case -122978821: {
                    TL_inputMediaContact v0_10 = new TL_inputMediaContact();
                    break;
                }
                case -104578748: {
                    TL_inputMediaGeoPoint v0_9 = new TL_inputMediaGeoPoint();
                    break;
                }
                case -78455655: {
                    TL_inputMediaDocumentExternal v0_8 = new TL_inputMediaDocumentExternal();
                    break;
                }
                case 505969924: {
                    TL_inputMediaUploadedPhoto v0_7 = new TL_inputMediaUploadedPhoto();
                    break;
                }
                case 598418386: {
                    TL_inputMediaDocument v0_6 = new TL_inputMediaDocument();
                    break;
                }
                case 1212395773: {
                    v0_5 = new TL_inputMediaGifExternal();
                    break;
                }
                case 1530447553: {
                    TL_inputMediaUploadedDocument v0_3 = new TL_inputMediaUploadedDocument();
                    break;
                }
                case 2065305999: {
                    v0 = new TL_inputMediaGeoLive();
                    break;
                }
                case -1771768449: {
                    TL_inputMediaEmpty v0_4 = new TL_inputMediaEmpty();
                    break;
                }
                case -1279654347: {
                    TL_inputMediaPhoto v0_2 = new TL_inputMediaPhoto();
                    break;
                }
                case -1052959727: {
                    TL_inputMediaVenue v0_1 = new TL_inputMediaVenue();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_inputMediaGeoLive)v0_5)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputMedia", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputMediaGeoLive)v0_5)) != null) {
                ((InputMedia)v0_5).readParams(arg1, arg3);
            }

            return ((InputMedia)v0_5);
        }
    }

    public abstract class InputNotifyPeer extends TLObject {
        public InputNotifyPeer() {
            super();
        }

        public static InputNotifyPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputNotifyChats v0;
            if(arg2 == -1195615476) {
                TL_inputNotifyPeer v0_2 = new TL_inputNotifyPeer();
            }
            else if(arg2 == 423314455) {
                TL_inputNotifyUsers v0_1 = new TL_inputNotifyUsers();
            }
            else if(arg2 != 1251338318) {
                v0 = null;
            }
            else {
                v0 = new TL_inputNotifyChats();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputNotifyPeer", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputNotifyPeer)v0).readParams(arg1, arg3);
            }

            return ((InputNotifyPeer)v0);
        }
    }

    public abstract class InputPaymentCredentials extends TLObject {
        public TL_dataJSON data;
        public int flags;
        public String google_transaction_id;
        public String id;
        public TL_dataJSON payment_token;
        public boolean save;
        public byte[] tmp_password;

        public InputPaymentCredentials() {
            super();
        }

        public static InputPaymentCredentials TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputPaymentCredentials v0;
            TL_inputPaymentCredentialsAndroidPay v0_1;
            if(arg2 == -1056001329) {
                TL_inputPaymentCredentialsSaved v0_2 = new TL_inputPaymentCredentialsSaved();
            }
            else if(arg2 == -905587442) {
                v0_1 = new TL_inputPaymentCredentialsAndroidPay();
            }
            else if(arg2 != 873977640) {
                v0 = null;
            }
            else {
                v0 = new TL_inputPaymentCredentials();
            }

            if((((TL_inputPaymentCredentials)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputPaymentCredentials", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputPaymentCredentials)v0_1)) != null) {
                ((InputPaymentCredentials)v0_1).readParams(arg1, arg3);
            }

            return ((InputPaymentCredentials)v0_1);
        }
    }

    public abstract class InputPeer extends TLObject {
        public long access_hash;
        public int channel_id;
        public int chat_id;
        public int user_id;

        public InputPeer() {
            super();
        }

        public static InputPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputPeerEmpty v0;
            switch(arg2) {
                case 396093539: {
                    TL_inputPeerChat v0_4 = new TL_inputPeerChat();
                    break;
                }
                case 548253432: {
                    TL_inputPeerChannel v0_3 = new TL_inputPeerChannel();
                    break;
                }
                case 2072935910: {
                    TL_inputPeerUser v0_2 = new TL_inputPeerUser();
                    break;
                }
                case 2107670217: {
                    TL_inputPeerSelf v0_1 = new TL_inputPeerSelf();
                    break;
                }
                case 2134579434: {
                    v0 = new TL_inputPeerEmpty();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputPeer", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputPeer)v0).readParams(arg1, arg3);
            }

            return ((InputPeer)v0);
        }
    }

    public abstract class InputPhoto extends TLObject {
        public long access_hash;
        public long id;

        public InputPhoto() {
            super();
        }

        public static InputPhoto TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputPhotoEmpty v0;
            TL_inputPhoto v0_1;
            if(arg2 == -74070332) {
                v0_1 = new TL_inputPhoto();
            }
            else if(arg2 != 483901197) {
                v0 = null;
            }
            else {
                v0 = new TL_inputPhotoEmpty();
            }

            if((((TL_inputPhotoEmpty)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputPhoto", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputPhotoEmpty)v0_1)) != null) {
                ((InputPhoto)v0_1).readParams(arg1, arg3);
            }

            return ((InputPhoto)v0_1);
        }
    }

    public abstract class InputPrivacyKey extends TLObject {
        public InputPrivacyKey() {
            super();
        }

        public static InputPrivacyKey TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputPrivacyKeyStatusTimestamp v0;
            TL_inputPrivacyKeyPhoneCall v0_1;
            if(arg2 == -1107622874) {
                TL_inputPrivacyKeyChatInvite v0_2 = new TL_inputPrivacyKeyChatInvite();
            }
            else if(arg2 == -88417185) {
                v0_1 = new TL_inputPrivacyKeyPhoneCall();
            }
            else if(arg2 != 1335282456) {
                v0 = null;
            }
            else {
                v0 = new TL_inputPrivacyKeyStatusTimestamp();
            }

            if((((TL_inputPrivacyKeyStatusTimestamp)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputPrivacyKey", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputPrivacyKeyStatusTimestamp)v0_1)) != null) {
                ((InputPrivacyKey)v0_1).readParams(arg1, arg3);
            }

            return ((InputPrivacyKey)v0_1);
        }
    }

    public abstract class InputPrivacyRule extends TLObject {
        public ArrayList users;

        public InputPrivacyRule() {
            super();
            this.users = new ArrayList();
        }

        public static InputPrivacyRule TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputPrivacyValueAllowAll v0;
            TL_inputPrivacyValueAllowContacts v0_3;
            switch(arg2) {
                case -697604407: {
                    TL_inputPrivacyValueDisallowAll v0_5 = new TL_inputPrivacyValueDisallowAll();
                    break;
                }
                case 195371015: {
                    TL_inputPrivacyValueDisallowContacts v0_4 = new TL_inputPrivacyValueDisallowContacts();
                    break;
                }
                case 218751099: {
                    v0_3 = new TL_inputPrivacyValueAllowContacts();
                    break;
                }
                case 320652927: {
                    TL_inputPrivacyValueAllowUsers v0_2 = new TL_inputPrivacyValueAllowUsers();
                    break;
                }
                case 407582158: {
                    v0 = new TL_inputPrivacyValueAllowAll();
                    break;
                }
                case -1877932953: {
                    TL_inputPrivacyValueDisallowUsers v0_1 = new TL_inputPrivacyValueDisallowUsers();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_inputPrivacyValueAllowAll)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputPrivacyRule", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputPrivacyValueAllowAll)v0_3)) != null) {
                ((InputPrivacyRule)v0_3).readParams(arg1, arg3);
            }

            return ((InputPrivacyRule)v0_3);
        }
    }

    public abstract class InputSecureFile extends TLObject {
        public InputSecureFile() {
            super();
        }

        public static InputSecureFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputSecureFile v0;
            TL_inputSecureFileUploaded v0_1;
            if(arg2 == 859091184) {
                v0_1 = new TL_inputSecureFileUploaded();
            }
            else if(arg2 != 1399317950) {
                v0 = null;
            }
            else {
                v0 = new TL_inputSecureFile();
            }

            if((((TL_inputSecureFile)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputSecureFile", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputSecureFile)v0_1)) != null) {
                ((InputSecureFile)v0_1).readParams(arg1, arg3);
            }

            return ((InputSecureFile)v0_1);
        }
    }

    public abstract class InputStickerSet extends TLObject {
        public long access_hash;
        public long id;
        public String short_name;

        public InputStickerSet() {
            super();
        }

        public static InputStickerSet TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputStickerSetEmpty v0;
            if(arg2 == -2044933984) {
                TL_inputStickerSetShortName v0_2 = new TL_inputStickerSetShortName();
            }
            else if(arg2 == -1645763991) {
                TL_inputStickerSetID v0_1 = new TL_inputStickerSetID();
            }
            else if(arg2 != -4838507) {
                v0 = null;
            }
            else {
                v0 = new TL_inputStickerSetEmpty();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputStickerSet", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputStickerSet)v0).readParams(arg1, arg3);
            }

            return ((InputStickerSet)v0);
        }
    }

    public abstract class InputStickeredMedia extends TLObject {
        public InputStickeredMedia() {
            super();
        }

        public static InputStickeredMedia TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputStickeredMediaPhoto v0;
            TL_inputStickeredMediaDocument v0_1;
            if(arg2 == 70813275) {
                v0_1 = new TL_inputStickeredMediaDocument();
            }
            else if(arg2 != 1251549527) {
                v0 = null;
            }
            else {
                v0 = new TL_inputStickeredMediaPhoto();
            }

            if((((TL_inputStickeredMediaPhoto)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputStickeredMedia", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputStickeredMediaPhoto)v0_1)) != null) {
                ((InputStickeredMedia)v0_1).readParams(arg1, arg3);
            }

            return ((InputStickeredMedia)v0_1);
        }
    }

    public abstract class InputUser extends TLObject {
        public long access_hash;
        public int user_id;

        public InputUser() {
            super();
        }

        public static InputUser TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputUserSelf v0;
            TL_inputUserEmpty v0_2;
            if(arg2 == -1182234929) {
                v0_2 = new TL_inputUserEmpty();
            }
            else if(arg2 == -668391402) {
                TL_inputUser v0_1 = new TL_inputUser();
            }
            else if(arg2 != -138301121) {
                v0 = null;
            }
            else {
                v0 = new TL_inputUserSelf();
            }

            if((((TL_inputUserSelf)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputUser", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputUserSelf)v0_2)) != null) {
                ((InputUser)v0_2).readParams(arg1, arg3);
            }

            return ((InputUser)v0_2);
        }
    }

    public abstract class InputWebFileLocation extends TLObject {
        public InputWebFileLocation() {
            super();
        }

        public static InputWebFileLocation TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputWebFileLocation v0;
            if(arg2 == -1625153079) {
                TL_inputWebFileGeoPointLocation v0_1 = new TL_inputWebFileGeoPointLocation();
            }
            else if(arg2 != -1036396922) {
                v0 = null;
            }
            else {
                v0 = new TL_inputWebFileLocation();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in InputWebFileLocation", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((InputWebFileLocation)v0).readParams(arg1, arg3);
            }

            return ((InputWebFileLocation)v0);
        }
    }

    public abstract class KeyboardButton extends TLObject {
        public byte[] data;
        public int flags;
        public String query;
        public boolean same_peer;
        public String text;
        public String url;

        public KeyboardButton() {
            super();
        }

        public static KeyboardButton TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_keyboardButtonCallback v0;
            switch(arg2) {
                case 629866245: {
                    TL_keyboardButtonUrl v0_5 = new TL_keyboardButtonUrl();
                    break;
                }
                case 1358175439: {
                    TL_keyboardButtonGame v0_3 = new TL_keyboardButtonGame();
                    break;
                }
                case 1748655686: {
                    v0 = new TL_keyboardButtonCallback();
                    break;
                }
                case -1560655744: {
                    TL_keyboardButton v0_4 = new TL_keyboardButton();
                    break;
                }
                case -1344716869: {
                    TL_keyboardButtonBuy v0_2 = new TL_keyboardButtonBuy();
                    break;
                }
                case -1318425559: {
                    TL_keyboardButtonRequestPhone v0_1 = new TL_keyboardButtonRequestPhone();
                    break;
                }
                case -59151553: {
                    TL_keyboardButtonRequestGeoLocation v0_7 = new TL_keyboardButtonRequestGeoLocation();
                    break;
                }
                case 90744648: {
                    TL_keyboardButtonSwitchInline v0_6 = new TL_keyboardButtonSwitchInline();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in KeyboardButton", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((KeyboardButton)v0).readParams(arg1, arg3);
            }

            return ((KeyboardButton)v0);
        }
    }

    public abstract class LangPackString extends TLObject {
        public String few_value;
        public int flags;
        public String key;
        public String many_value;
        public String one_value;
        public String other_value;
        public String two_value;
        public String value;
        public String zero_value;

        public LangPackString() {
            super();
        }

        public static LangPackString TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_langPackStringPluralized v0;
            TL_langPackString v0_2;
            if(arg2 == -892239370) {
                v0_2 = new TL_langPackString();
            }
            else if(arg2 == 695856818) {
                TL_langPackStringDeleted v0_1 = new TL_langPackStringDeleted();
            }
            else if(arg2 != 1816636575) {
                v0 = null;
            }
            else {
                v0 = new TL_langPackStringPluralized();
            }

            if((((TL_langPackStringPluralized)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in LangPackString", Integer.valueOf(arg2)));
                }
            }

            if((((TL_langPackStringPluralized)v0_2)) != null) {
                ((LangPackString)v0_2).readParams(arg1, arg3);
            }

            return ((LangPackString)v0_2);
        }
    }

    public class Message extends TLObject {
        public MessageAction action;
        public String attachPath;
        public int date;
        public int destroyTime;
        public long dialog_id;
        public int edit_date;
        public ArrayList entities;
        public int flags;
        public int from_id;
        public MessageFwdHeader fwd_from;
        public int fwd_msg_id;
        public long grouped_id;
        public int id;
        public int layer;
        public int local_id;
        public MessageMedia media;
        public boolean media_unread;
        public boolean mentioned;
        public String message;
        public boolean out;
        public HashMap params;
        public boolean post;
        public String post_author;
        public long random_id;
        public Message replyMessage;
        public ReplyMarkup reply_markup;
        public int reply_to_msg_id;
        public long reply_to_random_id;
        public int reqId;
        public int send_state;
        public int seq_in;
        public int seq_out;
        public boolean silent;
        public Peer to_id;
        public int ttl;
        public boolean unread;
        public int via_bot_id;
        public String via_bot_name;
        public int views;
        public boolean with_my_score;

        public Message() {
            super();
            this.entities = new ArrayList();
            this.send_state = 0;
            this.fwd_msg_id = 0;
            this.attachPath = "";
            this.local_id = 0;
        }

        public static Message TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_message_old7 v0;
            TL_message v0_11;
            switch(arg2) {
                case -260565816: {
                    TL_message_old5 v0_1 = new TL_message_old5();
                    break;
                }
                case 99903492: {
                    TL_messageForwarded_old v0_19 = new TL_messageForwarded_old();
                    break;
                }
                case 495384334: {
                    TL_messageService_old2 v0_17 = new TL_messageService_old2();
                    break;
                }
                case 585853626: {
                    TL_message_old v0_15 = new TL_message_old();
                    break;
                }
                case 736885382: {
                    TL_message_old6 v0_13 = new TL_message_old6();
                    break;
                }
                case 1157215293: {
                    v0_11 = new TL_message();
                    break;
                }
                case 1431655928: {
                    TL_message_secret_old v0_9 = new TL_message_secret_old();
                    break;
                }
                case 1431655929: {
                    TL_message_secret_layer72 v0_7 = new TL_message_secret_layer72();
                    break;
                }
                case 1431655930: {
                    TL_message_secret v0_5 = new TL_message_secret();
                    break;
                }
                case 1450613171: {
                    TL_message_old2 v0_3 = new TL_message_old2();
                    break;
                }
                case 1537633299: {
                    v0 = new TL_message_old7();
                    break;
                }
                case -2082087340: {
                    TL_messageEmpty v0_20 = new TL_messageEmpty();
                    break;
                }
                case -1864508399: {
                    TL_message_layer72 v0_18 = new TL_message_layer72();
                    break;
                }
                case -1642487306: {
                    TL_messageService v0_16 = new TL_messageService();
                    break;
                }
                case -1618124613: {
                    TL_messageService_old v0_14 = new TL_messageService_old();
                    break;
                }
                case -1553471722: {
                    TL_messageForwarded_old2 v0_12 = new TL_messageForwarded_old2();
                    break;
                }
                case -1481959023: {
                    TL_message_old3 v0_10 = new TL_message_old3();
                    break;
                }
                case -1066691065: {
                    TL_messageService_layer48 v0_8 = new TL_messageService_layer48();
                    break;
                }
                case -1063525281: {
                    TL_message_layer68 v0_6 = new TL_message_layer68();
                    break;
                }
                case -1023016155: {
                    TL_message_old4 v0_4 = new TL_message_old4();
                    break;
                }
                case -913120932: {
                    TL_message_layer47 v0_2 = new TL_message_layer47();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_message_old7)v0_11)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Message", Integer.valueOf(arg2)));
                }
            }

            if((((TL_message_old7)v0_11)) != null) {
                ((Message)v0_11).readParams(arg1, arg3);
            }

            return ((Message)v0_11);
        }

        public void readAttachPath(AbstractSerializedData arg8, int arg9) {
            int v3;
            int v0 = this.media == null || ((this.media instanceof TL_messageMediaEmpty)) || ((this.media instanceof TL_messageMediaWebPage)) ? 0 : 1;
            if(!TextUtils.isEmpty(this.message)) {
                if(!(this.media instanceof TL_messageMediaPhoto_old) && !(this.media instanceof TL_messageMediaPhoto_layer68) && !(this.media instanceof TL_messageMediaPhoto_layer74) && !(this.media instanceof TL_messageMediaDocument_old) && !(this.media instanceof TL_messageMediaDocument_layer68) && !(this.media instanceof TL_messageMediaDocument_layer74)) {
                    goto label_40;
                }

                if(!this.message.startsWith("-1")) {
                    goto label_40;
                }

                v3 = 1;
            }
            else {
            label_40:
                v3 = 0;
            }

            if((this.out) || this.to_id != null && this.to_id.user_id != 0 && this.to_id.user_id == this.from_id && this.from_id == arg9) {
                int v4 = 3;
                if(this.id >= 0 && v0 == 0 && this.send_state != v4) {
                    goto label_126;
                }

                arg9 = 2;
                if(v0 != 0 && v3 != 0) {
                    if(this.message.length() > 6 && this.message.charAt(arg9) == 95) {
                        this.params = new HashMap();
                        this.params.put("ve", this.message);
                    }

                    if(this.params == null && this.message.length() != arg9) {
                        goto label_85;
                    }

                    this.message = "";
                }

            label_85:
                if(arg8.remaining() <= 0) {
                    goto label_126;
                }

                this.attachPath = arg8.readString(false);
                if(this.id >= 0 && this.send_state != v4) {
                    goto label_126;
                }

                if(!this.attachPath.startsWith("||")) {
                    goto label_126;
                }

                String[] v0_1 = this.attachPath.split("\\|\\|");
                if(v0_1.length <= 0) {
                    goto label_126;
                }

                if(this.params == null) {
                    this.params = new HashMap();
                }

                for(v3 = 1; v3 < v0_1.length - 1; ++v3) {
                    String[] v4_1 = v0_1[v3].split("\\|=\\|");
                    if(v4_1.length == arg9) {
                        this.params.put(v4_1[0], v4_1[1]);
                    }
                }

                this.attachPath = v0_1[v0_1.length - 1];
            }

        label_126:
            if((this.flags & 4) != 0 && this.id < 0) {
                this.fwd_msg_id = arg8.readInt32(false);
            }
        }

        protected void writeAttachPath(AbstractSerializedData arg6) {
            if(((this instanceof TL_message_secret)) || ((this instanceof TL_message_secret_layer72))) {
                arg6.writeString(this.attachPath);
            }
            else {
                String v0 = this.attachPath != null ? this.attachPath : "";
                if((this.id < 0 || this.send_state == 3) && (this.params != null && this.params.size() > 0)) {
                    Iterator v1 = this.params.entrySet().iterator();
                    while(v1.hasNext()) {
                        Object v2 = v1.next();
                        v0 = ((Map$Entry)v2).getKey() + "|=|" + ((Map$Entry)v2).getValue() + "||" + v0;
                    }

                    v0 = "||" + v0;
                }

                arg6.writeString(v0);
                if((this.flags & 4) == 0) {
                    return;
                }

                if(this.id >= 0) {
                    return;
                }

                arg6.writeInt32(this.fwd_msg_id);
            }
        }
    }

    public abstract class MessageAction extends TLObject {
        public String address;
        public TL_inputGroupCall call;
        public long call_id;
        public int channel_id;
        public int chat_id;
        public String currency;
        public int duration;
        public DecryptedMessageAction encryptedAction;
        public int flags;
        public long game_id;
        public int inviter_id;
        public String message;
        public UserProfilePhoto newUserPhoto;
        public Photo photo;
        public PhoneCallDiscardReason reason;
        public int score;
        public String title;
        public long total_amount;
        public int ttl;
        public int user_id;
        public ArrayList users;

        public MessageAction() {
            super();
            this.users = new ArrayList();
        }

        public static MessageAction TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messageActionChatEditPhoto v0;
            TL_messageActionUserUpdatedPhoto v0_25;
            switch(arg2) {
                case 1371385889: {
                    TL_messageActionChatMigrateTo v0_27 = new TL_messageActionChatMigrateTo();
                    break;
                }
                case 1431655760: {
                    TL_messageActionUserJoined v0_26 = new TL_messageActionUserJoined();
                    break;
                }
                case 1431655761: {
                    v0_25 = new TL_messageActionUserUpdatedPhoto();
                    break;
                }
                case 1431655762: {
                    TL_messageActionTTLChange v0_24 = new TL_messageActionTTLChange();
                    break;
                }
                case 1431655767: {
                    TL_messageActionCreatedBroadcastList v0_22 = new TL_messageActionCreatedBroadcastList();
                    break;
                }
                case 1431655925: {
                    TL_messageActionLoginUnknownLocation v0_20 = new TL_messageActionLoginUnknownLocation();
                    break;
                }
                case 1431655927: {
                    TL_messageEncryptedAction v0_18 = new TL_messageEncryptedAction();
                    break;
                }
                case 1581055051: {
                    TL_messageActionChatAddUser_old v0_16 = new TL_messageActionChatAddUser_old();
                    break;
                }
                case 2047704898: {
                    TL_messageActionGroupCall v0_14 = new TL_messageActionGroupCall();
                    break;
                }
                case 2144015272: {
                    v0 = new TL_messageActionChatEditPhoto();
                    break;
                }
                case -2132731265: {
                    TL_messageActionPhoneCall v0_23 = new TL_messageActionPhoneCall();
                    break;
                }
                case -1834538890: {
                    TL_messageActionGameScore v0_21 = new TL_messageActionGameScore();
                    break;
                }
                case -1799538451: {
                    TL_messageActionPinMessage v0_19 = new TL_messageActionPinMessage();
                    break;
                }
                case -1781355374: {
                    TL_messageActionChannelCreate v0_17 = new TL_messageActionChannelCreate();
                    break;
                }
                case -1780220945: {
                    TL_messageActionChatDeletePhoto v0_15 = new TL_messageActionChatDeletePhoto();
                    break;
                }
                case -1615153660: {
                    TL_messageActionHistoryClear v0_13 = new TL_messageActionHistoryClear();
                    break;
                }
                case -1503425638: {
                    TL_messageActionChatCreate v0_12 = new TL_messageActionChatCreate();
                    break;
                }
                case -1410748418: {
                    TL_messageActionBotAllowed v0_11 = new TL_messageActionBotAllowed();
                    break;
                }
                case -1336546578: {
                    TL_messageActionChannelMigrateFrom v0_10 = new TL_messageActionChannelMigrateFrom();
                    break;
                }
                case -1297179892: {
                    TL_messageActionChatDeleteUser v0_9 = new TL_messageActionChatDeleteUser();
                    break;
                }
                case -1247687078: {
                    TL_messageActionChatEditTitle v0_8 = new TL_messageActionChatEditTitle();
                    break;
                }
                case -1230047312: {
                    TL_messageActionEmpty v0_7 = new TL_messageActionEmpty();
                    break;
                }
                case -648257196: {
                    TL_messageActionSecureValuesSent v0_6 = new TL_messageActionSecureValuesSent();
                    break;
                }
                case -123931160: {
                    TL_messageActionChatJoinedByLink v0_5 = new TL_messageActionChatJoinedByLink();
                    break;
                }
                case -85549226: {
                    TL_messageActionCustomAction v0_4 = new TL_messageActionCustomAction();
                    break;
                }
                case 1080663248: {
                    TL_messageActionPaymentSent v0_3 = new TL_messageActionPaymentSent();
                    break;
                }
                case 1200788123: {
                    TL_messageActionScreenshotTaken v0_2 = new TL_messageActionScreenshotTaken();
                    break;
                }
                case 1217033015: {
                    TL_messageActionChatAddUser v0_1 = new TL_messageActionChatAddUser();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_messageActionChatEditPhoto)v0_25)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in MessageAction", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messageActionChatEditPhoto)v0_25)) != null) {
                ((MessageAction)v0_25).readParams(arg1, arg3);
            }

            return ((MessageAction)v0_25);
        }
    }

    public abstract class MessageEntity extends TLObject {
        public String language;
        public int length;
        public int offset;
        public String url;

        public MessageEntity() {
            super();
        }

        public static MessageEntity TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messageEntityTextUrl v0;
            TL_messageEntityCode v0_13;
            switch(arg2) {
                case -100378723: {
                    TL_messageEntityMention v0_1 = new TL_messageEntityMention();
                    break;
                }
                case 546203849: {
                    TL_inputMessageEntityMentionName v0_14 = new TL_inputMessageEntityMentionName();
                    break;
                }
                case 681706865: {
                    v0_13 = new TL_messageEntityCode();
                    break;
                }
                case 892193368: {
                    TL_messageEntityMentionName v0_12 = new TL_messageEntityMentionName();
                    break;
                }
                case 1280209983: {
                    TL_messageEntityCashtag v0_11 = new TL_messageEntityCashtag();
                    break;
                }
                case 1692693954: {
                    TL_messageEntityEmail v0_10 = new TL_messageEntityEmail();
                    break;
                }
                case 1827637959: {
                    TL_messageEntityBotCommand v0_9 = new TL_messageEntityBotCommand();
                    break;
                }
                case 1859134776: {
                    TL_messageEntityUrl v0_7 = new TL_messageEntityUrl();
                    break;
                }
                case 1868782349: {
                    TL_messageEntityHashtag v0_5 = new TL_messageEntityHashtag();
                    break;
                }
                case 1938967520: {
                    TL_messageEntityPre v0_3 = new TL_messageEntityPre();
                    break;
                }
                case 1990644519: {
                    v0 = new TL_messageEntityTextUrl();
                    break;
                }
                case -2106619040: {
                    TL_messageEntityItalic v0_8 = new TL_messageEntityItalic();
                    break;
                }
                case -1687559349: {
                    TL_messageEntityPhone v0_6 = new TL_messageEntityPhone();
                    break;
                }
                case -1148011883: {
                    TL_messageEntityUnknown v0_4 = new TL_messageEntityUnknown();
                    break;
                }
                case -1117713463: {
                    TL_messageEntityBold v0_2 = new TL_messageEntityBold();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_messageEntityTextUrl)v0_13)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in MessageEntity", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messageEntityTextUrl)v0_13)) != null) {
                ((MessageEntity)v0_13).readParams(arg1, arg3);
            }

            return ((MessageEntity)v0_13);
        }
    }

    public abstract class MessageFwdHeader extends TLObject {
        public int channel_id;
        public int channel_post;
        public int date;
        public int flags;
        public int from_id;
        public String post_author;
        public int saved_from_msg_id;
        public Peer saved_from_peer;

        public MessageFwdHeader() {
            super();
        }

        public static MessageFwdHeader TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messageFwdHeader v0;
            if(arg2 == -947462709) {
                TL_messageFwdHeader_layer68 v0_2 = new TL_messageFwdHeader_layer68();
            }
            else if(arg2 == -85986132) {
                TL_messageFwdHeader_layer72 v0_1 = new TL_messageFwdHeader_layer72();
            }
            else if(arg2 != 1436466797) {
                v0 = null;
            }
            else {
                v0 = new TL_messageFwdHeader();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in MessageFwdHeader", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((MessageFwdHeader)v0).readParams(arg1, arg3);
            }

            return ((MessageFwdHeader)v0);
        }
    }

    public class MessageMedia extends TLObject {
        public String address;
        public Audio audio_unused;
        public byte[] bytes;
        public String captionLegacy;
        public String currency;
        public String description;
        public Document document;
        public String first_name;
        public int flags;
        public TL_game game;
        public GeoPoint geo;
        public String last_name;
        public int period;
        public String phone_number;
        public Photo photo;
        public String provider;
        public int receipt_msg_id;
        public boolean shipping_address_requested;
        public String start_param;
        public boolean test;
        public String title;
        public long total_amount;
        public int ttl_seconds;
        public int user_id;
        public String vcard;
        public String venue_id;
        public String venue_type;
        public Video video_unused;
        public WebPage webpage;

        public MessageMedia() {
            super();
        }

        public static MessageMedia TLdeserialize(AbstractSerializedData arg4, int arg5, boolean arg6) {
            String v6;
            Document v5;
            TL_messageMediaDocument v4;
            TL_messageMediaDocument_layer74 v0;
            TL_messageMediaInvoice v0_4;
            switch(arg5) {
                case -38694904: {
                    TL_messageMediaGame v0_6 = new TL_messageMediaGame();
                    break;
                }
                case 694364726: {
                    TL_messageMediaUnsupported_old v0_3 = new TL_messageMediaUnsupported_old();
                    break;
                }
                case 784356159: {
                    TL_messageMediaVenue v0_1 = new TL_messageMediaVenue();
                    break;
                }
                case 802824708: {
                    TL_messageMediaDocument_old v0_21 = new TL_messageMediaDocument_old();
                    break;
                }
                case 1032643901: {
                    TL_messageMediaPhoto_layer68 v0_19 = new TL_messageMediaPhoto_layer68();
                    break;
                }
                case 1038967584: {
                    TL_messageMediaEmpty v0_17 = new TL_messageMediaEmpty();
                    break;
                }
                case 1457575028: {
                    TL_messageMediaGeo v0_15 = new TL_messageMediaGeo();
                    break;
                }
                case 1540298357: {
                    TL_messageMediaVideo_layer45 v0_13 = new TL_messageMediaVideo_layer45();
                    break;
                }
                case 1585262393: {
                    TL_messageMediaContact_layer81 v0_11 = new TL_messageMediaContact_layer81();
                    break;
                }
                case 1766936791: {
                    TL_messageMediaPhoto v0_9 = new TL_messageMediaPhoto();
                    break;
                }
                case 2031269663: {
                    TL_messageMediaVenue_layer71 v0_7 = new TL_messageMediaVenue_layer71();
                    break;
                }
                case 2084316681: {
                    TL_messageMediaGeoLive v0_5 = new TL_messageMediaGeoLive();
                    break;
                }
                case 2084836563: {
                    v0 = new TL_messageMediaDocument_layer74();
                    break;
                }
                case -2074799289: {
                    v0_4 = new TL_messageMediaInvoice();
                    break;
                }
                case -1666158377: {
                    TL_messageMediaDocument v0_2 = new TL_messageMediaDocument();
                    break;
                }
                case -1618676578: {
                    TL_messageMediaUnsupported v0_22 = new TL_messageMediaUnsupported();
                    break;
                }
                case -1563278704: {
                    TL_messageMediaVideo_old v0_20 = new TL_messageMediaVideo_old();
                    break;
                }
                case -1557277184: {
                    TL_messageMediaWebPage v0_18 = new TL_messageMediaWebPage();
                    break;
                }
                case -1256047857: {
                    TL_messageMediaPhoto_layer74 v0_16 = new TL_messageMediaPhoto_layer74();
                    break;
                }
                case -961117440: {
                    TL_messageMediaAudio_layer45 v0_14 = new TL_messageMediaAudio_layer45();
                    break;
                }
                case -926655958: {
                    TL_messageMediaPhoto_old v0_12 = new TL_messageMediaPhoto_old();
                    break;
                }
                case -873313984: {
                    TL_messageMediaContact v0_10 = new TL_messageMediaContact();
                    break;
                }
                case -203411800: {
                    TL_messageMediaDocument_layer68 v0_8 = new TL_messageMediaDocument_layer68();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_messageMediaDocument_layer74)v0_4)) == null) {
                if(!arg6) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in MessageMedia", Integer.valueOf(arg5)));
                }
            }

            if((((TL_messageMediaDocument_layer74)v0_4)) != null) {
                ((MessageMedia)v0_4).readParams(arg4, arg6);
                arg5 = 3;
                if(((MessageMedia)v0_4).video_unused != null) {
                    v4 = new TL_messageMediaDocument();
                    if((((MessageMedia)v0_4).video_unused instanceof TL_videoEncrypted)) {
                        v4.document = new TL_documentEncrypted();
                        v4.document.key = ((MessageMedia)v0_4).video_unused.key;
                        v4.document.iv = ((MessageMedia)v0_4).video_unused.iv;
                    }
                    else {
                        v4.document = new TL_document();
                    }

                    v4.flags = arg5;
                    v4.document.id = ((MessageMedia)v0_4).video_unused.id;
                    v4.document.access_hash = ((MessageMedia)v0_4).video_unused.access_hash;
                    v4.document.date = ((MessageMedia)v0_4).video_unused.date;
                    if(((MessageMedia)v0_4).video_unused.mime_type != null) {
                        v5 = v4.document;
                        v6 = ((MessageMedia)v0_4).video_unused.mime_type;
                    }
                    else {
                        v5 = v4.document;
                        v6 = "video/mp4";
                    }

                    v5.mime_type = v6;
                    v4.document.size = ((MessageMedia)v0_4).video_unused.size;
                    v4.document.thumb = ((MessageMedia)v0_4).video_unused.thumb;
                    v4.document.dc_id = ((MessageMedia)v0_4).video_unused.dc_id;
                    v4.captionLegacy = ((MessageMedia)v0_4).captionLegacy;
                    TL_documentAttributeVideo v5_1 = new TL_documentAttributeVideo();
                    v5_1.w = ((MessageMedia)v0_4).video_unused.w;
                    v5_1.h = ((MessageMedia)v0_4).video_unused.h;
                    v5_1.duration = ((MessageMedia)v0_4).video_unused.duration;
                    v4.document.attributes.add(v5_1);
                    if(v4.captionLegacy != null) {
                        goto label_243;
                    }
                }
                else {
                    if(((MessageMedia)v0_4).audio_unused == null) {
                        goto label_242;
                    }

                    v4 = new TL_messageMediaDocument();
                    if((((MessageMedia)v0_4).audio_unused instanceof TL_audioEncrypted)) {
                        v4.document = new TL_documentEncrypted();
                        v4.document.key = ((MessageMedia)v0_4).audio_unused.key;
                        v4.document.iv = ((MessageMedia)v0_4).audio_unused.iv;
                    }
                    else {
                        v4.document = new TL_document();
                    }

                    v4.flags = arg5;
                    v4.document.id = ((MessageMedia)v0_4).audio_unused.id;
                    v4.document.access_hash = ((MessageMedia)v0_4).audio_unused.access_hash;
                    v4.document.date = ((MessageMedia)v0_4).audio_unused.date;
                    if(((MessageMedia)v0_4).audio_unused.mime_type != null) {
                        v5 = v4.document;
                        v6 = ((MessageMedia)v0_4).audio_unused.mime_type;
                    }
                    else {
                        v5 = v4.document;
                        v6 = "audio/ogg";
                    }

                    v5.mime_type = v6;
                    v4.document.size = ((MessageMedia)v0_4).audio_unused.size;
                    v4.document.thumb = new TL_photoSizeEmpty();
                    v4.document.thumb.type = "s";
                    v4.document.dc_id = ((MessageMedia)v0_4).audio_unused.dc_id;
                    v4.captionLegacy = ((MessageMedia)v0_4).captionLegacy;
                    TL_documentAttributeAudio v5_2 = new TL_documentAttributeAudio();
                    v5_2.duration = ((MessageMedia)v0_4).audio_unused.duration;
                    v5_2.voice = true;
                    v4.document.attributes.add(v5_2);
                    if(v4.captionLegacy != null) {
                        goto label_243;
                    }
                }

                v4.captionLegacy = "";
            }
            else {
            label_242:
                TL_messageMediaDocument_layer74 v4_1 = ((TL_messageMediaDocument_layer74)v0_4);
            }

        label_243:
            return ((MessageMedia)v4);
        }
    }

    public abstract class MessagesFilter extends TLObject {
        public int flags;
        public boolean missed;

        public MessagesFilter() {
            super();
        }

        public static MessagesFilter TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputMessagesFilterUrl v0;
            TL_inputMessagesFilterVideo v0_6;
            switch(arg2) {
                case 928101534: {
                    TL_inputMessagesFilterMusic v0_13 = new TL_inputMessagesFilterMusic();
                    break;
                }
                case 975236280: {
                    TL_inputMessagesFilterChatPhotos v0_11 = new TL_inputMessagesFilterChatPhotos();
                    break;
                }
                case 1358283666: {
                    TL_inputMessagesFilterVoice v0_9 = new TL_inputMessagesFilterVoice();
                    break;
                }
                case 1458172132: {
                    TL_inputMessagesFilterPhotoVideo v0_7 = new TL_inputMessagesFilterPhotoVideo();
                    break;
                }
                case 1474492012: {
                    TL_inputMessagesFilterEmpty v0_5 = new TL_inputMessagesFilterEmpty();
                    break;
                }
                case 2054952868: {
                    TL_inputMessagesFilterRoundVoice v0_3 = new TL_inputMessagesFilterRoundVoice();
                    break;
                }
                case 2129714567: {
                    v0 = new TL_inputMessagesFilterUrl();
                    break;
                }
                case -2134272152: {
                    TL_inputMessagesFilterPhoneCalls v0_12 = new TL_inputMessagesFilterPhoneCalls();
                    break;
                }
                case -1777752804: {
                    TL_inputMessagesFilterPhotos v0_10 = new TL_inputMessagesFilterPhotos();
                    break;
                }
                case -1629621880: {
                    TL_inputMessagesFilterDocument v0_8 = new TL_inputMessagesFilterDocument();
                    break;
                }
                case -1614803355: {
                    v0_6 = new TL_inputMessagesFilterVideo();
                    break;
                }
                case -1253451181: {
                    TL_inputMessagesFilterRoundVideo v0_4 = new TL_inputMessagesFilterRoundVideo();
                    break;
                }
                case -1040652646: {
                    TL_inputMessagesFilterMyMentions v0_2 = new TL_inputMessagesFilterMyMentions();
                    break;
                }
                case -648121413: {
                    TL_inputMessagesFilterPhotoVideoDocuments v0_1 = new TL_inputMessagesFilterPhotoVideoDocuments();
                    break;
                }
                case -530392189: {
                    TL_inputMessagesFilterContacts v0_16 = new TL_inputMessagesFilterContacts();
                    break;
                }
                case -419271411: {
                    TL_inputMessagesFilterGeo v0_15 = new TL_inputMessagesFilterGeo();
                    break;
                }
                case -3644025: {
                    TL_inputMessagesFilterGif v0_14 = new TL_inputMessagesFilterGif();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_inputMessagesFilterUrl)v0_6)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in MessagesFilter", Integer.valueOf(arg2)));
                }
            }

            if((((TL_inputMessagesFilterUrl)v0_6)) != null) {
                ((MessagesFilter)v0_6).readParams(arg1, arg3);
            }

            return ((MessagesFilter)v0_6);
        }
    }

    public abstract class NotifyPeer extends TLObject {
        public Peer peer;

        public NotifyPeer() {
            super();
        }

        public static NotifyPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_notifyChats v0;
            if(arg2 == -1613493288) {
                TL_notifyPeer v0_2 = new TL_notifyPeer();
            }
            else if(arg2 == -1261946036) {
                TL_notifyUsers v0_1 = new TL_notifyUsers();
            }
            else if(arg2 != -1073230141) {
                v0 = null;
            }
            else {
                v0 = new TL_notifyChats();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in NotifyPeer", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((NotifyPeer)v0).readParams(arg1, arg3);
            }

            return ((NotifyPeer)v0);
        }
    }

    public abstract class Page extends TLObject {
        public ArrayList blocks;
        public ArrayList documents;
        public ArrayList photos;

        public Page() {
            super();
            this.blocks = new ArrayList();
            this.photos = new ArrayList();
            this.documents = new ArrayList();
        }

        public static Page TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_pageFull v0;
            TL_pagePart_layer67 v0_3;
            if(arg2 == -1913754556) {
                v0_3 = new TL_pagePart_layer67();
            }
            else if(arg2 == -1908433218) {
                TL_pagePart v0_2 = new TL_pagePart();
            }
            else if(arg2 == -677274263) {
                TL_pageFull_layer67 v0_1 = new TL_pageFull_layer67();
            }
            else if(arg2 != 1433323434) {
                v0 = null;
            }
            else {
                v0 = new TL_pageFull();
            }

            if((((TL_pageFull)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Page", Integer.valueOf(arg2)));
                }
            }

            if((((TL_pageFull)v0_3)) != null) {
                ((Page)v0_3).readParams(arg1, arg3);
            }

            return ((Page)v0_3);
        }
    }

    public abstract class PageBlock extends TLObject {
        public boolean allow_scrolling;
        public long audio_id;
        public String author;
        public long author_photo_id;
        public boolean autoplay;
        public ArrayList blocks;
        public boolean bottom;
        public RichText caption;
        public Chat channel;
        public PageBlock cover;
        public int date;
        public boolean first;
        public int flags;
        public boolean full_width;
        public int h;
        public String html;
        public String language;
        public int level;
        public boolean loop;
        public int mid;
        public String name;
        public boolean ordered;
        public long photo_id;
        public long poster_photo_id;
        public int published_date;
        public RichText text;
        public String url;
        public long video_id;
        public int w;
        public long webpage_id;

        public PageBlock() {
            super();
            this.blocks = new ArrayList();
        }

        public static PageBlock TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_pageBlockTitle v0;
            TL_pageBlockVideo v0_8;
            switch(arg2) {
                case 1890305021: {
                    v0 = new TL_pageBlockTitle();
                    break;
                }
                case -1879401953: {
                    TL_pageBlockSubtitle v0_17 = new TL_pageBlockSubtitle();
                    break;
                }
                case -1162877472: {
                    TL_pageBlockAuthorDate v0_15 = new TL_pageBlockAuthorDate();
                    break;
                }
                case -1076861716: {
                    TL_pageBlockHeader v0_13 = new TL_pageBlockHeader();
                    break;
                }
                case -1066346178: {
                    TL_pageBlockPreformatted v0_12 = new TL_pageBlockPreformatted();
                    break;
                }
                case -840826671: {
                    TL_pageBlockEmbed v0_11 = new TL_pageBlockEmbed();
                    break;
                }
                case -837994576: {
                    TL_pageBlockAnchor v0_10 = new TL_pageBlockAnchor();
                    break;
                }
                case -650782469: {
                    TL_pageBlockEmbed_layer60 v0_9 = new TL_pageBlockEmbed_layer60();
                    break;
                }
                case -640214938: {
                    v0_8 = new TL_pageBlockVideo();
                    break;
                }
                case -618614392: {
                    TL_pageBlockDivider v0_7 = new TL_pageBlockDivider();
                    break;
                }
                case -372860542: {
                    TL_pageBlockPhoto v0_6 = new TL_pageBlockPhoto();
                    break;
                }
                case -283684427: {
                    TL_pageBlockChannel v0_5 = new TL_pageBlockChannel();
                    break;
                }
                case -248793375: {
                    TL_pageBlockSubheader v0_4 = new TL_pageBlockSubheader();
                    break;
                }
                case 145955919: {
                    TL_pageBlockCollage v0_3 = new TL_pageBlockCollage();
                    break;
                }
                case 319588707: {
                    TL_pageBlockSlideshow v0_2 = new TL_pageBlockSlideshow();
                    break;
                }
                case 324435594: {
                    TL_pageBlockUnsupported v0_1 = new TL_pageBlockUnsupported();
                    break;
                }
                case 641563686: {
                    TL_pageBlockBlockquote v0_24 = new TL_pageBlockBlockquote();
                    break;
                }
                case 690781161: {
                    TL_pageBlockEmbedPost v0_23 = new TL_pageBlockEmbedPost();
                    break;
                }
                case 834148991: {
                    TL_pageBlockAudio v0_22 = new TL_pageBlockAudio();
                    break;
                }
                case 972174080: {
                    TL_pageBlockCover v0_21 = new TL_pageBlockCover();
                    break;
                }
                case 978896884: {
                    TL_pageBlockList v0_20 = new TL_pageBlockList();
                    break;
                }
                case 1029399794: {
                    TL_pageBlockAuthorDate_layer60 v0_19 = new TL_pageBlockAuthorDate_layer60();
                    break;
                }
                case 1182402406: {
                    TL_pageBlockParagraph v0_18 = new TL_pageBlockParagraph();
                    break;
                }
                case 1216809369: {
                    TL_pageBlockFooter v0_16 = new TL_pageBlockFooter();
                    break;
                }
                case 1329878739: {
                    TL_pageBlockPullquote v0_14 = new TL_pageBlockPullquote();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_pageBlockTitle)v0_8)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PageBlock", Integer.valueOf(arg2)));
                }
            }

            if((((TL_pageBlockTitle)v0_8)) != null) {
                ((PageBlock)v0_8).readParams(arg1, arg3);
            }

            return ((PageBlock)v0_8);
        }
    }

    public abstract class PasswordKdfAlgo extends TLObject {
        public PasswordKdfAlgo() {
            super();
        }

        public static PasswordKdfAlgo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow v0;
            if(arg2 == -732254058) {
                TL_passwordKdfAlgoUnknown v0_1 = new TL_passwordKdfAlgoUnknown();
            }
            else if(arg2 != 982592842) {
                v0 = null;
            }
            else {
                v0 = new TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PasswordKdfAlgo", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((PasswordKdfAlgo)v0).readParams(arg1, arg3);
            }

            return ((PasswordKdfAlgo)v0);
        }
    }

    public class Peer extends TLObject {
        public int channel_id;
        public int chat_id;
        public int user_id;

        public Peer() {
            super();
        }

        public static Peer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_peerChannel v0;
            TL_peerChat v0_1;
            if(arg2 == -1649296275) {
                TL_peerUser v0_2 = new TL_peerUser();
            }
            else if(arg2 == -1160714821) {
                v0_1 = new TL_peerChat();
            }
            else if(arg2 != -1109531342) {
                v0 = null;
            }
            else {
                v0 = new TL_peerChannel();
            }

            if((((TL_peerChannel)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Peer", Integer.valueOf(arg2)));
                }
            }

            if((((TL_peerChannel)v0_1)) != null) {
                ((Peer)v0_1).readParams(arg1, arg3);
            }

            return ((Peer)v0_1);
        }
    }

    public abstract class PeerNotifySettings extends TLObject {
        public int events_mask;
        public int flags;
        public int mute_until;
        public boolean show_previews;
        public boolean silent;
        public String sound;

        public PeerNotifySettings() {
            super();
        }

        public static PeerNotifySettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_peerNotifySettingsEmpty_layer77 v0;
            if(arg2 == -1923214866) {
                TL_peerNotifySettings_layer47 v0_3 = new TL_peerNotifySettings_layer47();
            }
            else if(arg2 == -1697798976) {
                TL_peerNotifySettings_layer77 v0_2 = new TL_peerNotifySettings_layer77();
            }
            else if(arg2 == -1353671392) {
                TL_peerNotifySettings v0_1 = new TL_peerNotifySettings();
            }
            else if(arg2 != 1889961234) {
                v0 = null;
            }
            else {
                v0 = new TL_peerNotifySettingsEmpty_layer77();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PeerNotifySettings", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((PeerNotifySettings)v0).readParams(arg1, arg3);
            }

            return ((PeerNotifySettings)v0);
        }
    }

    public abstract class PhoneCall extends TLObject {
        public long access_hash;
        public int admin_id;
        public ArrayList alternative_connections;
        public TL_phoneConnection connection;
        public int date;
        public int duration;
        public int flags;
        public byte[] g_a_hash;
        public byte[] g_a_or_b;
        public byte[] g_b;
        public long id;
        public long key_fingerprint;
        public boolean need_debug;
        public boolean need_rating;
        public int participant_id;
        public TL_phoneCallProtocol protocol;
        public PhoneCallDiscardReason reason;
        public int receive_date;
        public int start_date;

        public PhoneCall() {
            super();
            this.alternative_connections = new ArrayList();
        }

        public static PhoneCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_phoneCallAccepted v0;
            switch(arg2) {
                case -1660057: {
                    TL_phoneCall v0_5 = new TL_phoneCall();
                    break;
                }
                case 462375633: {
                    TL_phoneCallWaiting v0_4 = new TL_phoneCallWaiting();
                    break;
                }
                case 1355435489: {
                    TL_phoneCallDiscarded v0_3 = new TL_phoneCallDiscarded();
                    break;
                }
                case 1399245077: {
                    TL_phoneCallEmpty v0_2 = new TL_phoneCallEmpty();
                    break;
                }
                case 1828732223: {
                    v0 = new TL_phoneCallAccepted();
                    break;
                }
                case -2089411356: {
                    TL_phoneCallRequested v0_1 = new TL_phoneCallRequested();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PhoneCall", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((PhoneCall)v0).readParams(arg1, arg3);
            }

            return ((PhoneCall)v0);
        }
    }

    public abstract class PhoneCallDiscardReason extends TLObject {
        public byte[] encrypted_key;

        public PhoneCallDiscardReason() {
            super();
        }

        public static PhoneCallDiscardReason TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_phoneCallDiscardReasonHangup v0;
            TL_phoneCallDiscardReasonMissed v0_4;
            switch(arg2) {
                case -2048646399: {
                    v0_4 = new TL_phoneCallDiscardReasonMissed();
                    break;
                }
                case -1344096199: {
                    TL_phoneCallDiscardReasonAllowGroupCall v0_3 = new TL_phoneCallDiscardReasonAllowGroupCall();
                    break;
                }
                case -527056480: {
                    TL_phoneCallDiscardReasonDisconnect v0_2 = new TL_phoneCallDiscardReasonDisconnect();
                    break;
                }
                case -84416311: {
                    TL_phoneCallDiscardReasonBusy v0_1 = new TL_phoneCallDiscardReasonBusy();
                    break;
                }
                case 1471006352: {
                    v0 = new TL_phoneCallDiscardReasonHangup();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_phoneCallDiscardReasonHangup)v0_4)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PhoneCallDiscardReason", Integer.valueOf(arg2)));
                }
            }

            if((((TL_phoneCallDiscardReasonHangup)v0_4)) != null) {
                ((PhoneCallDiscardReason)v0_4).readParams(arg1, arg3);
            }

            return ((PhoneCallDiscardReason)v0_4);
        }
    }

    public abstract class Photo extends TLObject {
        public long access_hash;
        public int date;
        public int flags;
        public GeoPoint geo;
        public boolean has_stickers;
        public long id;
        public ArrayList sizes;
        public int user_id;

        public Photo() {
            super();
            this.sizes = new ArrayList();
        }

        public static Photo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_photoEmpty v0;
            TL_photo v0_4;
            switch(arg2) {
                case -1836524247: {
                    v0_4 = new TL_photo();
                    break;
                }
                case -1014792074: {
                    TL_photo_old2 v0_3 = new TL_photo_old2();
                    break;
                }
                case -840088834: {
                    TL_photo_layer55 v0_2 = new TL_photo_layer55();
                    break;
                }
                case 582313809: {
                    TL_photo_old v0_1 = new TL_photo_old();
                    break;
                }
                case 590459437: {
                    v0 = new TL_photoEmpty();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_photoEmpty)v0_4)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Photo", Integer.valueOf(arg2)));
                }
            }

            if((((TL_photoEmpty)v0_4)) != null) {
                ((Photo)v0_4).readParams(arg1, arg3);
            }

            return ((Photo)v0_4);
        }
    }

    public abstract class PhotoSize extends TLObject {
        public byte[] bytes;
        public int h;
        public FileLocation location;
        public int size;
        public String type;
        public int w;

        public PhotoSize() {
            super();
        }

        public static PhotoSize TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_photoSize v0;
            TL_photoCachedSize v0_2;
            if(arg2 == -374917894) {
                v0_2 = new TL_photoCachedSize();
            }
            else if(arg2 == 236446268) {
                TL_photoSizeEmpty v0_1 = new TL_photoSizeEmpty();
            }
            else if(arg2 != 2009052699) {
                v0 = null;
            }
            else {
                v0 = new TL_photoSize();
            }

            if((((TL_photoSize)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PhotoSize", Integer.valueOf(arg2)));
                }
            }

            if((((TL_photoSize)v0_2)) != null) {
                ((PhotoSize)v0_2).readParams(arg1, arg3);
            }

            return ((PhotoSize)v0_2);
        }
    }

    public abstract class PrivacyKey extends TLObject {
        public PrivacyKey() {
            super();
        }

        public static PrivacyKey TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_privacyKeyChatInvite v0;
            if(arg2 == -1137792208) {
                TL_privacyKeyStatusTimestamp v0_2 = new TL_privacyKeyStatusTimestamp();
            }
            else if(arg2 == 1030105979) {
                TL_privacyKeyPhoneCall v0_1 = new TL_privacyKeyPhoneCall();
            }
            else if(arg2 != 1343122938) {
                v0 = null;
            }
            else {
                v0 = new TL_privacyKeyChatInvite();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PrivacyKey", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((PrivacyKey)v0).readParams(arg1, arg3);
            }

            return ((PrivacyKey)v0);
        }
    }

    public abstract class PrivacyRule extends TLObject {
        public ArrayList users;

        public PrivacyRule() {
            super();
            this.users = new ArrayList();
        }

        public static PrivacyRule TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_privacyValueAllowAll v0;
            TL_privacyValueDisallowContacts v0_5;
            switch(arg2) {
                case -125240806: {
                    v0_5 = new TL_privacyValueDisallowContacts();
                    break;
                }
                case -123988: {
                    TL_privacyValueAllowContacts v0_4 = new TL_privacyValueAllowContacts();
                    break;
                }
                case 209668535: {
                    TL_privacyValueDisallowUsers v0_3 = new TL_privacyValueDisallowUsers();
                    break;
                }
                case 1297858060: {
                    TL_privacyValueAllowUsers v0_2 = new TL_privacyValueAllowUsers();
                    break;
                }
                case 1698855810: {
                    v0 = new TL_privacyValueAllowAll();
                    break;
                }
                case -1955338397: {
                    TL_privacyValueDisallowAll v0_1 = new TL_privacyValueDisallowAll();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_privacyValueAllowAll)v0_5)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in PrivacyRule", Integer.valueOf(arg2)));
                }
            }

            if((((TL_privacyValueAllowAll)v0_5)) != null) {
                ((PrivacyRule)v0_5).readParams(arg1, arg3);
            }

            return ((PrivacyRule)v0_5);
        }
    }

    public abstract class RecentMeUrl extends TLObject {
        public int chat_id;
        public ChatInvite chat_invite;
        public StickerSetCovered set;
        public String url;
        public int user_id;

        public RecentMeUrl() {
            super();
        }

        public static RecentMeUrl TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_recentMeUrlUnknown v0;
            TL_recentMeUrlStickerSet v0_2;
            switch(arg2) {
                case -1917045962: {
                    TL_recentMeUrlUser v0_4 = new TL_recentMeUrlUser();
                    break;
                }
                case -1608834311: {
                    TL_recentMeUrlChat v0_3 = new TL_recentMeUrlChat();
                    break;
                }
                case -1140172836: {
                    v0_2 = new TL_recentMeUrlStickerSet();
                    break;
                }
                case -347535331: {
                    TL_recentMeUrlChatInvite v0_1 = new TL_recentMeUrlChatInvite();
                    break;
                }
                case 1189204285: {
                    v0 = new TL_recentMeUrlUnknown();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_recentMeUrlUnknown)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in RecentMeUrl", Integer.valueOf(arg2)));
                }
            }

            if((((TL_recentMeUrlUnknown)v0_2)) != null) {
                ((RecentMeUrl)v0_2).readParams(arg1, arg3);
            }

            return ((RecentMeUrl)v0_2);
        }
    }

    public abstract class ReplyMarkup extends TLObject {
        public int flags;
        public boolean resize;
        public ArrayList rows;
        public boolean selective;
        public boolean single_use;

        public ReplyMarkup() {
            super();
            this.rows = new ArrayList();
        }

        public static ReplyMarkup TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_replyInlineMarkup v0;
            TL_replyKeyboardForceReply v0_2;
            if(arg2 == -1606526075) {
                TL_replyKeyboardHide v0_3 = new TL_replyKeyboardHide();
            }
            else if(arg2 == -200242528) {
                v0_2 = new TL_replyKeyboardForceReply();
            }
            else if(arg2 == 889353612) {
                TL_replyKeyboardMarkup v0_1 = new TL_replyKeyboardMarkup();
            }
            else if(arg2 != 1218642516) {
                v0 = null;
            }
            else {
                v0 = new TL_replyInlineMarkup();
            }

            if((((TL_replyInlineMarkup)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ReplyMarkup", Integer.valueOf(arg2)));
                }
            }

            if((((TL_replyInlineMarkup)v0_2)) != null) {
                ((ReplyMarkup)v0_2).readParams(arg1, arg3);
            }

            return ((ReplyMarkup)v0_2);
        }
    }

    public abstract class ReportReason extends TLObject {
        public String text;

        public ReportReason() {
            super();
        }

        public static ReportReason TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_inputReportReasonSpam v0;
            if(arg2 == -512463606) {
                TL_inputReportReasonOther v0_3 = new TL_inputReportReasonOther();
            }
            else if(arg2 == 505595789) {
                TL_inputReportReasonViolence v0_2 = new TL_inputReportReasonViolence();
            }
            else if(arg2 == 777640226) {
                TL_inputReportReasonPornography v0_1 = new TL_inputReportReasonPornography();
            }
            else if(arg2 != 1490799288) {
                v0 = null;
            }
            else {
                v0 = new TL_inputReportReasonSpam();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in ReportReason", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((ReportReason)v0).readParams(arg1, arg3);
            }

            return ((ReportReason)v0);
        }
    }

    public abstract class RichText extends TLObject {
        public String email;
        public RichText parentRichText;
        public ArrayList texts;
        public String url;
        public long webpage_id;

        public RichText() {
            super();
            this.texts = new ArrayList();
        }

        public static RichText TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_textConcat v0;
            TL_textPlain v0_3;
            switch(arg2) {
                case 1009288385: {
                    TL_textUrl v0_9 = new TL_textUrl();
                    break;
                }
                case 1730456516: {
                    TL_textBold v0_7 = new TL_textBold();
                    break;
                }
                case 1816074681: {
                    TL_textFixed v0_5 = new TL_textFixed();
                    break;
                }
                case 1950782688: {
                    v0_3 = new TL_textPlain();
                    break;
                }
                case 2120376535: {
                    v0 = new TL_textConcat();
                    break;
                }
                case -1678197867: {
                    TL_textStrike v0_8 = new TL_textStrike();
                    break;
                }
                case -1054465340: {
                    TL_textUnderline v0_6 = new TL_textUnderline();
                    break;
                }
                case -653089380: {
                    TL_textItalic v0_4 = new TL_textItalic();
                    break;
                }
                case -599948721: {
                    TL_textEmpty v0_2 = new TL_textEmpty();
                    break;
                }
                case -564523562: {
                    TL_textEmail v0_1 = new TL_textEmail();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_textConcat)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in RichText", Integer.valueOf(arg2)));
                }
            }

            if((((TL_textConcat)v0_3)) != null) {
                ((RichText)v0_3).readParams(arg1, arg3);
            }

            return ((RichText)v0_3);
        }
    }

    public abstract class SecureFile extends TLObject {
        public SecureFile() {
            super();
        }

        public static SecureFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_secureFileEmpty v0;
            if(arg2 == -534283678) {
                TL_secureFile v0_1 = new TL_secureFile();
            }
            else if(arg2 != 1679398724) {
                v0 = null;
            }
            else {
                v0 = new TL_secureFileEmpty();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecureFile", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((SecureFile)v0).readParams(arg1, arg3);
            }

            return ((SecureFile)v0);
        }
    }

    public abstract class SecurePasswordKdfAlgo extends TLObject {
        public SecurePasswordKdfAlgo() {
            super();
        }

        public static SecurePasswordKdfAlgo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_securePasswordKdfAlgoUnknown v0;
            if(arg2 == -2042159726) {
                TL_securePasswordKdfAlgoSHA512 v0_2 = new TL_securePasswordKdfAlgoSHA512();
            }
            else if(arg2 == -1141711456) {
                TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000 v0_1 = new TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000();
            }
            else if(arg2 != 4883767) {
                v0 = null;
            }
            else {
                v0 = new TL_securePasswordKdfAlgoUnknown();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecurePasswordKdfAlgo", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((SecurePasswordKdfAlgo)v0).readParams(arg1, arg3);
            }

            return ((SecurePasswordKdfAlgo)v0);
        }
    }

    public abstract class SecurePlainData extends TLObject {
        public SecurePlainData() {
            super();
        }

        public static SecurePlainData TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_securePlainPhone v0;
            if(arg2 == 569137759) {
                TL_securePlainEmail v0_1 = new TL_securePlainEmail();
            }
            else if(arg2 != 2103482845) {
                v0 = null;
            }
            else {
                v0 = new TL_securePlainPhone();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecurePlainData", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((SecurePlainData)v0).readParams(arg1, arg3);
            }

            return ((SecurePlainData)v0);
        }
    }

    public abstract class SecureRequiredType extends TLObject {
        public SecureRequiredType() {
            super();
        }

        public static SecureRequiredType TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_secureRequiredTypeOneOf v0;
            TL_secureRequiredType v0_1;
            if(arg2 == -2103600678) {
                v0_1 = new TL_secureRequiredType();
            }
            else if(arg2 != 41187252) {
                v0 = null;
            }
            else {
                v0 = new TL_secureRequiredTypeOneOf();
            }

            if((((TL_secureRequiredTypeOneOf)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecureRequiredType", Integer.valueOf(arg2)));
                }
            }

            if((((TL_secureRequiredTypeOneOf)v0_1)) != null) {
                ((SecureRequiredType)v0_1).readParams(arg1, arg3);
            }

            return ((SecureRequiredType)v0_1);
        }
    }

    public abstract class SecureValueError extends TLObject {
        public SecureValueError() {
            super();
        }

        public static SecureValueError TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_secureValueErrorFile v0;
            TL_secureValueErrorTranslationFiles v0_5;
            switch(arg2) {
                case 878931416: {
                    v0_5 = new TL_secureValueErrorTranslationFiles();
                    break;
                }
                case 1717706985: {
                    TL_secureValueErrorFiles v0_3 = new TL_secureValueErrorFiles();
                    break;
                }
                case 2054162547: {
                    v0 = new TL_secureValueErrorFile();
                    break;
                }
                case -2037765467: {
                    TL_secureValueErrorReverseSide v0_6 = new TL_secureValueErrorReverseSide();
                    break;
                }
                case -2036501105: {
                    TL_secureValueError v0_4 = new TL_secureValueError();
                    break;
                }
                case -1592506512: {
                    TL_secureValueErrorTranslationFile v0_2 = new TL_secureValueErrorTranslationFile();
                    break;
                }
                case -449327402: {
                    TL_secureValueErrorSelfie v0_1 = new TL_secureValueErrorSelfie();
                    break;
                }
                case -391902247: {
                    TL_secureValueErrorData v0_8 = new TL_secureValueErrorData();
                    break;
                }
                case 12467706: {
                    TL_secureValueErrorFrontSide v0_7 = new TL_secureValueErrorFrontSide();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_secureValueErrorFile)v0_5)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecureValueError", Integer.valueOf(arg2)));
                }
            }

            if((((TL_secureValueErrorFile)v0_5)) != null) {
                ((SecureValueError)v0_5).readParams(arg1, arg3);
            }

            return ((SecureValueError)v0_5);
        }
    }

    public abstract class SecureValueType extends TLObject {
        public SecureValueType() {
            super();
        }

        public static SecureValueType TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_secureValueTypePassport v0;
            TL_secureValueTypeAddress v0_7;
            switch(arg2) {
                case 1034709504: {
                    v0 = new TL_secureValueTypePassport();
                    break;
                }
                case -1995211763: {
                    TL_secureValueTypeBankStatement v0_4 = new TL_secureValueTypeBankStatement();
                    break;
                }
                case -1954007928: {
                    TL_secureValueTypeRentalAgreement v0_2 = new TL_secureValueTypeRentalAgreement();
                    break;
                }
                case -1908627474: {
                    TL_secureValueTypeEmail v0_1 = new TL_secureValueTypeEmail();
                    break;
                }
                case -1717268701: {
                    TL_secureValueTypeInternalPassport v0_12 = new TL_secureValueTypeInternalPassport();
                    break;
                }
                case -1713143702: {
                    TL_secureValueTypePassportRegistration v0_11 = new TL_secureValueTypePassportRegistration();
                    break;
                }
                case -1658158621: {
                    TL_secureValueTypePersonalDetails v0_10 = new TL_secureValueTypePersonalDetails();
                    break;
                }
                case -1596951477: {
                    TL_secureValueTypeIdentityCard v0_9 = new TL_secureValueTypeIdentityCard();
                    break;
                }
                case -1289704741: {
                    TL_secureValueTypePhone v0_8 = new TL_secureValueTypePhone();
                    break;
                }
                case -874308058: {
                    v0_7 = new TL_secureValueTypeAddress();
                    break;
                }
                case -368907213: {
                    TL_secureValueTypeTemporaryRegistration v0_6 = new TL_secureValueTypeTemporaryRegistration();
                    break;
                }
                case -63531698: {
                    TL_secureValueTypeUtilityBill v0_5 = new TL_secureValueTypeUtilityBill();
                    break;
                }
                case 115615172: {
                    TL_secureValueTypeDriverLicense v0_3 = new TL_secureValueTypeDriverLicense();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_secureValueTypePassport)v0_7)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SecureValueType", Integer.valueOf(arg2)));
                }
            }

            if((((TL_secureValueTypePassport)v0_7)) != null) {
                ((SecureValueType)v0_7).readParams(arg1, arg3);
            }

            return ((SecureValueType)v0_7);
        }
    }

    public abstract class SendMessageAction extends TLObject {
        public int progress;

        public SendMessageAction() {
            super();
        }

        public static SendMessageAction TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_sendMessageChooseContactAction v0;
            TL_sendMessageUploadPhotoAction_old v0_6;
            switch(arg2) {
                case 1653390447: {
                    v0 = new TL_sendMessageChooseContactAction();
                    break;
                }
                case -1997373508: {
                    TL_sendMessageRecordRoundAction v0_12 = new TL_sendMessageRecordRoundAction();
                    break;
                }
                case -1884362354: {
                    TL_sendMessageUploadDocumentAction_old v0_10 = new TL_sendMessageUploadDocumentAction_old();
                    break;
                }
                case -1845219337: {
                    TL_sendMessageUploadVideoAction_old v0_8 = new TL_sendMessageUploadVideoAction_old();
                    break;
                }
                case -1727382502: {
                    v0_6 = new TL_sendMessageUploadPhotoAction_old();
                    break;
                }
                case -1584933265: {
                    TL_sendMessageRecordVideoAction v0_4 = new TL_sendMessageRecordVideoAction();
                    break;
                }
                case -1441998364: {
                    TL_sendMessageUploadDocumentAction v0_2 = new TL_sendMessageUploadDocumentAction();
                    break;
                }
                case -774682074: {
                    TL_sendMessageUploadPhotoAction v0_1 = new TL_sendMessageUploadPhotoAction();
                    break;
                }
                case -718310409: {
                    TL_sendMessageRecordAudioAction v0_16 = new TL_sendMessageRecordAudioAction();
                    break;
                }
                case -580219064: {
                    TL_sendMessageGamePlayAction v0_15 = new TL_sendMessageGamePlayAction();
                    break;
                }
                case -424899985: {
                    TL_sendMessageUploadAudioAction_old v0_14 = new TL_sendMessageUploadAudioAction_old();
                    break;
                }
                case -378127636: {
                    TL_sendMessageUploadVideoAction v0_13 = new TL_sendMessageUploadVideoAction();
                    break;
                }
                case -212740181: {
                    TL_sendMessageUploadAudioAction v0_11 = new TL_sendMessageUploadAudioAction();
                    break;
                }
                case -44119819: {
                    TL_sendMessageCancelAction v0_9 = new TL_sendMessageCancelAction();
                    break;
                }
                case 381645902: {
                    TL_sendMessageTypingAction v0_7 = new TL_sendMessageTypingAction();
                    break;
                }
                case 393186209: {
                    TL_sendMessageGeoLocationAction v0_5 = new TL_sendMessageGeoLocationAction();
                    break;
                }
                case 608050278: {
                    TL_sendMessageUploadRoundAction v0_3 = new TL_sendMessageUploadRoundAction();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_sendMessageChooseContactAction)v0_6)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in SendMessageAction", Integer.valueOf(arg2)));
                }
            }

            if((((TL_sendMessageChooseContactAction)v0_6)) != null) {
                ((SendMessageAction)v0_6).readParams(arg1, arg3);
            }

            return ((SendMessageAction)v0_6);
        }
    }

    public abstract class StickerSet extends TLObject {
        public long access_hash;
        public boolean archived;
        public int count;
        public int flags;
        public int hash;
        public long id;
        public boolean installed;
        public int installed_date;
        public boolean masks;
        public boolean official;
        public String short_name;
        public String title;

        public StickerSet() {
            super();
        }

        public static StickerSet TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_stickerSet v0;
            if(arg2 == -1482409193) {
                TL_stickerSet_old v0_2 = new TL_stickerSet_old();
            }
            else if(arg2 == -852477119) {
                TL_stickerSet_layer75 v0_1 = new TL_stickerSet_layer75();
            }
            else if(arg2 != 1434820921) {
                v0 = null;
            }
            else {
                v0 = new TL_stickerSet();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in StickerSet", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((StickerSet)v0).readParams(arg1, arg3);
            }

            return ((StickerSet)v0);
        }
    }

    public abstract class StickerSetCovered extends TLObject {
        public Document cover;
        public ArrayList covers;
        public StickerSet set;

        public StickerSetCovered() {
            super();
            this.covers = new ArrayList();
        }

        public static StickerSetCovered TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_stickerSetCovered v0;
            if(arg2 == 872932635) {
                TL_stickerSetMultiCovered v0_1 = new TL_stickerSetMultiCovered();
            }
            else if(arg2 != 1678812626) {
                v0 = null;
            }
            else {
                v0 = new TL_stickerSetCovered();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in StickerSetCovered", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((StickerSetCovered)v0).readParams(arg1, arg3);
            }

            return ((StickerSetCovered)v0);
        }
    }

    public class TL_accountDaysTTL extends TLObject {
        public static int constructor = -1194283041;
        public int days;

        static {
        }

        public TL_accountDaysTTL() {
            super();
        }

        public static TL_accountDaysTTL TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_accountDaysTTL.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_accountDaysTTL", Integer.valueOf(arg2)));
            }

            TL_accountDaysTTL v2 = new TL_accountDaysTTL();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.days = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_accountDaysTTL.constructor);
            arg2.writeInt32(this.days);
        }
    }

    public class TL_account_acceptAuthorization extends TLObject {
        public int bot_id;
        public static int constructor = -419267436;
        public TL_secureCredentialsEncrypted credentials;
        public String public_key;
        public String scope;
        public ArrayList value_hashes;

        static {
        }

        public TL_account_acceptAuthorization() {
            super();
            this.value_hashes = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_acceptAuthorization.constructor);
            arg4.writeInt32(this.bot_id);
            arg4.writeString(this.scope);
            arg4.writeString(this.public_key);
            arg4.writeInt32(481674261);
            int v0 = this.value_hashes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.value_hashes.get(v1).serializeToStream(arg4);
            }

            this.credentials.serializeToStream(arg4);
        }
    }

    public class TL_account_authorizationForm extends TLObject {
        public static int constructor = -1389486888;
        public ArrayList errors;
        public int flags;
        public String privacy_policy_url;
        public ArrayList required_types;
        public ArrayList users;
        public ArrayList values;

        static {
        }

        public TL_account_authorizationForm() {
            super();
            this.required_types = new ArrayList();
            this.values = new ArrayList();
            this.errors = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_account_authorizationForm TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_authorizationForm.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_authorizationForm", Integer.valueOf(arg2)));
            }

            TL_account_authorizationForm v2 = new TL_account_authorizationForm();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v2 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                SecureRequiredType v5 = SecureRequiredType.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.required_types.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                TL_secureValue v5_1 = TL_secureValue.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.values.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                SecureValueError v5_2 = SecureValueError.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.errors.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v2 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v2;
            }

            if((this.flags & 1) != 0) {
                this.privacy_policy_url = arg8.readString(arg9);
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_account_authorizationForm.constructor);
            arg6.writeInt32(this.flags);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.required_types.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.required_types.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.values.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.values.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.errors.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.errors.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }

            if((this.flags & 1) != 0) {
                arg6.writeString(this.privacy_policy_url);
            }
        }
    }

    public class TL_account_authorizations extends TLObject {
        public ArrayList authorizations;
        public static int constructor = 307276766;

        static {
        }

        public TL_account_authorizations() {
            super();
            this.authorizations = new ArrayList();
        }

        public static TL_account_authorizations TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_authorizations.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_authorizations", Integer.valueOf(arg2)));
            }

            TL_account_authorizations v2 = new TL_account_authorizations();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_authorization v2 = TL_authorization.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.authorizations.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_authorizations.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.authorizations.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.authorizations.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_account_changePhone extends TLObject {
        public static int constructor = 1891839707;
        public String phone_code;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_account_changePhone() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return User.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_changePhone.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
            arg2.writeString(this.phone_code);
        }
    }

    public class TL_account_checkUsername extends TLObject {
        public static int constructor = 655677548;
        public String username;

        static {
        }

        public TL_account_checkUsername() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_checkUsername.constructor);
            arg2.writeString(this.username);
        }
    }

    public class TL_account_confirmPhone extends TLObject {
        public static int constructor = 1596029123;
        public String phone_code;
        public String phone_code_hash;

        static {
        }

        public TL_account_confirmPhone() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_confirmPhone.constructor);
            arg2.writeString(this.phone_code_hash);
            arg2.writeString(this.phone_code);
        }
    }

    public class TL_account_deleteAccount extends TLObject {
        public static int constructor = 1099779595;
        public String reason;

        static {
        }

        public TL_account_deleteAccount() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_deleteAccount.constructor);
            arg2.writeString(this.reason);
        }
    }

    public class TL_account_deleteSecureValue extends TLObject {
        public static int constructor = -1199522741;
        public ArrayList types;

        static {
        }

        public TL_account_deleteSecureValue() {
            super();
            this.types = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_deleteSecureValue.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.types.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.types.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_account_getAccountTTL extends TLObject {
        public static int constructor = 150761757;

        static {
        }

        public TL_account_getAccountTTL() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_accountDaysTTL.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getAccountTTL.constructor);
        }
    }

    public class TL_account_getAllSecureValues extends TLObject {
        public static int constructor = -1299661699;

        static {
        }

        public TL_account_getAllSecureValues() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_secureValue v2 = TL_secureValue.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getAllSecureValues.constructor);
        }
    }

    public class TL_account_getAuthorizationForm extends TLObject {
        public int bot_id;
        public static int constructor = -1200903967;
        public String public_key;
        public String scope;

        static {
        }

        public TL_account_getAuthorizationForm() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_authorizationForm.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getAuthorizationForm.constructor);
            arg2.writeInt32(this.bot_id);
            arg2.writeString(this.scope);
            arg2.writeString(this.public_key);
        }
    }

    public class TL_account_getAuthorizations extends TLObject {
        public static int constructor = -484392616;

        static {
        }

        public TL_account_getAuthorizations() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_authorizations.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getAuthorizations.constructor);
        }
    }

    public class TL_account_getNotifySettings extends TLObject {
        public static int constructor = 313765169;
        public InputNotifyPeer peer;

        static {
        }

        public TL_account_getNotifySettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return PeerNotifySettings.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getNotifySettings.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_account_getPassword extends TLObject {
        public static int constructor = 1418342645;

        static {
        }

        public TL_account_getPassword() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_password.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getPassword.constructor);
        }
    }

    public class TL_account_getPasswordSettings extends TLObject {
        public static int constructor = -1663767815;
        public InputCheckPasswordSRP password;

        static {
        }

        public TL_account_getPasswordSettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_passwordSettings.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getPasswordSettings.constructor);
            this.password.serializeToStream(arg2);
        }
    }

    public class TL_account_getPrivacy extends TLObject {
        public static int constructor = -623130288;
        public InputPrivacyKey key;

        static {
        }

        public TL_account_getPrivacy() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_privacyRules.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getPrivacy.constructor);
            this.key.serializeToStream(arg2);
        }
    }

    public class TL_account_getSecureValue extends TLObject {
        public static int constructor = 1936088002;
        public ArrayList types;

        static {
        }

        public TL_account_getSecureValue() {
            super();
            this.types = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_secureValue v2 = TL_secureValue.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_getSecureValue.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.types.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.types.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_account_getTmpPassword extends TLObject {
        public static int constructor = 1151208273;
        public InputCheckPasswordSRP password;
        public int period;

        static {
        }

        public TL_account_getTmpPassword() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_tmpPassword.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getTmpPassword.constructor);
            this.password.serializeToStream(arg2);
            arg2.writeInt32(this.period);
        }
    }

    public class TL_account_getWallPapers extends TLObject {
        public static int constructor = -1068696894;

        static {
        }

        public TL_account_getWallPapers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                WallPaper v2 = WallPaper.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getWallPapers.constructor);
        }
    }

    public class TL_account_getWebAuthorizations extends TLObject {
        public static int constructor = 405695855;

        static {
        }

        public TL_account_getWebAuthorizations() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_webAuthorizations.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_getWebAuthorizations.constructor);
        }
    }

    public class TL_account_password extends TLObject {
        public static int constructor = -1390001672;
        public PasswordKdfAlgo current_algo;
        public String email_unconfirmed_pattern;
        public int flags;
        public boolean has_password;
        public boolean has_recovery;
        public boolean has_secure_values;
        public String hint;
        public PasswordKdfAlgo new_algo;
        public SecurePasswordKdfAlgo new_secure_algo;
        public byte[] secure_random;
        public byte[] srp_B;
        public long srp_id;

        static {
        }

        public TL_account_password() {
            super();
        }

        public static TL_account_password TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_password.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_password", Integer.valueOf(arg2)));
            }

            TL_account_password v2 = new TL_account_password();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.has_recovery = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.has_secure_values = v0;
            if((this.flags & 4) != 0) {
            }
            else {
                v1 = false;
            }

            this.has_password = v1;
            if((this.flags & 4) != 0) {
                this.current_algo = PasswordKdfAlgo.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 4) != 0) {
                this.srp_B = arg4.readByteArray(arg5);
            }

            if((this.flags & 4) != 0) {
                this.srp_id = arg4.readInt64(arg5);
            }

            if((this.flags & 8) != 0) {
                this.hint = arg4.readString(arg5);
            }

            if((this.flags & 16) != 0) {
                this.email_unconfirmed_pattern = arg4.readString(arg5);
            }

            this.new_algo = PasswordKdfAlgo.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.new_secure_algo = SecurePasswordKdfAlgo.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.secure_random = arg4.readByteArray(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_account_password.constructor);
            int v0 = this.has_recovery ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.has_secure_values ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.has_password ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            if((this.flags & 4) != 0) {
                this.current_algo.serializeToStream(arg3);
            }

            if((this.flags & 4) != 0) {
                arg3.writeByteArray(this.srp_B);
            }

            if((this.flags & 4) != 0) {
                arg3.writeInt64(this.srp_id);
            }

            if((this.flags & 8) != 0) {
                arg3.writeString(this.hint);
            }

            if((this.flags & 16) != 0) {
                arg3.writeString(this.email_unconfirmed_pattern);
            }

            this.new_algo.serializeToStream(arg3);
            this.new_secure_algo.serializeToStream(arg3);
            arg3.writeByteArray(this.secure_random);
        }
    }

    public class TL_account_passwordInputSettings extends TLObject {
        public static int constructor = -1036572727;
        public String email;
        public int flags;
        public String hint;
        public PasswordKdfAlgo new_algo;
        public byte[] new_password_hash;
        public TL_secureSecretSettings new_secure_settings;

        static {
        }

        public TL_account_passwordInputSettings() {
            super();
        }

        public static TL_account_passwordInputSettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_passwordInputSettings.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_passwordInputSettings", Integer.valueOf(arg2)));
            }

            TL_account_passwordInputSettings v2 = new TL_account_passwordInputSettings();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.new_algo = PasswordKdfAlgo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            if((this.flags & 1) != 0) {
                this.new_password_hash = arg2.readByteArray(arg3);
            }

            if((this.flags & 1) != 0) {
                this.hint = arg2.readString(arg3);
            }

            if((this.flags & 2) != 0) {
                this.email = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.new_secure_settings = TL_secureSecretSettings.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_passwordInputSettings.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.new_algo.serializeToStream(arg2);
            }

            if((this.flags & 1) != 0) {
                arg2.writeByteArray(this.new_password_hash);
            }

            if((this.flags & 1) != 0) {
                arg2.writeString(this.hint);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.email);
            }

            if((this.flags & 4) != 0) {
                this.new_secure_settings.serializeToStream(arg2);
            }
        }
    }

    public class TL_account_passwordSettings extends TLObject {
        public static int constructor = -1705233435;
        public String email;
        public int flags;
        public TL_secureSecretSettings secure_settings;

        static {
        }

        public TL_account_passwordSettings() {
            super();
        }

        public static TL_account_passwordSettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_passwordSettings.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_passwordSettings", Integer.valueOf(arg2)));
            }

            TL_account_passwordSettings v2 = new TL_account_passwordSettings();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.email = arg2.readString(arg3);
            }

            if((this.flags & 2) != 0) {
                this.secure_settings = TL_secureSecretSettings.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_passwordSettings.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.email);
            }

            if((this.flags & 2) != 0) {
                this.secure_settings.serializeToStream(arg2);
            }
        }
    }

    public class TL_account_privacyRules extends TLObject {
        public static int constructor = 1430961007;
        public ArrayList rules;
        public ArrayList users;

        static {
        }

        public TL_account_privacyRules() {
            super();
            this.rules = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_account_privacyRules TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_privacyRules.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_privacyRules", Integer.valueOf(arg2)));
            }

            TL_account_privacyRules v2 = new TL_account_privacyRules();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                PrivacyRule v5 = PrivacyRule.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.rules.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_account_privacyRules.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.rules.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.rules.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_account_registerDevice extends TLObject {
        public boolean app_sandbox;
        public static int constructor = 1555998096;
        public ArrayList other_uids;
        public byte[] secret;
        public String token;
        public int token_type;

        static {
        }

        public TL_account_registerDevice() {
            super();
            this.other_uids = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_registerDevice.constructor);
            arg4.writeInt32(this.token_type);
            arg4.writeString(this.token);
            arg4.writeBool(this.app_sandbox);
            arg4.writeByteArray(this.secret);
            arg4.writeInt32(481674261);
            int v0 = this.other_uids.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.other_uids.get(v1).intValue());
            }
        }
    }

    public class TL_account_reportPeer extends TLObject {
        public static int constructor = -1374118561;
        public InputPeer peer;
        public ReportReason reason;

        static {
        }

        public TL_account_reportPeer() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_reportPeer.constructor);
            this.peer.serializeToStream(arg2);
            this.reason.serializeToStream(arg2);
        }
    }

    public class TL_account_resetAuthorization extends TLObject {
        public static int constructor = -545786948;
        public long hash;

        static {
        }

        public TL_account_resetAuthorization() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_account_resetAuthorization.constructor);
            arg3.writeInt64(this.hash);
        }
    }

    public class TL_account_resetNotifySettings extends TLObject {
        public static int constructor = -612493497;

        static {
        }

        public TL_account_resetNotifySettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_resetNotifySettings.constructor);
        }
    }

    public class TL_account_resetWebAuthorization extends TLObject {
        public static int constructor = 755087855;
        public long hash;

        static {
        }

        public TL_account_resetWebAuthorization() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_account_resetWebAuthorization.constructor);
            arg3.writeInt64(this.hash);
        }
    }

    public class TL_account_resetWebAuthorizations extends TLObject {
        public static int constructor = 1747789204;

        static {
        }

        public TL_account_resetWebAuthorizations() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_resetWebAuthorizations.constructor);
        }
    }

    public class TL_account_saveSecureValue extends TLObject {
        public static int constructor = -1986010339;
        public long secure_secret_id;
        public TL_inputSecureValue value;

        static {
        }

        public TL_account_saveSecureValue() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_secureValue.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_account_saveSecureValue.constructor);
            this.value.serializeToStream(arg3);
            arg3.writeInt64(this.secure_secret_id);
        }
    }

    public class TL_account_sendChangePhoneCode extends TLObject {
        public boolean allow_flashcall;
        public static int constructor = 149257707;
        public boolean current_number;
        public int flags;
        public String phone_number;

        static {
        }

        public TL_account_sendChangePhoneCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_sentCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_sendChangePhoneCode.constructor);
            int v0 = this.allow_flashcall ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.phone_number);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.current_number);
            }
        }
    }

    public class TL_account_sendConfirmPhoneCode extends TLObject {
        public boolean allow_flashcall;
        public static int constructor = 353818557;
        public boolean current_number;
        public int flags;
        public String hash;

        static {
        }

        public TL_account_sendConfirmPhoneCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_sentCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_sendConfirmPhoneCode.constructor);
            int v0 = this.allow_flashcall ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.hash);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.current_number);
            }
        }
    }

    public class TL_account_sendVerifyEmailCode extends TLObject {
        public static int constructor = 1880182943;
        public String email;

        static {
        }

        public TL_account_sendVerifyEmailCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_sentEmailCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_sendVerifyEmailCode.constructor);
            arg2.writeString(this.email);
        }
    }

    public class TL_account_sendVerifyPhoneCode extends TLObject {
        public boolean allow_flashcall;
        public static int constructor = -2110553932;
        public boolean current_number;
        public int flags;
        public String phone_number;

        static {
        }

        public TL_account_sendVerifyPhoneCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_sentCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_sendVerifyPhoneCode.constructor);
            int v0 = this.allow_flashcall ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.phone_number);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.current_number);
            }
        }
    }

    public class TL_account_sentEmailCode extends TLObject {
        public static int constructor = -2128640689;
        public String email_pattern;
        public int length;

        static {
        }

        public TL_account_sentEmailCode() {
            super();
        }

        public static TL_account_sentEmailCode TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_sentEmailCode.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_sentEmailCode", Integer.valueOf(arg2)));
            }

            TL_account_sentEmailCode v2 = new TL_account_sentEmailCode();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.email_pattern = arg2.readString(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_sentEmailCode.constructor);
            arg2.writeString(this.email_pattern);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_account_setAccountTTL extends TLObject {
        public static int constructor = 608323678;
        public TL_accountDaysTTL ttl;

        static {
        }

        public TL_account_setAccountTTL() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_setAccountTTL.constructor);
            this.ttl.serializeToStream(arg2);
        }
    }

    public class TL_account_setPrivacy extends TLObject {
        public static int constructor = -906486552;
        public InputPrivacyKey key;
        public ArrayList rules;

        static {
        }

        public TL_account_setPrivacy() {
            super();
            this.rules = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_account_privacyRules.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_setPrivacy.constructor);
            this.key.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.rules.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.rules.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_account_tmpPassword extends TLObject {
        public static int constructor = -614138572;
        public byte[] tmp_password;
        public int valid_until;

        static {
        }

        public TL_account_tmpPassword() {
            super();
        }

        public static TL_account_tmpPassword TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_tmpPassword.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_tmpPassword", Integer.valueOf(arg2)));
            }

            TL_account_tmpPassword v2 = new TL_account_tmpPassword();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.tmp_password = arg2.readByteArray(arg3);
            this.valid_until = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_tmpPassword.constructor);
            arg2.writeByteArray(this.tmp_password);
            arg2.writeInt32(this.valid_until);
        }
    }

    public class TL_account_unregisterDevice extends TLObject {
        public static int constructor = 813089983;
        public ArrayList other_uids;
        public String token;
        public int token_type;

        static {
        }

        public TL_account_unregisterDevice() {
            super();
            this.other_uids = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_account_unregisterDevice.constructor);
            arg4.writeInt32(this.token_type);
            arg4.writeString(this.token);
            arg4.writeInt32(481674261);
            int v0 = this.other_uids.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.other_uids.get(v1).intValue());
            }
        }
    }

    public class TL_account_updateDeviceLocked extends TLObject {
        public static int constructor = 954152242;
        public int period;

        static {
        }

        public TL_account_updateDeviceLocked() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updateDeviceLocked.constructor);
            arg2.writeInt32(this.period);
        }
    }

    public class TL_account_updateNotifySettings extends TLObject {
        public static int constructor = -2067899501;
        public InputNotifyPeer peer;
        public TL_inputPeerNotifySettings settings;

        static {
        }

        public TL_account_updateNotifySettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updateNotifySettings.constructor);
            this.peer.serializeToStream(arg2);
            this.settings.serializeToStream(arg2);
        }
    }

    public class TL_account_updatePasswordSettings extends TLObject {
        public static int constructor = -1516564433;
        public TL_account_passwordInputSettings new_settings;
        public InputCheckPasswordSRP password;

        static {
        }

        public TL_account_updatePasswordSettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updatePasswordSettings.constructor);
            this.password.serializeToStream(arg2);
            this.new_settings.serializeToStream(arg2);
        }
    }

    public class TL_account_updateProfile extends TLObject {
        public String about;
        public static int constructor = 2018596725;
        public String first_name;
        public int flags;
        public String last_name;

        static {
        }

        public TL_account_updateProfile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return User.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updateProfile.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.first_name);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.last_name);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.about);
            }
        }
    }

    public class TL_account_updateStatus extends TLObject {
        public static int constructor = 1713919532;
        public boolean offline;

        static {
        }

        public TL_account_updateStatus() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updateStatus.constructor);
            arg2.writeBool(this.offline);
        }
    }

    public class TL_account_updateUsername extends TLObject {
        public static int constructor = 1040964988;
        public String username;

        static {
        }

        public TL_account_updateUsername() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return User.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_updateUsername.constructor);
            arg2.writeString(this.username);
        }
    }

    public class TL_account_verifyEmail extends TLObject {
        public String code;
        public static int constructor = -323339813;
        public String email;

        static {
        }

        public TL_account_verifyEmail() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_verifyEmail.constructor);
            arg2.writeString(this.email);
            arg2.writeString(this.code);
        }
    }

    public class TL_account_verifyPhone extends TLObject {
        public static int constructor = 1305716726;
        public String phone_code;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_account_verifyPhone() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_account_verifyPhone.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
            arg2.writeString(this.phone_code);
        }
    }

    public class TL_account_webAuthorizations extends TLObject {
        public ArrayList authorizations;
        public static int constructor = -313079300;
        public ArrayList users;

        static {
        }

        public TL_account_webAuthorizations() {
            super();
            this.authorizations = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_account_webAuthorizations TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_account_webAuthorizations.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_account_webAuthorizations", Integer.valueOf(arg2)));
            }

            TL_account_webAuthorizations v2 = new TL_account_webAuthorizations();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_webAuthorization v5 = TL_webAuthorization.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.authorizations.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_account_webAuthorizations.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.authorizations.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.authorizations.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_audioEmpty_layer45 extends Audio {
        public static int constructor = 1483311320;

        static {
        }

        public TL_audioEmpty_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_audioEmpty_layer45.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_audioEncrypted extends TL_audio_layer45 {
        public static int constructor = 1431655926;

        static {
        }

        public TL_audioEncrypted() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.key = arg3.readByteArray(arg4);
            this.iv = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_audioEncrypted.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
            arg3.writeByteArray(this.key);
            arg3.writeByteArray(this.iv);
        }
    }

    public class TL_audio_layer45 extends Audio {
        public static int constructor = -102543275;

        static {
        }

        public TL_audio_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_audio_layer45.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
        }
    }

    public class TL_audio_old2 extends TL_audio_layer45 {
        public static int constructor = -945003370;

        static {
        }

        public TL_audio_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_audio_old2.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
        }
    }

    public class TL_audio_old extends TL_audio_layer45 {
        public static int constructor = 1114908135;

        static {
        }

        public TL_audio_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_audio_old.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
        }
    }

    public class TL_auth_authorization extends TLObject {
        public static int constructor = -855308010;
        public int flags;
        public int tmp_sessions;
        public User user;

        static {
        }

        public TL_auth_authorization() {
            super();
        }

        public static TL_auth_authorization TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_auth_authorization.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_auth_authorization", Integer.valueOf(arg2)));
            }

            TL_auth_authorization v2 = new TL_auth_authorization();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.tmp_sessions = arg2.readInt32(arg3);
            }

            this.user = User.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_authorization.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.tmp_sessions);
            }

            this.user.serializeToStream(arg2);
        }
    }

    public class TL_auth_cancelCode extends TLObject {
        public static int constructor = 520357240;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_auth_cancelCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_cancelCode.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
        }
    }

    public class TL_auth_checkPassword extends TLObject {
        public static int constructor = -779399914;
        public InputCheckPasswordSRP password;

        static {
        }

        public TL_auth_checkPassword() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_authorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_checkPassword.constructor);
            this.password.serializeToStream(arg2);
        }
    }

    public class TL_auth_checkPhone extends TLObject {
        public static int constructor = 1877286395;
        public String phone_number;

        static {
        }

        public TL_auth_checkPhone() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_checkedPhone.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_checkPhone.constructor);
            arg2.writeString(this.phone_number);
        }
    }

    public class TL_auth_checkedPhone extends TLObject {
        public static int constructor = -2128698738;
        public boolean phone_registered;

        static {
        }

        public TL_auth_checkedPhone() {
            super();
        }

        public static TL_auth_checkedPhone TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_auth_checkedPhone.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_auth_checkedPhone", Integer.valueOf(arg2)));
            }

            TL_auth_checkedPhone v2 = new TL_auth_checkedPhone();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.phone_registered = arg1.readBool(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_checkedPhone.constructor);
            arg2.writeBool(this.phone_registered);
        }
    }

    public class TL_auth_codeTypeCall extends auth_CodeType {
        public static int constructor = 1948046307;

        static {
        }

        public TL_auth_codeTypeCall() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_codeTypeCall.constructor);
        }
    }

    public class TL_auth_codeTypeFlashCall extends auth_CodeType {
        public static int constructor = 577556219;

        static {
        }

        public TL_auth_codeTypeFlashCall() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_codeTypeFlashCall.constructor);
        }
    }

    public class TL_auth_codeTypeSms extends auth_CodeType {
        public static int constructor = 1923290508;

        static {
        }

        public TL_auth_codeTypeSms() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_codeTypeSms.constructor);
        }
    }

    public class TL_auth_exportAuthorization extends TLObject {
        public static int constructor = -440401971;
        public int dc_id;

        static {
        }

        public TL_auth_exportAuthorization() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_exportedAuthorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_exportAuthorization.constructor);
            arg2.writeInt32(this.dc_id);
        }
    }

    public class TL_auth_exportedAuthorization extends TLObject {
        public byte[] bytes;
        public static int constructor = -543777747;
        public int id;

        static {
        }

        public TL_auth_exportedAuthorization() {
            super();
        }

        public static TL_auth_exportedAuthorization TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_auth_exportedAuthorization.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_auth_exportedAuthorization", Integer.valueOf(arg2)));
            }

            TL_auth_exportedAuthorization v2 = new TL_auth_exportedAuthorization();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.bytes = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_exportedAuthorization.constructor);
            arg2.writeInt32(this.id);
            arg2.writeByteArray(this.bytes);
        }
    }

    public class TL_auth_importAuthorization extends TLObject {
        public byte[] bytes;
        public static int constructor = -470837741;
        public int id;

        static {
        }

        public TL_auth_importAuthorization() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_authorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_importAuthorization.constructor);
            arg2.writeInt32(this.id);
            arg2.writeByteArray(this.bytes);
        }
    }

    public class TL_auth_logOut extends TLObject {
        public static int constructor = 1461180992;

        static {
        }

        public TL_auth_logOut() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_logOut.constructor);
        }
    }

    public class TL_auth_passwordRecovery extends TLObject {
        public static int constructor = 326715557;
        public String email_pattern;

        static {
        }

        public TL_auth_passwordRecovery() {
            super();
        }

        public static TL_auth_passwordRecovery TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_auth_passwordRecovery.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_auth_passwordRecovery", Integer.valueOf(arg2)));
            }

            TL_auth_passwordRecovery v2 = new TL_auth_passwordRecovery();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.email_pattern = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_passwordRecovery.constructor);
            arg2.writeString(this.email_pattern);
        }
    }

    public class TL_auth_recoverPassword extends TLObject {
        public String code;
        public static int constructor = 1319464594;

        static {
        }

        public TL_auth_recoverPassword() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_authorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_recoverPassword.constructor);
            arg2.writeString(this.code);
        }
    }

    public class TL_auth_requestPasswordRecovery extends TLObject {
        public static int constructor = -661144474;

        static {
        }

        public TL_auth_requestPasswordRecovery() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_passwordRecovery.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_requestPasswordRecovery.constructor);
        }
    }

    public class TL_auth_resendCode extends TLObject {
        public static int constructor = 1056025023;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_auth_resendCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_sentCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_resendCode.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
        }
    }

    public class TL_auth_resetAuthorizations extends TLObject {
        public static int constructor = -1616179942;

        static {
        }

        public TL_auth_resetAuthorizations() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_resetAuthorizations.constructor);
        }
    }

    public class TL_auth_sendCode extends TLObject {
        public boolean allow_flashcall;
        public String api_hash;
        public int api_id;
        public static int constructor = -2035355412;
        public boolean current_number;
        public int flags;
        public String phone_number;

        static {
        }

        public TL_auth_sendCode() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_sentCode.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sendCode.constructor);
            int v0 = this.allow_flashcall ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.phone_number);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.current_number);
            }

            arg2.writeInt32(this.api_id);
            arg2.writeString(this.api_hash);
        }
    }

    public class TL_auth_sentCode extends TLObject {
        public static int constructor = 955951967;
        public int flags;
        public auth_CodeType next_type;
        public String phone_code_hash;
        public boolean phone_registered;
        public TL_help_termsOfService terms_of_service;
        public int timeout;
        public auth_SentCodeType type;

        static {
        }

        public TL_auth_sentCode() {
            super();
        }

        public static TL_auth_sentCode TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_auth_sentCode.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_auth_sentCode", Integer.valueOf(arg2)));
            }

            TL_auth_sentCode v2 = new TL_auth_sentCode();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.phone_registered = v1;
            this.type = auth_SentCodeType.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.phone_code_hash = arg3.readString(arg4);
            if((this.flags & 2) != 0) {
                this.next_type = auth_CodeType.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 4) != 0) {
                this.timeout = arg3.readInt32(arg4);
            }

            if((this.flags & 8) != 0) {
                this.terms_of_service = TL_help_termsOfService.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sentCode.constructor);
            int v0 = this.phone_registered ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.type.serializeToStream(arg2);
            arg2.writeString(this.phone_code_hash);
            if((this.flags & 2) != 0) {
                this.next_type.serializeToStream(arg2);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.timeout);
            }

            if((this.flags & 8) != 0) {
                this.terms_of_service.serializeToStream(arg2);
            }
        }
    }

    public class TL_auth_sentCodeTypeApp extends auth_SentCodeType {
        public static int constructor = 1035688326;

        static {
        }

        public TL_auth_sentCodeTypeApp() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.length = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sentCodeTypeApp.constructor);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_auth_sentCodeTypeCall extends auth_SentCodeType {
        public static int constructor = 1398007207;

        static {
        }

        public TL_auth_sentCodeTypeCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.length = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sentCodeTypeCall.constructor);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_auth_sentCodeTypeFlashCall extends auth_SentCodeType {
        public static int constructor = -1425815847;

        static {
        }

        public TL_auth_sentCodeTypeFlashCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.pattern = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sentCodeTypeFlashCall.constructor);
            arg2.writeString(this.pattern);
        }
    }

    public class TL_auth_sentCodeTypeSms extends auth_SentCodeType {
        public static int constructor = -1073693790;

        static {
        }

        public TL_auth_sentCodeTypeSms() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.length = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_sentCodeTypeSms.constructor);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_auth_signIn extends TLObject {
        public static int constructor = -1126886015;
        public String phone_code;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_auth_signIn() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_authorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_signIn.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
            arg2.writeString(this.phone_code);
        }
    }

    public class TL_auth_signUp extends TLObject {
        public static int constructor = 453408308;
        public String first_name;
        public String last_name;
        public String phone_code;
        public String phone_code_hash;
        public String phone_number;

        static {
        }

        public TL_auth_signUp() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_auth_authorization.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_auth_signUp.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.phone_code_hash);
            arg2.writeString(this.phone_code);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
        }
    }

    public class TL_authorization extends TLObject {
        public int api_id;
        public String app_name;
        public String app_version;
        public static int constructor = 2079516406;
        public String country;
        public int date_active;
        public int date_created;
        public String device_model;
        public int flags;
        public long hash;
        public String ip;
        public String platform;
        public String region;
        public String system_version;

        static {
        }

        public TL_authorization() {
            super();
        }

        public static TL_authorization TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_authorization.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_authorization", Integer.valueOf(arg2)));
            }

            TL_authorization v2 = new TL_authorization();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.hash = arg3.readInt64(arg4);
            this.flags = arg3.readInt32(arg4);
            this.device_model = arg3.readString(arg4);
            this.platform = arg3.readString(arg4);
            this.system_version = arg3.readString(arg4);
            this.api_id = arg3.readInt32(arg4);
            this.app_name = arg3.readString(arg4);
            this.app_version = arg3.readString(arg4);
            this.date_created = arg3.readInt32(arg4);
            this.date_active = arg3.readInt32(arg4);
            this.ip = arg3.readString(arg4);
            this.country = arg3.readString(arg4);
            this.region = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_authorization.constructor);
            arg3.writeInt64(this.hash);
            arg3.writeInt32(this.flags);
            arg3.writeString(this.device_model);
            arg3.writeString(this.platform);
            arg3.writeString(this.system_version);
            arg3.writeInt32(this.api_id);
            arg3.writeString(this.app_name);
            arg3.writeString(this.app_version);
            arg3.writeInt32(this.date_created);
            arg3.writeInt32(this.date_active);
            arg3.writeString(this.ip);
            arg3.writeString(this.country);
            arg3.writeString(this.region);
        }
    }

    public class TL_boolFalse extends Bool {
        public static int constructor = -1132882121;

        static {
        }

        public TL_boolFalse() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_boolFalse.constructor);
        }
    }

    public class TL_boolTrue extends Bool {
        public static int constructor = -1720552011;

        static {
        }

        public TL_boolTrue() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_boolTrue.constructor);
        }
    }

    public class TL_botCommand extends TLObject {
        public String command;
        public static int constructor = -1032140601;
        public String description;

        static {
        }

        public TL_botCommand() {
            super();
        }

        public static TL_botCommand TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_botCommand.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_botCommand", Integer.valueOf(arg2)));
            }

            TL_botCommand v2 = new TL_botCommand();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.command = arg2.readString(arg3);
            this.description = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botCommand.constructor);
            arg2.writeString(this.command);
            arg2.writeString(this.description);
        }
    }

    public class TL_botInfo extends BotInfo {
        public static int constructor = -1729618630;

        static {
        }

        public TL_botInfo() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.user_id = arg5.readInt32(arg6);
            this.description = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_botCommand v2 = TL_botCommand.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.commands.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_botInfo.constructor);
            arg4.writeInt32(this.user_id);
            arg4.writeString(this.description);
            arg4.writeInt32(481674261);
            int v0 = this.commands.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.commands.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_botInfoEmpty_layer48 extends TL_botInfo {
        public static int constructor = -1154598962;

        static {
        }

        public TL_botInfoEmpty_layer48() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInfoEmpty_layer48.constructor);
        }
    }

    public class TL_botInfo_layer48 extends TL_botInfo {
        public static int constructor = 164583517;

        static {
        }

        public TL_botInfo_layer48() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.user_id = arg5.readInt32(arg6);
            this.version = arg5.readInt32(arg6);
            arg5.readString(arg6);
            this.description = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_botCommand v2 = TL_botCommand.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.commands.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_botInfo_layer48.constructor);
            arg4.writeInt32(this.user_id);
            arg4.writeInt32(this.version);
            arg4.writeString("");
            arg4.writeString(this.description);
            arg4.writeInt32(481674261);
            int v0 = this.commands.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.commands.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_botInlineMediaResult extends BotInlineResult {
        public static int constructor = 400266251;

        static {
        }

        public TL_botInlineMediaResult() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.id = arg2.readString(arg3);
            this.type = arg2.readString(arg3);
            if((this.flags & 1) != 0) {
                this.photo = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            if((this.flags & 2) != 0) {
                this.document = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            if((this.flags & 4) != 0) {
                this.title = arg2.readString(arg3);
            }

            if((this.flags & 8) != 0) {
                this.description = arg2.readString(arg3);
            }

            this.send_message = BotInlineMessage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMediaResult.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.id);
            arg2.writeString(this.type);
            if((this.flags & 1) != 0) {
                this.photo.serializeToStream(arg2);
            }

            if((this.flags & 2) != 0) {
                this.document.serializeToStream(arg2);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.title);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.description);
            }

            this.send_message.serializeToStream(arg2);
        }
    }

    public class TL_botInlineMessageMediaAuto extends BotInlineMessage {
        public static int constructor = 1984755728;

        static {
        }

        public TL_botInlineMessageMediaAuto() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 2) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v2 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v2 < v0) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_botInlineMessageMediaAuto.constructor);
            arg4.writeInt32(this.flags);
            arg4.writeString(this.message);
            if((this.flags & 2) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }
        }
    }

    public class TL_botInlineMessageMediaAuto_layer74 extends TL_botInlineMessageMediaAuto {
        public static int constructor = 175419739;

        static {
        }

        public TL_botInlineMessageMediaAuto_layer74() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.message = arg2.readString(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaAuto_layer74.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.message);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaContact extends BotInlineMessage {
        public static int constructor = 416402882;

        static {
        }

        public TL_botInlineMessageMediaContact() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.vcard = arg2.readString(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaContact.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.vcard);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaContact_layer81 extends TL_botInlineMessageMediaContact {
        public static int constructor = 904770772;

        static {
        }

        public TL_botInlineMessageMediaContact_layer81() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaContact_layer81.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaGeo extends BotInlineMessage {
        public static int constructor = -1222451611;

        static {
        }

        public TL_botInlineMessageMediaGeo() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.period = arg2.readInt32(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaGeo.constructor);
            arg2.writeInt32(this.flags);
            this.geo.serializeToStream(arg2);
            arg2.writeInt32(this.period);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaGeo_layer71 extends TL_botInlineMessageMediaGeo {
        public static int constructor = 982505656;

        static {
        }

        public TL_botInlineMessageMediaGeo_layer71() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaGeo_layer71.constructor);
            arg2.writeInt32(this.flags);
            this.geo.serializeToStream(arg2);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaVenue extends BotInlineMessage {
        public static int constructor = -1970903652;

        static {
        }

        public TL_botInlineMessageMediaVenue() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
            this.provider = arg2.readString(arg3);
            this.venue_id = arg2.readString(arg3);
            this.venue_type = arg2.readString(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaVenue.constructor);
            arg2.writeInt32(this.flags);
            this.geo.serializeToStream(arg2);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
            arg2.writeString(this.provider);
            arg2.writeString(this.venue_id);
            arg2.writeString(this.venue_type);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageMediaVenue_layer77 extends TL_botInlineMessageMediaVenue {
        public static int constructor = 1130767150;

        static {
        }

        public TL_botInlineMessageMediaVenue_layer77() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
            this.provider = arg2.readString(arg3);
            this.venue_id = arg2.readString(arg3);
            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineMessageMediaVenue_layer77.constructor);
            arg2.writeInt32(this.flags);
            this.geo.serializeToStream(arg2);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
            arg2.writeString(this.provider);
            arg2.writeString(this.venue_id);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }
        }
    }

    public class TL_botInlineMessageText extends BotInlineMessage {
        public static int constructor = -1937807902;

        static {
        }

        public TL_botInlineMessageText() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.no_webpage = v0;
            this.message = arg5.readString(arg6);
            if((this.flags & 2) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 4) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_botInlineMessageText.constructor);
            int v0 = this.no_webpage ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeString(this.message);
            if((this.flags & 2) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }
        }
    }

    public class TL_botInlineResult extends BotInlineResult {
        public static int constructor = 295067450;

        static {
        }

        public TL_botInlineResult() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.id = arg2.readString(arg3);
            this.type = arg2.readString(arg3);
            if((this.flags & 2) != 0) {
                this.title = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.description = arg2.readString(arg3);
            }

            if((this.flags & 8) != 0) {
                this.url = arg2.readString(arg3);
            }

            if((this.flags & 16) != 0) {
                this.thumb = WebDocument.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            if((this.flags & 32) != 0) {
                this.content = WebDocument.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            this.send_message = BotInlineMessage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_botInlineResult.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.id);
            arg2.writeString(this.type);
            if((this.flags & 2) != 0) {
                arg2.writeString(this.title);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.description);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.url);
            }

            if((this.flags & 16) != 0) {
                this.thumb.serializeToStream(arg2);
            }

            if((this.flags & 32) != 0) {
                this.content.serializeToStream(arg2);
            }

            this.send_message.serializeToStream(arg2);
        }
    }

    public class TL_channel extends Chat {
        public static int constructor = -930515796;

        static {
        }

        public TL_channel() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            v0 = (this.flags & 512) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.democracy = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.signatures = v0;
            if((this.flags & 4096) != 0) {
            }
            else {
                v1 = false;
            }

            this.min = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 8192) != 0) {
                this.access_hash = arg4.readInt64(arg5);
            }

            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 512) != 0) {
                this.restriction_reason = arg4.readString(arg5);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights = TL_channelAdminRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights = TL_channelBannedRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 131072) != 0) {
                this.participants_count = arg4.readInt32(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.restricted ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.democracy ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.signatures ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.min ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            if((this.flags & 8192) != 0) {
                arg3.writeInt64(this.access_hash);
            }

            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
            if((this.flags & 512) != 0) {
                arg3.writeString(this.restriction_reason);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights.serializeToStream(arg3);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights.serializeToStream(arg3);
            }

            if((this.flags & 131072) != 0) {
                arg3.writeInt32(this.participants_count);
            }
        }
    }

    public class TL_channelAdminLogEvent extends TLObject {
        public ChannelAdminLogEventAction action;
        public static int constructor = 995769920;
        public int date;
        public long id;
        public int user_id;

        static {
        }

        public TL_channelAdminLogEvent() {
            super();
        }

        public static TL_channelAdminLogEvent TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channelAdminLogEvent.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channelAdminLogEvent", Integer.valueOf(arg2)));
            }

            TL_channelAdminLogEvent v2 = new TL_channelAdminLogEvent();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.action = ChannelAdminLogEventAction.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channelAdminLogEvent.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.user_id);
            this.action.serializeToStream(arg3);
        }
    }

    public class TL_channelAdminLogEventActionChangeAbout extends ChannelAdminLogEventAction {
        public static int constructor = 1427671598;
        public String new_value;

        static {
        }

        public TL_channelAdminLogEventActionChangeAbout() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_value = arg2.readString(arg3);
            this.new_value = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionChangeAbout.constructor);
            arg2.writeString(this.prev_value);
            arg2.writeString(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionChangePhoto extends ChannelAdminLogEventAction {
        public static int constructor = -1204857405;

        static {
        }

        public TL_channelAdminLogEventActionChangePhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_photo = ChatPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.new_photo = ChatPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionChangePhoto.constructor);
            this.prev_photo.serializeToStream(arg2);
            this.new_photo.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionChangeStickerSet extends ChannelAdminLogEventAction {
        public static int constructor = -1312568665;

        static {
        }

        public TL_channelAdminLogEventActionChangeStickerSet() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_stickerset = InputStickerSet.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.new_stickerset = InputStickerSet.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionChangeStickerSet.constructor);
            this.prev_stickerset.serializeToStream(arg2);
            this.new_stickerset.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionChangeTitle extends ChannelAdminLogEventAction {
        public static int constructor = -421545947;
        public String new_value;

        static {
        }

        public TL_channelAdminLogEventActionChangeTitle() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_value = arg2.readString(arg3);
            this.new_value = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionChangeTitle.constructor);
            arg2.writeString(this.prev_value);
            arg2.writeString(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionChangeUsername extends ChannelAdminLogEventAction {
        public static int constructor = 1783299128;
        public String new_value;

        static {
        }

        public TL_channelAdminLogEventActionChangeUsername() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_value = arg2.readString(arg3);
            this.new_value = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionChangeUsername.constructor);
            arg2.writeString(this.prev_value);
            arg2.writeString(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionDeleteMessage extends ChannelAdminLogEventAction {
        public static int constructor = 1121994683;

        static {
        }

        public TL_channelAdminLogEventActionDeleteMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionDeleteMessage.constructor);
            this.message.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionEditMessage extends ChannelAdminLogEventAction {
        public static int constructor = 1889215493;

        static {
        }

        public TL_channelAdminLogEventActionEditMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.new_message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionEditMessage.constructor);
            this.prev_message.serializeToStream(arg2);
            this.new_message.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionParticipantInvite extends ChannelAdminLogEventAction {
        public static int constructor = -484690728;

        static {
        }

        public TL_channelAdminLogEventActionParticipantInvite() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.participant = ChannelParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionParticipantInvite.constructor);
            this.participant.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionParticipantJoin extends ChannelAdminLogEventAction {
        public static int constructor = 405815507;

        static {
        }

        public TL_channelAdminLogEventActionParticipantJoin() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionParticipantJoin.constructor);
        }
    }

    public class TL_channelAdminLogEventActionParticipantLeave extends ChannelAdminLogEventAction {
        public static int constructor = -124291086;

        static {
        }

        public TL_channelAdminLogEventActionParticipantLeave() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionParticipantLeave.constructor);
        }
    }

    public class TL_channelAdminLogEventActionParticipantToggleAdmin extends ChannelAdminLogEventAction {
        public static int constructor = -714643696;

        static {
        }

        public TL_channelAdminLogEventActionParticipantToggleAdmin() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_participant = ChannelParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.new_participant = ChannelParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionParticipantToggleAdmin.constructor);
            this.prev_participant.serializeToStream(arg2);
            this.new_participant.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionParticipantToggleBan extends ChannelAdminLogEventAction {
        public static int constructor = -422036098;

        static {
        }

        public TL_channelAdminLogEventActionParticipantToggleBan() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.prev_participant = ChannelParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.new_participant = ChannelParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionParticipantToggleBan.constructor);
            this.prev_participant.serializeToStream(arg2);
            this.new_participant.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventActionToggleInvites extends ChannelAdminLogEventAction {
        public static int constructor = 460916654;
        public boolean new_value;

        static {
        }

        public TL_channelAdminLogEventActionToggleInvites() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.new_value = arg1.readBool(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionToggleInvites.constructor);
            arg2.writeBool(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionTogglePreHistoryHidden extends ChannelAdminLogEventAction {
        public static int constructor = 1599903217;
        public boolean new_value;

        static {
        }

        public TL_channelAdminLogEventActionTogglePreHistoryHidden() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.new_value = arg1.readBool(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionTogglePreHistoryHidden.constructor);
            arg2.writeBool(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionToggleSignatures extends ChannelAdminLogEventAction {
        public static int constructor = 648939889;
        public boolean new_value;

        static {
        }

        public TL_channelAdminLogEventActionToggleSignatures() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.new_value = arg1.readBool(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionToggleSignatures.constructor);
            arg2.writeBool(this.new_value);
        }
    }

    public class TL_channelAdminLogEventActionUpdatePinned extends ChannelAdminLogEventAction {
        public static int constructor = -370660328;

        static {
        }

        public TL_channelAdminLogEventActionUpdatePinned() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventActionUpdatePinned.constructor);
            this.message.serializeToStream(arg2);
        }
    }

    public class TL_channelAdminLogEventsFilter extends TLObject {
        public boolean ban;
        public static int constructor = -368018716;
        public boolean delete;
        public boolean demote;
        public boolean edit;
        public int flags;
        public boolean info;
        public boolean invite;
        public boolean join;
        public boolean kick;
        public boolean leave;
        public boolean pinned;
        public boolean promote;
        public boolean settings;
        public boolean unban;
        public boolean unkick;

        static {
        }

        public TL_channelAdminLogEventsFilter() {
            super();
        }

        public static TL_channelAdminLogEventsFilter TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channelAdminLogEventsFilter.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channelAdminLogEventsFilter", Integer.valueOf(arg2)));
            }

            TL_channelAdminLogEventsFilter v2 = new TL_channelAdminLogEventsFilter();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            arg3 = true;
            boolean v2 = (this.flags & 1) != 0 ? true : false;
            this.join = v2;
            v2 = (this.flags & 2) != 0 ? true : false;
            this.leave = v2;
            v2 = (this.flags & 4) != 0 ? true : false;
            this.invite = v2;
            v2 = (this.flags & 8) != 0 ? true : false;
            this.ban = v2;
            v2 = (this.flags & 16) != 0 ? true : false;
            this.unban = v2;
            v2 = (this.flags & 32) != 0 ? true : false;
            this.kick = v2;
            v2 = (this.flags & 64) != 0 ? true : false;
            this.unkick = v2;
            v2 = (this.flags & 128) != 0 ? true : false;
            this.promote = v2;
            v2 = (this.flags & 256) != 0 ? true : false;
            this.demote = v2;
            v2 = (this.flags & 512) != 0 ? true : false;
            this.info = v2;
            v2 = (this.flags & 1024) != 0 ? true : false;
            this.settings = v2;
            v2 = (this.flags & 2048) != 0 ? true : false;
            this.pinned = v2;
            v2 = (this.flags & 4096) != 0 ? true : false;
            this.edit = v2;
            if((this.flags & 8192) != 0) {
            }
            else {
                arg3 = false;
            }

            this.delete = arg3;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminLogEventsFilter.constructor);
            int v0 = this.join ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.leave ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.invite ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.ban ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.unban ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.kick ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.unkick ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.promote ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.demote ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.info ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.settings ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.pinned ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.edit ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            v0 = this.delete ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_channelAdminRights extends TLObject {
        public boolean add_admins;
        public boolean ban_users;
        public boolean change_info;
        public static int constructor = 1568467877;
        public boolean delete_messages;
        public boolean edit_messages;
        public int flags;
        public boolean invite_link;
        public boolean invite_users;
        public boolean manage_call;
        public boolean pin_messages;
        public boolean post_messages;

        static {
        }

        public TL_channelAdminRights() {
            super();
        }

        public static TL_channelAdminRights TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channelAdminRights.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channelAdminRights", Integer.valueOf(arg2)));
            }

            TL_channelAdminRights v2 = new TL_channelAdminRights();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            arg3 = true;
            boolean v2 = (this.flags & 1) != 0 ? true : false;
            this.change_info = v2;
            v2 = (this.flags & 2) != 0 ? true : false;
            this.post_messages = v2;
            v2 = (this.flags & 4) != 0 ? true : false;
            this.edit_messages = v2;
            v2 = (this.flags & 8) != 0 ? true : false;
            this.delete_messages = v2;
            v2 = (this.flags & 16) != 0 ? true : false;
            this.ban_users = v2;
            v2 = (this.flags & 32) != 0 ? true : false;
            this.invite_users = v2;
            v2 = (this.flags & 64) != 0 ? true : false;
            this.invite_link = v2;
            v2 = (this.flags & 128) != 0 ? true : false;
            this.pin_messages = v2;
            v2 = (this.flags & 512) != 0 ? true : false;
            this.add_admins = v2;
            if((this.flags & 1024) != 0) {
            }
            else {
                arg3 = false;
            }

            this.manage_call = arg3;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelAdminRights.constructor);
            int v0 = this.change_info ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.post_messages ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.edit_messages ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.delete_messages ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.ban_users ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.invite_users ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.invite_link ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.pin_messages ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.add_admins ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.manage_call ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_channelBannedRights extends TLObject {
        public static int constructor = 1489977929;
        public boolean embed_links;
        public int flags;
        public boolean send_games;
        public boolean send_gifs;
        public boolean send_inline;
        public boolean send_media;
        public boolean send_messages;
        public boolean send_stickers;
        public int until_date;
        public boolean view_messages;

        static {
        }

        public TL_channelBannedRights() {
            super();
        }

        public static TL_channelBannedRights TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channelBannedRights.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channelBannedRights", Integer.valueOf(arg2)));
            }

            TL_channelBannedRights v2 = new TL_channelBannedRights();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.view_messages = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.send_messages = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.send_media = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.send_stickers = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.send_gifs = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.send_games = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.send_inline = v0;
            if((this.flags & 128) != 0) {
            }
            else {
                v1 = false;
            }

            this.embed_links = v1;
            this.until_date = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelBannedRights.constructor);
            int v0 = this.view_messages ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.send_messages ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.send_media ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.send_stickers ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.send_gifs ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.send_games ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.send_inline ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.embed_links ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.until_date);
        }
    }

    public class TL_channelForbidden extends Chat {
        public static int constructor = 681420594;

        static {
        }

        public TL_channelForbidden() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            if((this.flags & 256) != 0) {
                v1 = true;
            }

            this.megagroup = v1;
            this.id = arg4.readInt32(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
            if((this.flags & 65536) != 0) {
                this.until_date = arg4.readInt32(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channelForbidden.constructor);
            int v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            if((this.flags & 65536) != 0) {
                arg3.writeInt32(this.until_date);
            }
        }
    }

    public class TL_channelForbidden_layer52 extends TL_channelForbidden {
        public static int constructor = 763724588;

        static {
        }

        public TL_channelForbidden_layer52() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.title = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channelForbidden_layer52.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
        }
    }

    public class TL_channelForbidden_layer67 extends TL_channelForbidden {
        public static int constructor = -2059962289;

        static {
        }

        public TL_channelForbidden_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            if((this.flags & 256) != 0) {
                v1 = true;
            }

            this.megagroup = v1;
            this.id = arg4.readInt32(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channelForbidden_layer67.constructor);
            int v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
        }
    }

    public class TL_channelFull extends ChatFull {
        public static int constructor = -877254512;

        static {
        }

        public TL_channelFull() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.can_set_stickers = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.hidden_prehistory = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.banned_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.read_outbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }

            if((this.flags & 256) != 0) {
                this.stickerset = StickerSet.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 512) != 0) {
                this.available_min_id = arg5.readInt32(arg6);
            }

            if((this.flags & 2048) != 0) {
                this.call_msg_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.can_set_stickers ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.hidden_prehistory ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.banned_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.read_outbox_max_id);
            arg4.writeInt32(this.unread_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }

            if((this.flags & 256) != 0) {
                this.stickerset.serializeToStream(arg4);
            }

            if((this.flags & 512) != 0) {
                arg4.writeInt32(this.available_min_id);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeInt32(this.call_msg_id);
            }
        }
    }

    public class TL_channelFull_layer48 extends TL_channelFull {
        public static int constructor = -1640751649;

        static {
        }

        public TL_channelFull_layer48() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.unread_important_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer48.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.unread_count);
            arg4.writeInt32(this.unread_important_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }
        }
    }

    public class TL_channelFull_layer52 extends TL_channelFull {
        public static int constructor = -1749097118;

        static {
        }

        public TL_channelFull_layer52() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.unread_important_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer52.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.unread_count);
            arg4.writeInt32(this.unread_important_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }
        }
    }

    public class TL_channelFull_layer67 extends TL_channelFull {
        public static int constructor = -1009430225;

        static {
        }

        public TL_channelFull_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.read_outbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer67.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.read_outbox_max_id);
            arg4.writeInt32(this.unread_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }
        }
    }

    public class TL_channelFull_layer70 extends TL_channelFull {
        public static int constructor = -1781833897;

        static {
        }

        public TL_channelFull_layer70() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.banned_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.read_outbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer70.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.banned_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.read_outbox_max_id);
            arg4.writeInt32(this.unread_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }
        }
    }

    public class TL_channelFull_layer71 extends TL_channelFull {
        public static int constructor = 401891279;

        static {
        }

        public TL_channelFull_layer71() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.can_set_stickers = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.banned_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.read_outbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }

            if((this.flags & 256) != 0) {
                this.stickerset = StickerSet.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer71.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.can_set_stickers ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.banned_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.read_outbox_max_id);
            arg4.writeInt32(this.unread_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }

            if((this.flags & 256) != 0) {
                this.stickerset.serializeToStream(arg4);
            }
        }
    }

    public class TL_channelFull_layer72 extends TL_channelFull {
        public static int constructor = 1991201921;

        static {
        }

        public TL_channelFull_layer72() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.can_set_username = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.can_set_stickers = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.hidden_prehistory = v0;
            this.id = arg5.readInt32(arg6);
            this.about = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                this.participants_count = arg5.readInt32(arg6);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg5.readInt32(arg6);
            }

            if((this.flags & 4) != 0) {
                this.banned_count = arg5.readInt32(arg6);
            }

            this.read_inbox_max_id = arg5.readInt32(arg6);
            this.read_outbox_max_id = arg5.readInt32(arg6);
            this.unread_count = arg5.readInt32(arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_chat_id = arg5.readInt32(arg6);
            }

            if((this.flags & 16) != 0) {
                this.migrated_from_max_id = arg5.readInt32(arg6);
            }

            if((this.flags & 32) != 0) {
                this.pinned_msg_id = arg5.readInt32(arg6);
            }

            if((this.flags & 256) != 0) {
                this.stickerset = StickerSet.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 512) != 0) {
                this.available_min_id = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelFull_layer72.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.can_set_username ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.can_set_stickers ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.hidden_prehistory ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.kicked_count);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.banned_count);
            }

            arg4.writeInt32(this.read_inbox_max_id);
            arg4.writeInt32(this.read_outbox_max_id);
            arg4.writeInt32(this.unread_count);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_chat_id);
            }

            if((this.flags & 16) != 0) {
                arg4.writeInt32(this.migrated_from_max_id);
            }

            if((this.flags & 32) != 0) {
                arg4.writeInt32(this.pinned_msg_id);
            }

            if((this.flags & 256) != 0) {
                this.stickerset.serializeToStream(arg4);
            }

            if((this.flags & 512) != 0) {
                arg4.writeInt32(this.available_min_id);
            }
        }
    }

    public class TL_channelFull_old extends TL_channelFull {
        public static int constructor = -88925533;

        static {
        }

        public TL_channelFull_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.can_view_participants = v0;
            this.id = arg3.readInt32(arg4);
            this.about = arg3.readString(arg4);
            if((this.flags & 1) != 0) {
                this.participants_count = arg3.readInt32(arg4);
            }

            if((this.flags & 2) != 0) {
                this.admins_count = arg3.readInt32(arg4);
            }

            if((this.flags & 4) != 0) {
                this.kicked_count = arg3.readInt32(arg4);
            }

            this.read_inbox_max_id = arg3.readInt32(arg4);
            this.unread_count = arg3.readInt32(arg4);
            this.unread_important_count = arg3.readInt32(arg4);
            this.chat_photo = Photo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelFull_old.constructor);
            int v0 = this.can_view_participants ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeString(this.about);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.participants_count);
            }

            if((this.flags & 2) != 0) {
                arg2.writeInt32(this.admins_count);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.kicked_count);
            }

            arg2.writeInt32(this.read_inbox_max_id);
            arg2.writeInt32(this.unread_count);
            arg2.writeInt32(this.unread_important_count);
            this.chat_photo.serializeToStream(arg2);
            this.notify_settings.serializeToStream(arg2);
            this.exported_invite.serializeToStream(arg2);
        }
    }

    public class TL_channelMessagesFilter extends ChannelMessagesFilter {
        public static int constructor = -847783593;

        static {
        }

        public TL_channelMessagesFilter() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.exclude_new_messages = v0;
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                TL_messageRange v2 = TL_messageRange.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.ranges.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channelMessagesFilter.constructor);
            int v0 = this.exclude_new_messages ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(481674261);
            v0 = this.ranges.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.ranges.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_channelMessagesFilterEmpty extends ChannelMessagesFilter {
        public static int constructor = -1798033689;

        static {
        }

        public TL_channelMessagesFilterEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelMessagesFilterEmpty.constructor);
        }
    }

    public class TL_channelParticipant extends ChannelParticipant {
        public static int constructor = 367766557;

        static {
        }

        public TL_channelParticipant() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipant.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_channelParticipantAdmin extends ChannelParticipant {
        public static int constructor = -1473271656;

        static {
        }

        public TL_channelParticipantAdmin() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.can_edit = v1;
            this.user_id = arg3.readInt32(arg4);
            this.inviter_id = arg3.readInt32(arg4);
            this.promoted_by = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_rights = TL_channelAdminRights.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantAdmin.constructor);
            int v0 = this.can_edit ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.promoted_by);
            arg2.writeInt32(this.date);
            this.admin_rights.serializeToStream(arg2);
        }
    }

    public class TL_channelParticipantBanned extends ChannelParticipant {
        public static int constructor = 573315206;

        static {
        }

        public TL_channelParticipantBanned() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.left = v1;
            this.user_id = arg3.readInt32(arg4);
            this.kicked_by = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.banned_rights = TL_channelBannedRights.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantBanned.constructor);
            int v0 = this.left ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.kicked_by);
            arg2.writeInt32(this.date);
            this.banned_rights.serializeToStream(arg2);
        }
    }

    public class TL_channelParticipantCreator extends ChannelParticipant {
        public static int constructor = -471670279;

        static {
        }

        public TL_channelParticipantCreator() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantCreator.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_channelParticipantEditor_layer67 extends TL_channelParticipantAdmin {
        public static int constructor = -1743180447;

        static {
        }

        public TL_channelParticipantEditor_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantEditor_layer67.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_channelParticipantKicked_layer67 extends ChannelParticipant {
        public static int constructor = -1933187430;

        static {
        }

        public TL_channelParticipantKicked_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.kicked_by = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantKicked_layer67.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.kicked_by);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_channelParticipantModerator_layer67 extends TL_channelParticipantAdmin {
        public static int constructor = -1861910545;

        static {
        }

        public TL_channelParticipantModerator_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantModerator_layer67.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_channelParticipantSelf extends ChannelParticipant {
        public static int constructor = -1557620115;

        static {
        }

        public TL_channelParticipantSelf() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantSelf.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_channelParticipantsAdmins extends ChannelParticipantsFilter {
        public static int constructor = -1268741783;

        static {
        }

        public TL_channelParticipantsAdmins() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsAdmins.constructor);
        }
    }

    public class TL_channelParticipantsBanned extends ChannelParticipantsFilter {
        public static int constructor = 338142689;

        static {
        }

        public TL_channelParticipantsBanned() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.q = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsBanned.constructor);
            arg2.writeString(this.q);
        }
    }

    public class TL_channelParticipantsBots extends ChannelParticipantsFilter {
        public static int constructor = -1328445861;

        static {
        }

        public TL_channelParticipantsBots() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsBots.constructor);
        }
    }

    public class TL_channelParticipantsKicked extends ChannelParticipantsFilter {
        public static int constructor = -1548400251;

        static {
        }

        public TL_channelParticipantsKicked() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.q = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsKicked.constructor);
            arg2.writeString(this.q);
        }
    }

    public class TL_channelParticipantsRecent extends ChannelParticipantsFilter {
        public static int constructor = -566281095;

        static {
        }

        public TL_channelParticipantsRecent() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsRecent.constructor);
        }
    }

    public class TL_channelParticipantsSearch extends ChannelParticipantsFilter {
        public static int constructor = 106343499;

        static {
        }

        public TL_channelParticipantsSearch() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.q = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channelParticipantsSearch.constructor);
            arg2.writeString(this.q);
        }
    }

    public class TL_channel_layer48 extends TL_channel {
        public static int constructor = 1260090630;

        static {
        }

        public TL_channel_layer48() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.kicked = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.moderator = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            v0 = (this.flags & 512) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.democracy = v0;
            if((this.flags & 2048) != 0) {
            }
            else {
                v1 = false;
            }

            this.signatures = v1;
            this.id = arg4.readInt32(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 512) != 0) {
                this.restriction_reason = arg4.readString(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel_layer48.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.moderator ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.restricted ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.democracy ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.signatures ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
            if((this.flags & 512) != 0) {
                arg3.writeString(this.restriction_reason);
            }
        }
    }

    public class TL_channel_layer67 extends TL_channel {
        public static int constructor = -1588737454;

        static {
        }

        public TL_channel_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.kicked = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.moderator = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            v0 = (this.flags & 512) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.democracy = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.signatures = v0;
            if((this.flags & 4096) != 0) {
            }
            else {
                v1 = false;
            }

            this.min = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 8192) != 0) {
                this.access_hash = arg4.readInt64(arg5);
            }

            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 512) != 0) {
                this.restriction_reason = arg4.readString(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel_layer67.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.moderator ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.restricted ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.democracy ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.signatures ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.min ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            if((this.flags & 8192) != 0) {
                arg3.writeInt64(this.access_hash);
            }

            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
            if((this.flags & 512) != 0) {
                arg3.writeString(this.restriction_reason);
            }
        }
    }

    public class TL_channel_layer72 extends TL_channel {
        public static int constructor = 213142300;

        static {
        }

        public TL_channel_layer72() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            v0 = (this.flags & 512) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.democracy = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.signatures = v0;
            if((this.flags & 4096) != 0) {
            }
            else {
                v1 = false;
            }

            this.min = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 8192) != 0) {
                this.access_hash = arg4.readInt64(arg5);
            }

            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 512) != 0) {
                this.restriction_reason = arg4.readString(arg5);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights = TL_channelAdminRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights = TL_channelBannedRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel_layer72.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.restricted ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.democracy ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.signatures ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.min ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            if((this.flags & 8192) != 0) {
                arg3.writeInt64(this.access_hash);
            }

            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
            if((this.flags & 512) != 0) {
                arg3.writeString(this.restriction_reason);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights.serializeToStream(arg3);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights.serializeToStream(arg3);
            }
        }
    }

    public class TL_channel_layer77 extends TL_channel {
        public static int constructor = 1158377749;

        static {
        }

        public TL_channel_layer77() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            v0 = (this.flags & 512) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1024) != 0 ? true : false;
            this.democracy = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.signatures = v0;
            if((this.flags & 4096) != 0) {
            }
            else {
                v1 = false;
            }

            this.min = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 8192) != 0) {
                this.access_hash = arg4.readInt64(arg5);
            }

            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 512) != 0) {
                this.restriction_reason = arg4.readString(arg5);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights = TL_channelAdminRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights = TL_channelBannedRights.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 131072) != 0) {
                this.participants_count = arg4.readInt32(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel_layer77.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.restricted ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            v0 = this.democracy ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.signatures ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.min ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            if((this.flags & 8192) != 0) {
                arg3.writeInt64(this.access_hash);
            }

            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
            if((this.flags & 512) != 0) {
                arg3.writeString(this.restriction_reason);
            }

            if((this.flags & 16384) != 0) {
                this.admin_rights.serializeToStream(arg3);
            }

            if((this.flags & 32768) != 0) {
                this.banned_rights.serializeToStream(arg3);
            }

            if((this.flags & 131072) != 0) {
                arg3.writeInt32(this.participants_count);
            }
        }
    }

    public class TL_channel_old extends TL_channel {
        public static int constructor = 1737397639;

        static {
        }

        public TL_channel_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.kicked = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.moderator = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.verified = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.megagroup = v0;
            if((this.flags & 512) != 0) {
            }
            else {
                v1 = false;
            }

            this.explicit_content = v1;
            this.id = arg4.readInt32(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
            if((this.flags & 64) != 0) {
                this.username = arg4.readString(arg5);
            }

            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_channel_old.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.moderator ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.verified ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.explicit_content ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            if((this.flags & 64) != 0) {
                arg3.writeString(this.username);
            }

            this.photo.serializeToStream(arg3);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.version);
        }
    }

    public class TL_channels_adminLogResults extends TLObject {
        public ArrayList chats;
        public static int constructor = -309659827;
        public ArrayList events;
        public ArrayList users;

        static {
        }

        public TL_channels_adminLogResults() {
            super();
            this.events = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_channels_adminLogResults TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channels_adminLogResults.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channels_adminLogResults", Integer.valueOf(arg2)));
            }

            TL_channels_adminLogResults v2 = new TL_channels_adminLogResults();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_channelAdminLogEvent v5 = TL_channelAdminLogEvent.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.events.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_channels_adminLogResults.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.events.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.events.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_channels_channelParticipant extends TLObject {
        public static int constructor = -791039645;
        public ChannelParticipant participant;
        public ArrayList users;

        static {
        }

        public TL_channels_channelParticipant() {
            super();
            this.users = new ArrayList();
        }

        public static TL_channels_channelParticipant TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channels_channelParticipant.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channels_channelParticipant", Integer.valueOf(arg2)));
            }

            TL_channels_channelParticipant v2 = new TL_channels_channelParticipant();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.participant = ChannelParticipant.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                User v2 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_channelParticipant.constructor);
            this.participant.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_channels_channelParticipants extends channels_ChannelParticipants {
        public static int constructor = -177282392;

        static {
        }

        public TL_channels_channelParticipants() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                ChannelParticipant v5 = ChannelParticipant.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.participants.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_channels_channelParticipants.constructor);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.participants.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.participants.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_channels_channelParticipantsNotModified extends channels_ChannelParticipants {
        public static int constructor = -266911767;

        static {
        }

        public TL_channels_channelParticipantsNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_channelParticipantsNotModified.constructor);
        }
    }

    public class TL_channels_checkUsername extends TLObject {
        public InputChannel channel;
        public static int constructor = 283557164;
        public String username;

        static {
        }

        public TL_channels_checkUsername() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_checkUsername.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeString(this.username);
        }
    }

    public class TL_channels_createChannel extends TLObject {
        public String about;
        public boolean broadcast;
        public static int constructor = -192332417;
        public int flags;
        public boolean megagroup;
        public String title;

        static {
        }

        public TL_channels_createChannel() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_createChannel.constructor);
            int v0 = this.broadcast ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.title);
            arg2.writeString(this.about);
        }
    }

    public class TL_channels_deleteChannel extends TLObject {
        public InputChannel channel;
        public static int constructor = -1072619549;

        static {
        }

        public TL_channels_deleteChannel() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_deleteChannel.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_channels_deleteHistory extends TLObject {
        public InputChannel channel;
        public static int constructor = -1355375294;
        public int max_id;

        static {
        }

        public TL_channels_deleteHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_deleteHistory.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_channels_deleteMessages extends TLObject {
        public InputChannel channel;
        public static int constructor = -2067661490;
        public ArrayList id;

        static {
        }

        public TL_channels_deleteMessages() {
            super();
            this.id = new ArrayList();
        }

        public static TL_channels_deleteMessages TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_channels_deleteMessages.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_channels_deleteMessages", Integer.valueOf(arg2)));
            }

            TL_channels_deleteMessages v2 = new TL_channels_deleteMessages();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedMessages.TLdeserialize(arg1, arg2, arg3);
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.channel = InputChannel.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.id.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_deleteMessages.constructor);
            this.channel.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_channels_deleteUserHistory extends TLObject {
        public InputChannel channel;
        public static int constructor = -787622117;
        public InputUser user_id;

        static {
        }

        public TL_channels_deleteUserHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedHistory.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_deleteUserHistory.constructor);
            this.channel.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_channels_editAbout extends TLObject {
        public String about;
        public InputChannel channel;
        public static int constructor = 333610782;

        static {
        }

        public TL_channels_editAbout() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_editAbout.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeString(this.about);
        }
    }

    public class TL_channels_editAdmin extends TLObject {
        public TL_channelAdminRights admin_rights;
        public InputChannel channel;
        public static int constructor = 548962836;
        public InputUser user_id;

        static {
        }

        public TL_channels_editAdmin() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_editAdmin.constructor);
            this.channel.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
            this.admin_rights.serializeToStream(arg2);
        }
    }

    public class TL_channels_editBanned extends TLObject {
        public TL_channelBannedRights banned_rights;
        public InputChannel channel;
        public static int constructor = -1076292147;
        public InputUser user_id;

        static {
        }

        public TL_channels_editBanned() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_editBanned.constructor);
            this.channel.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
            this.banned_rights.serializeToStream(arg2);
        }
    }

    public class TL_channels_editPhoto extends TLObject {
        public InputChannel channel;
        public static int constructor = -248621111;
        public InputChatPhoto photo;

        static {
        }

        public TL_channels_editPhoto() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_editPhoto.constructor);
            this.channel.serializeToStream(arg2);
            this.photo.serializeToStream(arg2);
        }
    }

    public class TL_channels_editTitle extends TLObject {
        public InputChannel channel;
        public static int constructor = 1450044624;
        public String title;

        static {
        }

        public TL_channels_editTitle() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_editTitle.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeString(this.title);
        }
    }

    public class TL_channels_exportInvite extends TLObject {
        public InputChannel channel;
        public static int constructor = -950663035;

        static {
        }

        public TL_channels_exportInvite() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return ExportedChatInvite.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_exportInvite.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_channels_exportMessageLink extends TLObject {
        public InputChannel channel;
        public static int constructor = -934882771;
        public int id;

        static {
        }

        public TL_channels_exportMessageLink() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_exportedMessageLink.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_exportMessageLink.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_channels_getAdminLog extends TLObject {
        public ArrayList admins;
        public InputChannel channel;
        public static int constructor = 870184064;
        public TL_channelAdminLogEventsFilter events_filter;
        public int flags;
        public int limit;
        public long max_id;
        public long min_id;
        public String q;

        static {
        }

        public TL_channels_getAdminLog() {
            super();
            this.admins = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_channels_adminLogResults.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_getAdminLog.constructor);
            arg4.writeInt32(this.flags);
            this.channel.serializeToStream(arg4);
            arg4.writeString(this.q);
            if((this.flags & 1) != 0) {
                this.events_filter.serializeToStream(arg4);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.admins.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.admins.get(v1).serializeToStream(arg4);
                }
            }

            arg4.writeInt64(this.max_id);
            arg4.writeInt64(this.min_id);
            arg4.writeInt32(this.limit);
        }
    }

    public class TL_channels_getAdminedPublicChannels extends TLObject {
        public static int constructor = -1920105769;

        static {
        }

        public TL_channels_getAdminedPublicChannels() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_chats.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_getAdminedPublicChannels.constructor);
        }
    }

    public class TL_channels_getChannels extends TLObject {
        public static int constructor = 176122811;
        public ArrayList id;

        static {
        }

        public TL_channels_getChannels() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_chats.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_getChannels.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.id.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_channels_getFullChannel extends TLObject {
        public InputChannel channel;
        public static int constructor = 141781513;

        static {
        }

        public TL_channels_getFullChannel() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_chatFull.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_getFullChannel.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_channels_getMessages extends TLObject {
        public InputChannel channel;
        public static int constructor = -1814580409;
        public ArrayList id;

        static {
        }

        public TL_channels_getMessages() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_getMessages.constructor);
            this.channel.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_channels_getParticipant extends TLObject {
        public InputChannel channel;
        public static int constructor = 1416484774;
        public InputUser user_id;

        static {
        }

        public TL_channels_getParticipant() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_channels_channelParticipant.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_getParticipant.constructor);
            this.channel.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_channels_getParticipants extends TLObject {
        public InputChannel channel;
        public static int constructor = 306054633;
        public ChannelParticipantsFilter filter;
        public int hash;
        public int limit;
        public int offset;

        static {
        }

        public TL_channels_getParticipants() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return channels_ChannelParticipants.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_getParticipants.constructor);
            this.channel.serializeToStream(arg2);
            this.filter.serializeToStream(arg2);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_channels_inviteToChannel extends TLObject {
        public InputChannel channel;
        public static int constructor = 429865580;
        public ArrayList users;

        static {
        }

        public TL_channels_inviteToChannel() {
            super();
            this.users = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_inviteToChannel.constructor);
            this.channel.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_channels_joinChannel extends TLObject {
        public InputChannel channel;
        public static int constructor = 615851205;

        static {
        }

        public TL_channels_joinChannel() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_joinChannel.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_channels_leaveChannel extends TLObject {
        public InputChannel channel;
        public static int constructor = -130635115;

        static {
        }

        public TL_channels_leaveChannel() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_leaveChannel.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_channels_readHistory extends TLObject {
        public InputChannel channel;
        public static int constructor = -871347913;
        public int max_id;

        static {
        }

        public TL_channels_readHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_readHistory.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_channels_readMessageContents extends TLObject {
        public InputChannel channel;
        public static int constructor = -357180360;
        public ArrayList id;

        static {
        }

        public TL_channels_readMessageContents() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_readMessageContents.constructor);
            this.channel.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_channels_reportSpam extends TLObject {
        public InputChannel channel;
        public static int constructor = -32999408;
        public ArrayList id;
        public InputUser user_id;

        static {
        }

        public TL_channels_reportSpam() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_channels_reportSpam.constructor);
            this.channel.serializeToStream(arg4);
            this.user_id.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_channels_setStickers extends TLObject {
        public InputChannel channel;
        public static int constructor = -359881479;
        public InputStickerSet stickerset;

        static {
        }

        public TL_channels_setStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_setStickers.constructor);
            this.channel.serializeToStream(arg2);
            this.stickerset.serializeToStream(arg2);
        }
    }

    public class TL_channels_toggleInvites extends TLObject {
        public InputChannel channel;
        public static int constructor = 1231065863;
        public boolean enabled;

        static {
        }

        public TL_channels_toggleInvites() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_toggleInvites.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeBool(this.enabled);
        }
    }

    public class TL_channels_togglePreHistoryHidden extends TLObject {
        public InputChannel channel;
        public static int constructor = -356796084;
        public boolean enabled;

        static {
        }

        public TL_channels_togglePreHistoryHidden() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_togglePreHistoryHidden.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeBool(this.enabled);
        }
    }

    public class TL_channels_toggleSignatures extends TLObject {
        public InputChannel channel;
        public static int constructor = 527021574;
        public boolean enabled;

        static {
        }

        public TL_channels_toggleSignatures() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_toggleSignatures.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeBool(this.enabled);
        }
    }

    public class TL_channels_updatePinnedMessage extends TLObject {
        public InputChannel channel;
        public static int constructor = -1490162350;
        public int flags;
        public int id;
        public boolean silent;

        static {
        }

        public TL_channels_updatePinnedMessage() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_updatePinnedMessage.constructor);
            int v0 = this.silent ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.channel.serializeToStream(arg2);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_channels_updateUsername extends TLObject {
        public InputChannel channel;
        public static int constructor = 890549214;
        public String username;

        static {
        }

        public TL_channels_updateUsername() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_channels_updateUsername.constructor);
            this.channel.serializeToStream(arg2);
            arg2.writeString(this.username);
        }
    }

    public class TL_chat extends Chat {
        public static int constructor = -652419756;

        static {
        }

        public TL_chat() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.kicked = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.admins_enabled = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.admin = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.deactivated = v1;
            this.id = arg4.readInt32(arg5);
            this.title = arg4.readString(arg5);
            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.participants_count = arg4.readInt32(arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
            if((this.flags & 64) != 0) {
                this.migrated_to = InputChannel.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chat.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.admins_enabled ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.admin ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.deactivated ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
            this.photo.serializeToStream(arg2);
            arg2.writeInt32(this.participants_count);
            arg2.writeInt32(this.date);
            arg2.writeInt32(this.version);
            if((this.flags & 64) != 0) {
                this.migrated_to.serializeToStream(arg2);
            }
        }
    }

    public class TL_chatChannelParticipant extends ChatParticipant {
        public ChannelParticipant channelParticipant;
        public static int constructor = -925415106;

        static {
        }

        public TL_chatChannelParticipant() {
            super();
        }
    }

    public class TL_chatEmpty extends Chat {
        public static int constructor = -1683826688;

        static {
        }

        public TL_chatEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt32(arg2);
            this.title = "DELETED";
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatEmpty.constructor);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_chatForbidden extends Chat {
        public static int constructor = 120753115;

        static {
        }

        public TL_chatForbidden() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.title = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatForbidden.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
        }
    }

    public class TL_chatForbidden_old extends TL_chatForbidden {
        public static int constructor = -83047359;

        static {
        }

        public TL_chatForbidden_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.title = arg2.readString(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatForbidden_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_chatFull extends ChatFull {
        public static int constructor = 771925524;

        static {
        }

        public TL_chatFull() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt32(arg6);
            this.participants = ChatParticipants.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.chat_photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.exported_invite = ExportedChatInvite.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                BotInfo v2 = BotInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.bot_info.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_chatFull.constructor);
            arg4.writeInt32(this.id);
            this.participants.serializeToStream(arg4);
            this.chat_photo.serializeToStream(arg4);
            this.notify_settings.serializeToStream(arg4);
            this.exported_invite.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.bot_info.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.bot_info.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_chatInvite extends ChatInvite {
        public static int constructor = -613092008;

        static {
        }

        public TL_chatInvite() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.channel = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.broadcast = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.isPublic = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.megagroup = v0;
            this.title = arg5.readString(arg6);
            this.photo = ChatPhoto.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.participants_count = arg5.readInt32(arg6);
            if((this.flags & 16) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        User v1 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.participants.add(v1);
                            ++v2;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_chatInvite.constructor);
            int v0 = this.channel ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.broadcast ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.isPublic ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.megagroup ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeString(this.title);
            this.photo.serializeToStream(arg4);
            arg4.writeInt32(this.participants_count);
            if((this.flags & 16) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.participants.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.participants.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_chatInviteAlready extends ChatInvite {
        public static int constructor = 1516793212;

        static {
        }

        public TL_chatInviteAlready() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat = Chat.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatInviteAlready.constructor);
            this.chat.serializeToStream(arg2);
        }
    }

    public class TL_chatInviteEmpty extends ExportedChatInvite {
        public static int constructor = 1776236393;

        static {
        }

        public TL_chatInviteEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatInviteEmpty.constructor);
        }
    }

    public class TL_chatInviteExported extends ExportedChatInvite {
        public static int constructor = -64092740;

        static {
        }

        public TL_chatInviteExported() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.link = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatInviteExported.constructor);
            arg2.writeString(this.link);
        }
    }

    public class TL_chatLocated extends TLObject {
        public int chat_id;
        public static int constructor = 909233996;
        public int distance;

        static {
        }

        public TL_chatLocated() {
            super();
        }

        public static TL_chatLocated TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_chatLocated.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_chatLocated", Integer.valueOf(arg2)));
            }

            TL_chatLocated v2 = new TL_chatLocated();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.distance = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatLocated.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.distance);
        }
    }

    public class TL_chatParticipant extends ChatParticipant {
        public static int constructor = -925415106;

        static {
        }

        public TL_chatParticipant() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatParticipant.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_chatParticipantAdmin extends ChatParticipant {
        public static int constructor = -489233354;

        static {
        }

        public TL_chatParticipantAdmin() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatParticipantAdmin.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_chatParticipantCreator extends ChatParticipant {
        public static int constructor = -636267638;

        static {
        }

        public TL_chatParticipantCreator() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatParticipantCreator.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_chatParticipants extends ChatParticipants {
        public static int constructor = 1061556205;

        static {
        }

        public TL_chatParticipants() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.chat_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                ChatParticipant v2 = ChatParticipant.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.participants.add(v2);
                ++v1;
            }

            this.version = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_chatParticipants.constructor);
            arg4.writeInt32(this.chat_id);
            arg4.writeInt32(481674261);
            int v0 = this.participants.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.participants.get(v1).serializeToStream(arg4);
            }

            arg4.writeInt32(this.version);
        }
    }

    public class TL_chatParticipantsForbidden extends ChatParticipants {
        public static int constructor = -57668565;

        static {
        }

        public TL_chatParticipantsForbidden() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.chat_id = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.self_participant = ChatParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatParticipantsForbidden.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.chat_id);
            if((this.flags & 1) != 0) {
                this.self_participant.serializeToStream(arg2);
            }
        }
    }

    public class TL_chatParticipantsForbidden_old extends TL_chatParticipantsForbidden {
        public static int constructor = 265468810;

        static {
        }

        public TL_chatParticipantsForbidden_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.chat_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatParticipantsForbidden_old.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_chatParticipants_old extends TL_chatParticipants {
        public static int constructor = 2017571861;

        static {
        }

        public TL_chatParticipants_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.chat_id = arg5.readInt32(arg6);
            this.admin_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                ChatParticipant v2 = ChatParticipant.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.participants.add(v2);
                ++v1;
            }

            this.version = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_chatParticipants_old.constructor);
            arg4.writeInt32(this.chat_id);
            arg4.writeInt32(this.admin_id);
            arg4.writeInt32(481674261);
            int v0 = this.participants.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.participants.get(v1).serializeToStream(arg4);
            }

            arg4.writeInt32(this.version);
        }
    }

    public class TL_chatPhoto extends ChatPhoto {
        public static int constructor = 1632839530;

        static {
        }

        public TL_chatPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.photo_small = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.photo_big = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatPhoto.constructor);
            this.photo_small.serializeToStream(arg2);
            this.photo_big.serializeToStream(arg2);
        }
    }

    public class TL_chatPhotoEmpty extends ChatPhoto {
        public static int constructor = 935395612;

        static {
        }

        public TL_chatPhotoEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chatPhotoEmpty.constructor);
        }
    }

    public class TL_chat_old2 extends TL_chat {
        public static int constructor = 1930607688;

        static {
        }

        public TL_chat_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.creator = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.kicked = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.left = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.admins_enabled = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.admin = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.deactivated = v1;
            this.id = arg4.readInt32(arg5);
            this.title = arg4.readString(arg5);
            this.photo = ChatPhoto.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.participants_count = arg4.readInt32(arg5);
            this.date = arg4.readInt32(arg5);
            this.version = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chat_old2.constructor);
            int v0 = this.creator ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.left ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.admins_enabled ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.admin ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.deactivated ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
            this.photo.serializeToStream(arg2);
            arg2.writeInt32(this.participants_count);
            arg2.writeInt32(this.date);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_chat_old extends TL_chat {
        public static int constructor = 1855757255;

        static {
        }

        public TL_chat_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.title = arg2.readString(arg3);
            this.photo = ChatPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.participants_count = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
            this.left = arg2.readBool(arg3);
            this.version = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_chat_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
            this.photo.serializeToStream(arg2);
            arg2.writeInt32(this.participants_count);
            arg2.writeInt32(this.date);
            arg2.writeBool(this.left);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_config extends TLObject {
        public String autoupdate_url_prefix;
        public boolean blocked_mode;
        public int call_connect_timeout_ms;
        public int call_packet_timeout_ms;
        public int call_receive_timeout_ms;
        public int call_ring_timeout_ms;
        public int caption_length_max;
        public int channels_read_media_period;
        public int chat_size_max;
        public static int constructor = 840162234;
        public int date;
        public ArrayList dc_options;
        public String dc_txt_domain_name;
        public boolean default_p2p_contacts;
        public int edit_time_limit;
        public int expires;
        public int flags;
        public int forwarded_count_max;
        public String gif_search_username;
        public boolean ignore_phone_entities;
        public String img_search_username;
        public int lang_pack_version;
        public String me_url_prefix;
        public int megagroup_size_max;
        public int message_length_max;
        public int notify_cloud_delay_ms;
        public int notify_default_delay_ms;
        public int offline_blur_timeout_ms;
        public int offline_idle_timeout_ms;
        public int online_cloud_timeout_ms;
        public int online_update_period_ms;
        public boolean phonecalls_enabled;
        public int pinned_dialogs_count_max;
        public boolean preload_featured_stickers;
        public int push_chat_limit;
        public int push_chat_period_ms;
        public int rating_e_decay;
        public boolean revoke_pm_inbox;
        public int revoke_pm_time_limit;
        public int revoke_time_limit;
        public int saved_gifs_limit;
        public String static_maps_provider;
        public int stickers_faved_limit;
        public int stickers_recent_limit;
        public String suggested_lang_code;
        public boolean test_mode;
        public int this_dc;
        public int tmp_sessions;
        public String venue_search_username;
        public int webfile_dc_id;

        static {
        }

        public TL_config() {
            super();
            this.dc_options = new ArrayList();
        }

        public static TL_config TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_config.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_config", Integer.valueOf(arg2)));
            }

            TL_config v2 = new TL_config();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.phonecalls_enabled = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.default_p2p_contacts = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.preload_featured_stickers = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.ignore_phone_entities = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.revoke_pm_inbox = v0;
            v0 = (this.flags & 256) != 0 ? true : false;
            this.blocked_mode = v0;
            this.date = arg6.readInt32(arg7);
            this.expires = arg6.readInt32(arg7);
            this.test_mode = arg6.readBool(arg7);
            this.this_dc = arg6.readInt32(arg7);
            int v0_1 = arg6.readInt32(arg7);
            if(v0_1 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg6.readInt32(arg7);
            while(v1 < v0_1) {
                TL_dcOption v3 = TL_dcOption.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
                if(v3 == null) {
                    return;
                }

                this.dc_options.add(v3);
                ++v1;
            }

            this.dc_txt_domain_name = arg6.readString(arg7);
            this.chat_size_max = arg6.readInt32(arg7);
            this.megagroup_size_max = arg6.readInt32(arg7);
            this.forwarded_count_max = arg6.readInt32(arg7);
            this.online_update_period_ms = arg6.readInt32(arg7);
            this.offline_blur_timeout_ms = arg6.readInt32(arg7);
            this.offline_idle_timeout_ms = arg6.readInt32(arg7);
            this.online_cloud_timeout_ms = arg6.readInt32(arg7);
            this.notify_cloud_delay_ms = arg6.readInt32(arg7);
            this.notify_default_delay_ms = arg6.readInt32(arg7);
            this.push_chat_period_ms = arg6.readInt32(arg7);
            this.push_chat_limit = arg6.readInt32(arg7);
            this.saved_gifs_limit = arg6.readInt32(arg7);
            this.edit_time_limit = arg6.readInt32(arg7);
            this.revoke_time_limit = arg6.readInt32(arg7);
            this.revoke_pm_time_limit = arg6.readInt32(arg7);
            this.rating_e_decay = arg6.readInt32(arg7);
            this.stickers_recent_limit = arg6.readInt32(arg7);
            this.stickers_faved_limit = arg6.readInt32(arg7);
            this.channels_read_media_period = arg6.readInt32(arg7);
            if((this.flags & 1) != 0) {
                this.tmp_sessions = arg6.readInt32(arg7);
            }

            this.pinned_dialogs_count_max = arg6.readInt32(arg7);
            this.call_receive_timeout_ms = arg6.readInt32(arg7);
            this.call_ring_timeout_ms = arg6.readInt32(arg7);
            this.call_connect_timeout_ms = arg6.readInt32(arg7);
            this.call_packet_timeout_ms = arg6.readInt32(arg7);
            this.me_url_prefix = arg6.readString(arg7);
            if((this.flags & 128) != 0) {
                this.autoupdate_url_prefix = arg6.readString(arg7);
            }

            if((this.flags & 512) != 0) {
                this.gif_search_username = arg6.readString(arg7);
            }

            if((this.flags & 1024) != 0) {
                this.venue_search_username = arg6.readString(arg7);
            }

            if((this.flags & 2048) != 0) {
                this.img_search_username = arg6.readString(arg7);
            }

            if((this.flags & 4096) != 0) {
                this.static_maps_provider = arg6.readString(arg7);
            }

            this.caption_length_max = arg6.readInt32(arg7);
            this.message_length_max = arg6.readInt32(arg7);
            this.webfile_dc_id = arg6.readInt32(arg7);
            if((this.flags & 4) != 0) {
                this.suggested_lang_code = arg6.readString(arg7);
            }

            if((this.flags & 4) != 0) {
                this.lang_pack_version = arg6.readInt32(arg7);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_config.constructor);
            int v0 = this.phonecalls_enabled ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.default_p2p_contacts ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.preload_featured_stickers ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.ignore_phone_entities ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.revoke_pm_inbox ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.blocked_mode ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.date);
            arg4.writeInt32(this.expires);
            arg4.writeBool(this.test_mode);
            arg4.writeInt32(this.this_dc);
            arg4.writeInt32(481674261);
            v0 = this.dc_options.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.dc_options.get(v1).serializeToStream(arg4);
            }

            arg4.writeString(this.dc_txt_domain_name);
            arg4.writeInt32(this.chat_size_max);
            arg4.writeInt32(this.megagroup_size_max);
            arg4.writeInt32(this.forwarded_count_max);
            arg4.writeInt32(this.online_update_period_ms);
            arg4.writeInt32(this.offline_blur_timeout_ms);
            arg4.writeInt32(this.offline_idle_timeout_ms);
            arg4.writeInt32(this.online_cloud_timeout_ms);
            arg4.writeInt32(this.notify_cloud_delay_ms);
            arg4.writeInt32(this.notify_default_delay_ms);
            arg4.writeInt32(this.push_chat_period_ms);
            arg4.writeInt32(this.push_chat_limit);
            arg4.writeInt32(this.saved_gifs_limit);
            arg4.writeInt32(this.edit_time_limit);
            arg4.writeInt32(this.revoke_time_limit);
            arg4.writeInt32(this.revoke_pm_time_limit);
            arg4.writeInt32(this.rating_e_decay);
            arg4.writeInt32(this.stickers_recent_limit);
            arg4.writeInt32(this.stickers_faved_limit);
            arg4.writeInt32(this.channels_read_media_period);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.tmp_sessions);
            }

            arg4.writeInt32(this.pinned_dialogs_count_max);
            arg4.writeInt32(this.call_receive_timeout_ms);
            arg4.writeInt32(this.call_ring_timeout_ms);
            arg4.writeInt32(this.call_connect_timeout_ms);
            arg4.writeInt32(this.call_packet_timeout_ms);
            arg4.writeString(this.me_url_prefix);
            if((this.flags & 128) != 0) {
                arg4.writeString(this.autoupdate_url_prefix);
            }

            if((this.flags & 512) != 0) {
                arg4.writeString(this.gif_search_username);
            }

            if((this.flags & 1024) != 0) {
                arg4.writeString(this.venue_search_username);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeString(this.img_search_username);
            }

            if((this.flags & 4096) != 0) {
                arg4.writeString(this.static_maps_provider);
            }

            arg4.writeInt32(this.caption_length_max);
            arg4.writeInt32(this.message_length_max);
            arg4.writeInt32(this.webfile_dc_id);
            if((this.flags & 4) != 0) {
                arg4.writeString(this.suggested_lang_code);
            }

            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.lang_pack_version);
            }
        }
    }

    public class TL_contact extends TLObject {
        public static int constructor = -116274796;
        public boolean mutual;
        public int user_id;

        static {
        }

        public TL_contact() {
            super();
        }

        public static TL_contact TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contact.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contact", Integer.valueOf(arg2)));
            }

            TL_contact v2 = new TL_contact();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.mutual = arg2.readBool(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contact.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeBool(this.mutual);
        }
    }

    public class TL_contactBlocked extends TLObject {
        public static int constructor = 1444661369;
        public int date;
        public int user_id;

        static {
        }

        public TL_contactBlocked() {
            super();
        }

        public static TL_contactBlocked TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contactBlocked.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contactBlocked", Integer.valueOf(arg2)));
            }

            TL_contactBlocked v2 = new TL_contactBlocked();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactBlocked.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_contactFound extends TLObject {
        public static int constructor = -360210539;
        public int user_id;

        static {
        }

        public TL_contactFound() {
            super();
        }

        public static TL_contactFound TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contactFound.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contactFound", Integer.valueOf(arg2)));
            }

            TL_contactFound v2 = new TL_contactFound();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactFound.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_contactLinkContact extends ContactLink {
        public static int constructor = -721239344;

        static {
        }

        public TL_contactLinkContact() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactLinkContact.constructor);
        }
    }

    public class TL_contactLinkHasPhone extends ContactLink {
        public static int constructor = 646922073;

        static {
        }

        public TL_contactLinkHasPhone() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactLinkHasPhone.constructor);
        }
    }

    public class TL_contactLinkNone extends ContactLink {
        public static int constructor = -17968211;

        static {
        }

        public TL_contactLinkNone() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactLinkNone.constructor);
        }
    }

    public class TL_contactLinkUnknown extends ContactLink {
        public static int constructor = 1599050311;

        static {
        }

        public TL_contactLinkUnknown() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactLinkUnknown.constructor);
        }
    }

    public class TL_contactStatus extends TLObject {
        public static int constructor = -748155807;
        public UserStatus status;
        public int user_id;

        static {
        }

        public TL_contactStatus() {
            super();
        }

        public static TL_contactStatus TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contactStatus.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contactStatus", Integer.valueOf(arg2)));
            }

            TL_contactStatus v2 = new TL_contactStatus();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.status = UserStatus.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contactStatus.constructor);
            arg2.writeInt32(this.user_id);
            this.status.serializeToStream(arg2);
        }
    }

    public class TL_contacts_block extends TLObject {
        public static int constructor = 858475004;
        public InputUser id;

        static {
        }

        public TL_contacts_block() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_block.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_contacts_blocked extends contacts_Blocked {
        public static int constructor = 471043349;

        static {
        }

        public TL_contacts_blocked() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_contactBlocked v5 = TL_contactBlocked.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocked.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_blocked.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocked.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocked.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_blockedSlice extends contacts_Blocked {
        public static int constructor = -1878523231;

        static {
        }

        public TL_contacts_blockedSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_contactBlocked v5 = TL_contactBlocked.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocked.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_blockedSlice.constructor);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocked.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocked.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_contacts extends contacts_Contacts {
        public static int constructor = -353862078;

        static {
        }

        public TL_contacts_contacts() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_contact v5 = TL_contact.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.contacts.add(v5);
            }

            this.saved_count = arg8.readInt32(arg9);
            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_contacts.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.contacts.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.contacts.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(this.saved_count);
            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_contactsNotModified extends contacts_Contacts {
        public static int constructor = -1219778094;

        static {
        }

        public TL_contacts_contactsNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_contactsNotModified.constructor);
        }
    }

    public class TL_contacts_deleteContact extends TLObject {
        public static int constructor = -1902823612;
        public InputUser id;

        static {
        }

        public TL_contacts_deleteContact() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_contacts_link.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_deleteContact.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_contacts_deleteContacts extends TLObject {
        public static int constructor = 1504393374;
        public ArrayList id;

        static {
        }

        public TL_contacts_deleteContacts() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_contacts_deleteContacts.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.id.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_contacts_exportCard extends TLObject {
        public static int constructor = -2065352905;

        static {
        }

        public TL_contacts_exportCard() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                v6.objects.add(Integer.valueOf(arg5.readInt32(arg7)));
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_exportCard.constructor);
        }
    }

    public class TL_contacts_found extends TLObject {
        public ArrayList chats;
        public static int constructor = -1290580579;
        public ArrayList my_results;
        public ArrayList results;
        public ArrayList users;

        static {
        }

        public TL_contacts_found() {
            super();
            this.my_results = new ArrayList();
            this.results = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_contacts_found TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contacts_found.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contacts_found", Integer.valueOf(arg2)));
            }

            TL_contacts_found v2 = new TL_contacts_found();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            Peer v5;
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                v5 = Peer.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.my_results.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                v5 = Peer.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.results.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_found.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.my_results.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.my_results.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.results.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.results.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_getBlocked extends TLObject {
        public static int constructor = -176409329;
        public int limit;
        public int offset;

        static {
        }

        public TL_contacts_getBlocked() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return contacts_Blocked.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_getBlocked.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_contacts_getContacts extends TLObject {
        public static int constructor = -1071414113;
        public int hash;

        static {
        }

        public TL_contacts_getContacts() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return contacts_Contacts.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_getContacts.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_contacts_getStatuses extends TLObject {
        public static int constructor = -995929106;

        static {
        }

        public TL_contacts_getStatuses() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_contactStatus v2 = TL_contactStatus.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_getStatuses.constructor);
        }
    }

    public class TL_contacts_getTopPeers extends TLObject {
        public boolean bots_inline;
        public boolean bots_pm;
        public boolean channels;
        public static int constructor = -728224331;
        public boolean correspondents;
        public int flags;
        public boolean groups;
        public int hash;
        public int limit;
        public int offset;
        public boolean phone_calls;

        static {
        }

        public TL_contacts_getTopPeers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return contacts_TopPeers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_contacts_getTopPeers.constructor);
            int v0 = this.correspondents ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.bots_pm ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.bots_inline ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.phone_calls ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.groups ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.channels ? this.flags | 32768 : this.flags & -32769;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.offset);
            arg3.writeInt32(this.limit);
            arg3.writeInt32(this.hash);
        }
    }

    public class TL_contacts_importCard extends TLObject {
        public static int constructor = 1340184318;
        public ArrayList export_card;

        static {
        }

        public TL_contacts_importCard() {
            super();
            this.export_card = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return User.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_contacts_importCard.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.export_card.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.export_card.get(v1).intValue());
            }
        }
    }

    public class TL_contacts_importContacts extends TLObject {
        public static int constructor = 746589157;
        public ArrayList contacts;

        static {
        }

        public TL_contacts_importContacts() {
            super();
            this.contacts = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_contacts_importedContacts.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_contacts_importContacts.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.contacts.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.contacts.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_contacts_importedContacts extends TLObject {
        public static int constructor = 2010127419;
        public ArrayList imported;
        public ArrayList popular_invites;
        public ArrayList retry_contacts;
        public ArrayList users;

        static {
        }

        public TL_contacts_importedContacts() {
            super();
            this.imported = new ArrayList();
            this.popular_invites = new ArrayList();
            this.retry_contacts = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_contacts_importedContacts TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contacts_importedContacts.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contacts_importedContacts", Integer.valueOf(arg2)));
            }

            TL_contacts_importedContacts v2 = new TL_contacts_importedContacts();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg9, boolean arg10) {
            int v0 = arg9.readInt32(arg10);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg10) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg9.readInt32(arg10);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_importedContact v5 = TL_importedContact.TLdeserialize(arg9, arg9.readInt32(arg10), arg10);
                if(v5 == null) {
                    return;
                }

                this.imported.add(v5);
            }

            v0 = arg9.readInt32(arg10);
            if(v0 != v1) {
                if(!arg10) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg9.readInt32(arg10);
            for(v4 = 0; v4 < v0; ++v4) {
                TL_popularContact v5_1 = TL_popularContact.TLdeserialize(arg9, arg9.readInt32(arg10), arg10);
                if(v5_1 == null) {
                    return;
                }

                this.popular_invites.add(v5_1);
            }

            v0 = arg9.readInt32(arg10);
            if(v0 != v1) {
                if(!arg10) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg9.readInt32(arg10);
            for(v4 = 0; v4 < v0; ++v4) {
                this.retry_contacts.add(Long.valueOf(arg9.readInt64(arg10)));
            }

            v0 = arg9.readInt32(arg10);
            if(v0 != v1) {
                if(!arg10) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg9.readInt32(arg10);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg9, arg9.readInt32(arg10), arg10);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg7) {
            arg7.writeInt32(TL_contacts_importedContacts.constructor);
            int v0 = 481674261;
            arg7.writeInt32(v0);
            int v1 = this.imported.size();
            arg7.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.imported.get(v3).serializeToStream(arg7);
            }

            arg7.writeInt32(v0);
            v1 = this.popular_invites.size();
            arg7.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.popular_invites.get(v3).serializeToStream(arg7);
            }

            arg7.writeInt32(v0);
            v1 = this.retry_contacts.size();
            arg7.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                arg7.writeInt64(this.retry_contacts.get(v3).longValue());
            }

            arg7.writeInt32(v0);
            v0 = this.users.size();
            arg7.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg7);
                ++v2;
            }
        }
    }

    public class TL_contacts_link extends TLObject {
        public static int constructor = 986597452;
        public ContactLink foreign_link;
        public ContactLink my_link;
        public User user;

        static {
        }

        public TL_contacts_link() {
            super();
        }

        public static TL_contacts_link TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contacts_link.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contacts_link", Integer.valueOf(arg2)));
            }

            TL_contacts_link v2 = new TL_contacts_link();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.my_link = ContactLink.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.foreign_link = ContactLink.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.user = User.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_link.constructor);
            this.my_link.serializeToStream(arg2);
            this.foreign_link.serializeToStream(arg2);
            this.user.serializeToStream(arg2);
        }
    }

    public class TL_contacts_resetSaved extends TLObject {
        public static int constructor = -2020263951;

        static {
        }

        public TL_contacts_resetSaved() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_resetSaved.constructor);
        }
    }

    public class TL_contacts_resetTopPeerRating extends TLObject {
        public TopPeerCategory category;
        public static int constructor = 451113900;
        public InputPeer peer;

        static {
        }

        public TL_contacts_resetTopPeerRating() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_resetTopPeerRating.constructor);
            this.category.serializeToStream(arg2);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_contacts_resolveUsername extends TLObject {
        public static int constructor = -113456221;
        public String username;

        static {
        }

        public TL_contacts_resolveUsername() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_contacts_resolvedPeer.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_resolveUsername.constructor);
            arg2.writeString(this.username);
        }
    }

    public class TL_contacts_resolvedPeer extends TLObject {
        public ArrayList chats;
        public static int constructor = 2131196633;
        public Peer peer;
        public ArrayList users;

        static {
        }

        public TL_contacts_resolvedPeer() {
            super();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_contacts_resolvedPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_contacts_resolvedPeer.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_contacts_resolvedPeer", Integer.valueOf(arg2)));
            }

            TL_contacts_resolvedPeer v2 = new TL_contacts_resolvedPeer();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.peer = Peer.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.chats.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_resolvedPeer.constructor);
            this.peer.serializeToStream(arg6);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.chats.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_search extends TLObject {
        public static int constructor = 301470424;
        public int limit;
        public String q;

        static {
        }

        public TL_contacts_search() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_contacts_found.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_search.constructor);
            arg2.writeString(this.q);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_contacts_toggleTopPeers extends TLObject {
        public static int constructor = -2062238246;
        public boolean enabled;

        static {
        }

        public TL_contacts_toggleTopPeers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_toggleTopPeers.constructor);
            arg2.writeBool(this.enabled);
        }
    }

    public class TL_contacts_topPeers extends contacts_TopPeers {
        public ArrayList categories;
        public ArrayList chats;
        public static int constructor = 1891070632;
        public ArrayList users;

        static {
        }

        public TL_contacts_topPeers() {
            super();
            this.categories = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_topPeerCategoryPeers v5 = TL_topPeerCategoryPeers.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.categories.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_contacts_topPeers.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.categories.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.categories.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_contacts_topPeersDisabled extends contacts_TopPeers {
        public static int constructor = -1255369827;

        static {
        }

        public TL_contacts_topPeersDisabled() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_topPeersDisabled.constructor);
        }
    }

    public class TL_contacts_topPeersNotModified extends contacts_TopPeers {
        public static int constructor = -567906571;

        static {
        }

        public TL_contacts_topPeersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_topPeersNotModified.constructor);
        }
    }

    public class TL_contacts_unblock extends TLObject {
        public static int constructor = -448724803;
        public InputUser id;

        static {
        }

        public TL_contacts_unblock() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_contacts_unblock.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_dataJSON extends TLObject {
        public static int constructor = 2104790276;
        public String data;

        static {
        }

        public TL_dataJSON() {
            super();
        }

        public static TL_dataJSON TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_dataJSON.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_dataJSON", Integer.valueOf(arg2)));
            }

            TL_dataJSON v2 = new TL_dataJSON();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.data = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_dataJSON.constructor);
            arg2.writeString(this.data);
        }
    }

    public class TL_dcOption extends TLObject {
        public boolean cdn;
        public static int constructor = 414687501;
        public int flags;
        public int id;
        public String ip_address;
        public boolean ipv6;
        public boolean isStatic;
        public boolean media_only;
        public int port;
        public byte[] secret;
        public boolean tcpo_only;

        static {
        }

        public TL_dcOption() {
            super();
        }

        public static TL_dcOption TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_dcOption.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_dcOption", Integer.valueOf(arg2)));
            }

            TL_dcOption v2 = new TL_dcOption();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.ipv6 = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.media_only = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.tcpo_only = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.cdn = v0;
            if((this.flags & 16) != 0) {
            }
            else {
                v1 = false;
            }

            this.isStatic = v1;
            this.id = arg4.readInt32(arg5);
            this.ip_address = arg4.readString(arg5);
            this.port = arg4.readInt32(arg5);
            if((this.flags & 1024) != 0) {
                this.secret = arg4.readByteArray(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_dcOption.constructor);
            int v0 = this.ipv6 ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.media_only ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.tcpo_only ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.cdn ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.isStatic ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeString(this.ip_address);
            arg2.writeInt32(this.port);
            if((this.flags & 1024) != 0) {
                arg2.writeByteArray(this.secret);
            }
        }
    }

    public class TL_decryptedMessage extends DecryptedMessage {
        public static int constructor = -1848883596;

        static {
        }

        public TL_decryptedMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.random_id = arg5.readInt64(arg6);
            this.ttl = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = DecryptedMessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v2 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v2 < v0) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_name = arg5.readString(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_random_id = arg5.readInt64(arg6);
            }

            if((this.flags & 131072) != 0) {
                this.grouped_id = arg5.readInt64(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_decryptedMessage.constructor);
            arg4.writeInt32(this.flags);
            arg4.writeInt64(this.random_id);
            arg4.writeInt32(this.ttl);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 2048) != 0) {
                arg4.writeString(this.via_bot_name);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt64(this.reply_to_random_id);
            }

            if((this.flags & 131072) != 0) {
                arg4.writeInt64(this.grouped_id);
            }
        }
    }

    public class TL_decryptedMessageActionAbortKey extends DecryptedMessageAction {
        public static int constructor = -586814357;

        static {
        }

        public TL_decryptedMessageActionAbortKey() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.exchange_id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageActionAbortKey.constructor);
            arg3.writeInt64(this.exchange_id);
        }
    }

    public class TL_decryptedMessageActionAcceptKey extends DecryptedMessageAction {
        public static int constructor = 1877046107;

        static {
        }

        public TL_decryptedMessageActionAcceptKey() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.exchange_id = arg3.readInt64(arg4);
            this.g_b = arg3.readByteArray(arg4);
            this.key_fingerprint = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageActionAcceptKey.constructor);
            arg3.writeInt64(this.exchange_id);
            arg3.writeByteArray(this.g_b);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_decryptedMessageActionCommitKey extends DecryptedMessageAction {
        public static int constructor = -332526693;

        static {
        }

        public TL_decryptedMessageActionCommitKey() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.exchange_id = arg3.readInt64(arg4);
            this.key_fingerprint = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageActionCommitKey.constructor);
            arg3.writeInt64(this.exchange_id);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_decryptedMessageActionDeleteMessages extends DecryptedMessageAction {
        public static int constructor = 1700872964;

        static {
        }

        public TL_decryptedMessageActionDeleteMessages() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            int v0 = arg6.readInt32(arg7);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg6.readInt32(arg7);
            while(v1 < v0) {
                this.random_ids.add(Long.valueOf(arg6.readInt64(arg7)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_decryptedMessageActionDeleteMessages.constructor);
            arg5.writeInt32(481674261);
            int v0 = this.random_ids.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.random_ids.get(v1).longValue());
            }
        }
    }

    public class TL_decryptedMessageActionFlushHistory extends DecryptedMessageAction {
        public static int constructor = 1729750108;

        static {
        }

        public TL_decryptedMessageActionFlushHistory() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionFlushHistory.constructor);
        }
    }

    public class TL_decryptedMessageActionNoop extends DecryptedMessageAction {
        public static int constructor = -1473258141;

        static {
        }

        public TL_decryptedMessageActionNoop() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionNoop.constructor);
        }
    }

    public class TL_decryptedMessageActionNotifyLayer extends DecryptedMessageAction {
        public static int constructor = -217806717;

        static {
        }

        public TL_decryptedMessageActionNotifyLayer() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.layer = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionNotifyLayer.constructor);
            arg2.writeInt32(this.layer);
        }
    }

    public class TL_decryptedMessageActionReadMessages extends DecryptedMessageAction {
        public static int constructor = 206520510;

        static {
        }

        public TL_decryptedMessageActionReadMessages() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            int v0 = arg6.readInt32(arg7);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg6.readInt32(arg7);
            while(v1 < v0) {
                this.random_ids.add(Long.valueOf(arg6.readInt64(arg7)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_decryptedMessageActionReadMessages.constructor);
            arg5.writeInt32(481674261);
            int v0 = this.random_ids.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.random_ids.get(v1).longValue());
            }
        }
    }

    public class TL_decryptedMessageActionRequestKey extends DecryptedMessageAction {
        public static int constructor = -204906213;

        static {
        }

        public TL_decryptedMessageActionRequestKey() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.exchange_id = arg3.readInt64(arg4);
            this.g_a = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageActionRequestKey.constructor);
            arg3.writeInt64(this.exchange_id);
            arg3.writeByteArray(this.g_a);
        }
    }

    public class TL_decryptedMessageActionResend extends DecryptedMessageAction {
        public static int constructor = 1360072880;

        static {
        }

        public TL_decryptedMessageActionResend() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.start_seq_no = arg2.readInt32(arg3);
            this.end_seq_no = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionResend.constructor);
            arg2.writeInt32(this.start_seq_no);
            arg2.writeInt32(this.end_seq_no);
        }
    }

    public class TL_decryptedMessageActionScreenshotMessages extends DecryptedMessageAction {
        public static int constructor = -1967000459;

        static {
        }

        public TL_decryptedMessageActionScreenshotMessages() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            int v0 = arg6.readInt32(arg7);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg6.readInt32(arg7);
            while(v1 < v0) {
                this.random_ids.add(Long.valueOf(arg6.readInt64(arg7)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_decryptedMessageActionScreenshotMessages.constructor);
            arg5.writeInt32(481674261);
            int v0 = this.random_ids.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.random_ids.get(v1).longValue());
            }
        }
    }

    public class TL_decryptedMessageActionSetMessageTTL extends DecryptedMessageAction {
        public static int constructor = -1586283796;

        static {
        }

        public TL_decryptedMessageActionSetMessageTTL() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.ttl_seconds = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionSetMessageTTL.constructor);
            arg2.writeInt32(this.ttl_seconds);
        }
    }

    public class TL_decryptedMessageActionTyping extends DecryptedMessageAction {
        public static int constructor = -860719551;

        static {
        }

        public TL_decryptedMessageActionTyping() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.action = SendMessageAction.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageActionTyping.constructor);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_decryptedMessageLayer extends TLObject {
        public static int constructor = 467867529;
        public int in_seq_no;
        public int layer;
        public DecryptedMessage message;
        public int out_seq_no;
        public byte[] random_bytes;

        static {
        }

        public TL_decryptedMessageLayer() {
            super();
        }

        public static TL_decryptedMessageLayer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_decryptedMessageLayer.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_decryptedMessageLayer", Integer.valueOf(arg2)));
            }

            TL_decryptedMessageLayer v2 = new TL_decryptedMessageLayer();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.random_bytes = arg2.readByteArray(arg3);
            this.layer = arg2.readInt32(arg3);
            this.in_seq_no = arg2.readInt32(arg3);
            this.out_seq_no = arg2.readInt32(arg3);
            this.message = DecryptedMessage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageLayer.constructor);
            arg2.writeByteArray(this.random_bytes);
            arg2.writeInt32(this.layer);
            arg2.writeInt32(this.in_seq_no);
            arg2.writeInt32(this.out_seq_no);
            this.message.serializeToStream(arg2);
        }
    }

    public class TL_decryptedMessageMediaAudio extends DecryptedMessageMedia {
        public static int constructor = 1474341323;

        static {
        }

        public TL_decryptedMessageMediaAudio() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.duration = arg2.readInt32(arg3);
            this.mime_type = arg2.readString(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaAudio.constructor);
            arg2.writeInt32(this.duration);
            arg2.writeString(this.mime_type);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaAudio_layer8 extends TL_decryptedMessageMediaAudio {
        public static int constructor = 1619031439;

        static {
        }

        public TL_decryptedMessageMediaAudio_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.duration = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaAudio_layer8.constructor);
            arg2.writeInt32(this.duration);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaContact extends DecryptedMessageMedia {
        public static int constructor = 1485441687;

        static {
        }

        public TL_decryptedMessageMediaContact() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.user_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaContact.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_decryptedMessageMediaDocument extends DecryptedMessageMedia {
        public static int constructor = 2063502050;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.thumb = arg5.readByteArray(arg6);
            this.thumb_w = arg5.readInt32(arg6);
            this.thumb_h = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.key = arg5.readByteArray(arg6);
            this.iv = arg5.readByteArray(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }

            this.caption = arg5.readString(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_decryptedMessageMediaDocument.constructor);
            arg4.writeByteArray(this.thumb);
            arg4.writeInt32(this.thumb_w);
            arg4.writeInt32(this.thumb_h);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(this.size);
            arg4.writeByteArray(this.key);
            arg4.writeByteArray(this.iv);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }

            arg4.writeString(this.caption);
        }
    }

    public class TL_decryptedMessageMediaDocument_layer8 extends TL_decryptedMessageMediaDocument {
        public static int constructor = -1332395189;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaDocument_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.file_name = arg2.readString(arg3);
            this.mime_type = arg2.readString(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaDocument_layer8.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeString(this.file_name);
            arg2.writeString(this.mime_type);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaEmpty extends DecryptedMessageMedia {
        public static int constructor = 144661578;

        static {
        }

        public TL_decryptedMessageMediaEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaEmpty.constructor);
        }
    }

    public class TL_decryptedMessageMediaExternalDocument extends DecryptedMessageMedia {
        public static int constructor = -90853155;
        public PhotoSize thumb;

        static {
        }

        public TL_decryptedMessageMediaExternalDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.thumb = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.dc_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_decryptedMessageMediaExternalDocument.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(this.size);
            this.thumb.serializeToStream(arg4);
            arg4.writeInt32(this.dc_id);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_decryptedMessageMediaGeoPoint extends DecryptedMessageMedia {
        public static int constructor = 893913689;

        static {
        }

        public TL_decryptedMessageMediaGeoPoint() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.lat = arg3.readDouble(arg4);
            this._long = arg3.readDouble(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageMediaGeoPoint.constructor);
            arg3.writeDouble(this.lat);
            arg3.writeDouble(this._long);
        }
    }

    public class TL_decryptedMessageMediaPhoto extends DecryptedMessageMedia {
        public static int constructor = -235238024;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
            this.caption = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaPhoto.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
            arg2.writeString(this.caption);
        }
    }

    public class TL_decryptedMessageMediaPhoto_layer8 extends TL_decryptedMessageMediaPhoto {
        public static int constructor = 846826124;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaPhoto_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaPhoto_layer8.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaVenue extends DecryptedMessageMedia {
        public static int constructor = -1978796689;

        static {
        }

        public TL_decryptedMessageMediaVenue() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.lat = arg3.readDouble(arg4);
            this._long = arg3.readDouble(arg4);
            this.title = arg3.readString(arg4);
            this.address = arg3.readString(arg4);
            this.provider = arg3.readString(arg4);
            this.venue_id = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageMediaVenue.constructor);
            arg3.writeDouble(this.lat);
            arg3.writeDouble(this._long);
            arg3.writeString(this.title);
            arg3.writeString(this.address);
            arg3.writeString(this.provider);
            arg3.writeString(this.venue_id);
        }
    }

    public class TL_decryptedMessageMediaVideo extends DecryptedMessageMedia {
        public static int constructor = -1760785394;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaVideo() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.duration = arg2.readInt32(arg3);
            this.mime_type = arg2.readString(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
            this.caption = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaVideo.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeInt32(this.duration);
            arg2.writeString(this.mime_type);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
            arg2.writeString(this.caption);
        }
    }

    public class TL_decryptedMessageMediaVideo_layer17 extends TL_decryptedMessageMediaVideo {
        public static int constructor = 1380598109;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaVideo_layer17() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.duration = arg2.readInt32(arg3);
            this.mime_type = arg2.readString(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaVideo_layer17.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeInt32(this.duration);
            arg2.writeString(this.mime_type);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaVideo_layer8 extends TL_decryptedMessageMediaVideo {
        public static int constructor = 1290694387;
        public byte[] thumb;

        static {
        }

        public TL_decryptedMessageMediaVideo_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.thumb = arg2.readByteArray(arg3);
            this.thumb_w = arg2.readInt32(arg3);
            this.thumb_h = arg2.readInt32(arg3);
            this.duration = arg2.readInt32(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
            this.key = arg2.readByteArray(arg3);
            this.iv = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaVideo_layer8.constructor);
            arg2.writeByteArray(this.thumb);
            arg2.writeInt32(this.thumb_w);
            arg2.writeInt32(this.thumb_h);
            arg2.writeInt32(this.duration);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
            arg2.writeByteArray(this.key);
            arg2.writeByteArray(this.iv);
        }
    }

    public class TL_decryptedMessageMediaWebPage extends DecryptedMessageMedia {
        public static int constructor = -452652584;

        static {
        }

        public TL_decryptedMessageMediaWebPage() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.url = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_decryptedMessageMediaWebPage.constructor);
            arg2.writeString(this.url);
        }
    }

    public class TL_decryptedMessageService extends DecryptedMessage {
        public static int constructor = 1930838368;

        static {
        }

        public TL_decryptedMessageService() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.action = DecryptedMessageAction.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageService.constructor);
            arg3.writeInt64(this.random_id);
            this.action.serializeToStream(arg3);
        }
    }

    public class TL_decryptedMessageService_layer8 extends TL_decryptedMessageService {
        public static int constructor = -1438109059;

        static {
        }

        public TL_decryptedMessageService_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.random_bytes = arg3.readByteArray(arg4);
            this.action = DecryptedMessageAction.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessageService_layer8.constructor);
            arg3.writeInt64(this.random_id);
            arg3.writeByteArray(this.random_bytes);
            this.action.serializeToStream(arg3);
        }
    }

    public class TL_decryptedMessage_layer17 extends TL_decryptedMessage {
        public static int constructor = 541931640;

        static {
        }

        public TL_decryptedMessage_layer17() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.ttl = arg3.readInt32(arg4);
            this.message = arg3.readString(arg4);
            this.media = DecryptedMessageMedia.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessage_layer17.constructor);
            arg3.writeInt64(this.random_id);
            arg3.writeInt32(this.ttl);
            arg3.writeString(this.message);
            this.media.serializeToStream(arg3);
        }
    }

    public class TL_decryptedMessage_layer45 extends TL_decryptedMessage {
        public static int constructor = 917541342;

        static {
        }

        public TL_decryptedMessage_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.random_id = arg5.readInt64(arg6);
            this.ttl = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = DecryptedMessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v2 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v2 < v0) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_name = arg5.readString(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_random_id = arg5.readInt64(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_decryptedMessage_layer45.constructor);
            arg4.writeInt32(this.flags);
            arg4.writeInt64(this.random_id);
            arg4.writeInt32(this.ttl);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 2048) != 0) {
                arg4.writeString(this.via_bot_name);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt64(this.reply_to_random_id);
            }
        }
    }

    public class TL_decryptedMessage_layer8 extends TL_decryptedMessage {
        public static int constructor = 528568095;

        static {
        }

        public TL_decryptedMessage_layer8() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.random_bytes = arg3.readByteArray(arg4);
            this.message = arg3.readString(arg4);
            this.media = DecryptedMessageMedia.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_decryptedMessage_layer8.constructor);
            arg3.writeInt64(this.random_id);
            arg3.writeByteArray(this.random_bytes);
            arg3.writeString(this.message);
            this.media.serializeToStream(arg3);
        }
    }

    public class TL_dialog extends TLObject {
        public static int constructor = -455150117;
        public DraftMessage draft;
        public int flags;
        public long id;
        public boolean isSelected;
        public int last_message_date;
        public PeerNotifySettings notify_settings;
        public Peer peer;
        public boolean pinned;
        public int pinnedNum;
        public int pts;
        public int read_inbox_max_id;
        public int read_outbox_max_id;
        public int top_message;
        public int unread_count;
        public boolean unread_mark;
        public int unread_mentions_count;

        static {
        }

        public TL_dialog() {
            super();
            this.isSelected = false;
        }

        public static TL_dialog TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_dialog.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_dialog", Integer.valueOf(arg2)));
            }

            TL_dialog v2 = new TL_dialog();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public boolean isSelected() {
            return this.isSelected;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 4) != 0 ? true : false;
            this.pinned = v0;
            if((this.flags & 8) != 0) {
                v1 = true;
            }

            this.unread_mark = v1;
            this.peer = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.top_message = arg4.readInt32(arg5);
            this.read_inbox_max_id = arg4.readInt32(arg5);
            this.read_outbox_max_id = arg4.readInt32(arg5);
            this.unread_count = arg4.readInt32(arg5);
            this.unread_mentions_count = arg4.readInt32(arg5);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 1) != 0) {
                this.pts = arg4.readInt32(arg5);
            }

            if((this.flags & 2) != 0) {
                this.draft = DraftMessage.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_dialog.constructor);
            int v0 = this.pinned ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.unread_mark ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.top_message);
            arg2.writeInt32(this.read_inbox_max_id);
            arg2.writeInt32(this.read_outbox_max_id);
            arg2.writeInt32(this.unread_count);
            arg2.writeInt32(this.unread_mentions_count);
            this.notify_settings.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.pts);
            }

            if((this.flags & 2) != 0) {
                this.draft.serializeToStream(arg2);
            }
        }

        public void setSelected(boolean arg1) {
            this.isSelected = arg1;
        }
    }

    public class TL_dialogPeer extends DialogPeer {
        public static int constructor = -445792507;
        public Peer peer;

        static {
        }

        public TL_dialogPeer() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_dialogPeer.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_dialogPeerFeed extends DialogPeer {
        public static int constructor = -633170927;
        public int feed_id;

        static {
        }

        public TL_dialogPeerFeed() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.feed_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_dialogPeerFeed.constructor);
            arg2.writeInt32(this.feed_id);
        }
    }

    public class TL_document extends Document {
        public static int constructor = -2027738169;

        static {
        }

        public TL_document() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.thumb = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.dc_id = arg5.readInt32(arg6);
            this.version = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_document.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(this.size);
            this.thumb.serializeToStream(arg4);
            arg4.writeInt32(this.dc_id);
            arg4.writeInt32(this.version);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_documentAttributeAnimated extends DocumentAttribute {
        public static int constructor = 297109817;

        static {
        }

        public TL_documentAttributeAnimated() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeAnimated.constructor);
        }
    }

    public class TL_documentAttributeAudio extends DocumentAttribute {
        public static int constructor = -1739392570;

        static {
        }

        public TL_documentAttributeAudio() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v0 = (this.flags & 1024) != 0 ? true : false;
            this.voice = v0;
            this.duration = arg3.readInt32(arg4);
            if((this.flags & 1) != 0) {
                this.title = arg3.readString(arg4);
            }

            if((this.flags & 2) != 0) {
                this.performer = arg3.readString(arg4);
            }

            if((this.flags & 4) != 0) {
                this.waveform = arg3.readByteArray(arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeAudio.constructor);
            int v0 = this.voice ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.duration);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.title);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.performer);
            }

            if((this.flags & 4) != 0) {
                arg2.writeByteArray(this.waveform);
            }
        }
    }

    public class TL_documentAttributeAudio_layer45 extends TL_documentAttributeAudio {
        public static int constructor = -556656416;

        static {
        }

        public TL_documentAttributeAudio_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.duration = arg2.readInt32(arg3);
            this.title = arg2.readString(arg3);
            this.performer = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeAudio_layer45.constructor);
            arg2.writeInt32(this.duration);
            arg2.writeString(this.title);
            arg2.writeString(this.performer);
        }
    }

    public class TL_documentAttributeAudio_old extends TL_documentAttributeAudio {
        public static int constructor = 85215461;

        static {
        }

        public TL_documentAttributeAudio_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.duration = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeAudio_old.constructor);
            arg2.writeInt32(this.duration);
        }
    }

    public class TL_documentAttributeFilename extends DocumentAttribute {
        public static int constructor = 358154344;

        static {
        }

        public TL_documentAttributeFilename() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.file_name = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeFilename.constructor);
            arg2.writeString(this.file_name);
        }
    }

    public class TL_documentAttributeHasStickers extends DocumentAttribute {
        public static int constructor = -1744710921;

        static {
        }

        public TL_documentAttributeHasStickers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeHasStickers.constructor);
        }
    }

    public class TL_documentAttributeImageSize extends DocumentAttribute {
        public static int constructor = 1815593308;

        static {
        }

        public TL_documentAttributeImageSize() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeImageSize.constructor);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
        }
    }

    public class TL_documentAttributeSticker extends DocumentAttribute {
        public static int constructor = 1662637586;

        static {
        }

        public TL_documentAttributeSticker() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.mask = v0;
            this.alt = arg3.readString(arg4);
            this.stickerset = InputStickerSet.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            if((this.flags & 1) != 0) {
                this.mask_coords = TL_maskCoords.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeSticker.constructor);
            int v0 = this.mask ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.alt);
            this.stickerset.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                this.mask_coords.serializeToStream(arg2);
            }
        }
    }

    public class TL_documentAttributeSticker_layer55 extends TL_documentAttributeSticker {
        public static int constructor = 978674434;

        static {
        }

        public TL_documentAttributeSticker_layer55() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.alt = arg2.readString(arg3);
            this.stickerset = InputStickerSet.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeSticker_layer55.constructor);
            arg2.writeString(this.alt);
            this.stickerset.serializeToStream(arg2);
        }
    }

    public class TL_documentAttributeSticker_old2 extends TL_documentAttributeSticker {
        public static int constructor = -1723033470;

        static {
        }

        public TL_documentAttributeSticker_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.alt = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeSticker_old2.constructor);
            arg2.writeString(this.alt);
        }
    }

    public class TL_documentAttributeSticker_old extends TL_documentAttributeSticker {
        public static int constructor = -83208409;

        static {
        }

        public TL_documentAttributeSticker_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeSticker_old.constructor);
        }
    }

    public class TL_documentAttributeVideo extends DocumentAttribute {
        public static int constructor = 250621158;

        static {
        }

        public TL_documentAttributeVideo() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.round_message = v0;
            if((this.flags & 2) != 0) {
            }
            else {
                v1 = false;
            }

            this.supports_streaming = v1;
            this.duration = arg4.readInt32(arg5);
            this.w = arg4.readInt32(arg5);
            this.h = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeVideo.constructor);
            int v0 = this.round_message ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.supports_streaming ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.duration);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
        }
    }

    public class TL_documentAttributeVideo_layer65 extends TL_documentAttributeVideo {
        public static int constructor = 1494273227;

        static {
        }

        public TL_documentAttributeVideo_layer65() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.duration = arg2.readInt32(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_documentAttributeVideo_layer65.constructor);
            arg2.writeInt32(this.duration);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
        }
    }

    public class TL_documentEmpty extends Document {
        public static int constructor = 922273905;

        static {
        }

        public TL_documentEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_documentEmpty.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_documentEncrypted extends Document {
        public static int constructor = 1431655768;

        static {
        }

        public TL_documentEncrypted() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.thumb = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.dc_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }

            this.key = arg5.readByteArray(arg6);
            this.iv = arg5.readByteArray(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_documentEncrypted.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(this.size);
            this.thumb.serializeToStream(arg4);
            arg4.writeInt32(this.dc_id);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }

            arg4.writeByteArray(this.key);
            arg4.writeByteArray(this.iv);
        }
    }

    public class TL_documentEncrypted_old extends TL_document {
        public static int constructor = 1431655766;

        static {
        }

        public TL_documentEncrypted_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.file_name = arg3.readString(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.key = arg3.readByteArray(arg4);
            this.iv = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_documentEncrypted_old.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeString(this.file_name);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeByteArray(this.key);
            arg3.writeByteArray(this.iv);
        }
    }

    public class TL_document_layer53 extends TL_document {
        public static int constructor = -106717361;

        static {
        }

        public TL_document_layer53() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.thumb = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.dc_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_document_layer53.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(this.size);
            this.thumb.serializeToStream(arg4);
            arg4.writeInt32(this.dc_id);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_document_old extends TL_document {
        public static int constructor = -1627626714;

        static {
        }

        public TL_document_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.file_name = arg3.readString(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_document_old.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeString(this.file_name);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
        }
    }

    public class TL_draftMessage extends DraftMessage {
        public static int constructor = -40996577;

        static {
        }

        public TL_draftMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.no_webpage = v0;
            if((this.flags & 1) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.message = arg5.readString(arg6);
            if((this.flags & 8) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            this.date = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_draftMessage.constructor);
            int v0 = this.no_webpage ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeString(this.message);
            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            arg4.writeInt32(this.date);
        }
    }

    public class TL_draftMessageEmpty extends DraftMessage {
        public static int constructor = 453805082;

        static {
        }

        public TL_draftMessageEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.date = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_draftMessageEmpty.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.date);
            }
        }
    }

    public class TL_draftMessageEmpty_layer81 extends TL_draftMessageEmpty {
        public static int constructor = -1169445179;

        static {
        }

        public TL_draftMessageEmpty_layer81() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_draftMessageEmpty_layer81.constructor);
        }
    }

    public class TL_encryptedChat extends EncryptedChat {
        public static int constructor = -94974410;

        static {
        }

        public TL_encryptedChat() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_a_or_b = arg3.readByteArray(arg4);
            this.key_fingerprint = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedChat.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_a_or_b);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_encryptedChatDiscarded extends EncryptedChat {
        public static int constructor = 332848423;

        static {
        }

        public TL_encryptedChatDiscarded() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_encryptedChatDiscarded.constructor);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_encryptedChatEmpty extends EncryptedChat {
        public static int constructor = -1417756512;

        static {
        }

        public TL_encryptedChatEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_encryptedChatEmpty.constructor);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_encryptedChatRequested extends EncryptedChat {
        public static int constructor = -931638658;

        static {
        }

        public TL_encryptedChatRequested() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_a = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedChatRequested.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_a);
        }
    }

    public class TL_encryptedChatRequested_old extends TL_encryptedChatRequested {
        public static int constructor = -39213129;

        static {
        }

        public TL_encryptedChatRequested_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_a = arg3.readByteArray(arg4);
            this.nonce = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedChatRequested_old.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_a);
            arg3.writeByteArray(this.nonce);
        }
    }

    public class TL_encryptedChatWaiting extends EncryptedChat {
        public static int constructor = 1006044124;

        static {
        }

        public TL_encryptedChatWaiting() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedChatWaiting.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
        }
    }

    public class TL_encryptedChat_old extends TL_encryptedChat {
        public static int constructor = 1711395151;

        static {
        }

        public TL_encryptedChat_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_a_or_b = arg3.readByteArray(arg4);
            this.nonce = arg3.readByteArray(arg4);
            this.key_fingerprint = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedChat_old.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_a_or_b);
            arg3.writeByteArray(this.nonce);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_encryptedFile extends EncryptedFile {
        public static int constructor = 1248893260;

        static {
        }

        public TL_encryptedFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.key_fingerprint = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedFile.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.key_fingerprint);
        }
    }

    public class TL_encryptedFileEmpty extends EncryptedFile {
        public static int constructor = -1038136962;

        static {
        }

        public TL_encryptedFileEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_encryptedFileEmpty.constructor);
        }
    }

    public class TL_encryptedMessage extends EncryptedMessage {
        public static int constructor = -317144808;

        static {
        }

        public TL_encryptedMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.chat_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.bytes = arg3.readByteArray(arg4);
            this.file = EncryptedFile.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedMessage.constructor);
            arg3.writeInt64(this.random_id);
            arg3.writeInt32(this.chat_id);
            arg3.writeInt32(this.date);
            arg3.writeByteArray(this.bytes);
            this.file.serializeToStream(arg3);
        }
    }

    public class TL_encryptedMessageService extends EncryptedMessage {
        public static int constructor = 594758406;

        static {
        }

        public TL_encryptedMessageService() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.random_id = arg3.readInt64(arg4);
            this.chat_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.bytes = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_encryptedMessageService.constructor);
            arg3.writeInt64(this.random_id);
            arg3.writeInt32(this.chat_id);
            arg3.writeInt32(this.date);
            arg3.writeByteArray(this.bytes);
        }
    }

    public class TL_error extends TLObject {
        public int code;
        public static int constructor = -994444869;
        public String text;

        static {
        }

        public TL_error() {
            super();
        }

        public static TL_error TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_error.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_error", Integer.valueOf(arg2)));
            }

            TL_error v2 = new TL_error();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.code = arg2.readInt32(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_error.constructor);
            arg2.writeInt32(this.code);
            arg2.writeString(this.text);
        }
    }

    public class TL_exportedMessageLink extends TLObject {
        public static int constructor = 1571494644;
        public String html;
        public String link;

        static {
        }

        public TL_exportedMessageLink() {
            super();
        }

        public static TL_exportedMessageLink TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_exportedMessageLink.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_exportedMessageLink", Integer.valueOf(arg2)));
            }

            TL_exportedMessageLink v2 = new TL_exportedMessageLink();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.link = arg2.readString(arg3);
            this.html = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_exportedMessageLink.constructor);
            arg2.writeString(this.link);
            arg2.writeString(this.html);
        }
    }

    public class TL_fileEncryptedLocation extends FileLocation {
        public static int constructor = 1431655764;

        static {
        }

        public TL_fileEncryptedLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.dc_id = arg3.readInt32(arg4);
            this.volume_id = arg3.readInt64(arg4);
            this.local_id = arg3.readInt32(arg4);
            this.secret = arg3.readInt64(arg4);
            this.key = arg3.readByteArray(arg4);
            this.iv = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_fileEncryptedLocation.constructor);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt64(this.volume_id);
            arg3.writeInt32(this.local_id);
            arg3.writeInt64(this.secret);
            arg3.writeByteArray(this.key);
            arg3.writeByteArray(this.iv);
        }
    }

    public class TL_fileHash extends TLObject {
        public static int constructor = 1648543603;
        public byte[] hash;
        public int limit;
        public int offset;

        static {
        }

        public TL_fileHash() {
            super();
        }

        public static TL_fileHash TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_fileHash.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_fileHash", Integer.valueOf(arg2)));
            }

            TL_fileHash v2 = new TL_fileHash();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.limit = arg2.readInt32(arg3);
            this.hash = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_fileHash.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
            arg2.writeByteArray(this.hash);
        }
    }

    public class TL_fileLocation extends FileLocation {
        public static int constructor = 1406570614;

        static {
        }

        public TL_fileLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.dc_id = arg3.readInt32(arg4);
            this.volume_id = arg3.readInt64(arg4);
            this.local_id = arg3.readInt32(arg4);
            this.secret = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_fileLocation.constructor);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt64(this.volume_id);
            arg3.writeInt32(this.local_id);
            arg3.writeInt64(this.secret);
        }
    }

    public class TL_fileLocationUnavailable extends FileLocation {
        public static int constructor = 2086234950;

        static {
        }

        public TL_fileLocationUnavailable() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.volume_id = arg3.readInt64(arg4);
            this.local_id = arg3.readInt32(arg4);
            this.secret = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_fileLocationUnavailable.constructor);
            arg3.writeInt64(this.volume_id);
            arg3.writeInt32(this.local_id);
            arg3.writeInt64(this.secret);
        }
    }

    public class TL_foundGif extends FoundGif {
        public static int constructor = 372165663;

        static {
        }

        public TL_foundGif() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.thumb_url = arg2.readString(arg3);
            this.content_url = arg2.readString(arg3);
            this.content_type = arg2.readString(arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_foundGif.constructor);
            arg2.writeString(this.url);
            arg2.writeString(this.thumb_url);
            arg2.writeString(this.content_url);
            arg2.writeString(this.content_type);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
        }
    }

    public class TL_foundGifCached extends FoundGif {
        public static int constructor = -1670052855;

        static {
        }

        public TL_foundGifCached() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.photo = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.document = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_foundGifCached.constructor);
            arg2.writeString(this.url);
            this.photo.serializeToStream(arg2);
            this.document.serializeToStream(arg2);
        }
    }

    public class TL_game extends TLObject {
        public long access_hash;
        public static int constructor = -1107729093;
        public String description;
        public Document document;
        public int flags;
        public long id;
        public Photo photo;
        public String short_name;
        public String title;

        static {
        }

        public TL_game() {
            super();
        }

        public static TL_game TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_game.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_game", Integer.valueOf(arg2)));
            }

            TL_game v2 = new TL_game();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.short_name = arg3.readString(arg4);
            this.title = arg3.readString(arg4);
            this.description = arg3.readString(arg4);
            this.photo = Photo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            if((this.flags & 1) != 0) {
                this.document = Document.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_game.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.short_name);
            arg3.writeString(this.title);
            arg3.writeString(this.description);
            this.photo.serializeToStream(arg3);
            if((this.flags & 1) != 0) {
                this.document.serializeToStream(arg3);
            }
        }
    }

    public class TL_geoPoint extends GeoPoint {
        public static int constructor = 43446532;

        static {
        }

        public TL_geoPoint() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this._long = arg3.readDouble(arg4);
            this.lat = arg3.readDouble(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_geoPoint.constructor);
            arg3.writeDouble(this._long);
            arg3.writeDouble(this.lat);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_geoPointEmpty extends GeoPoint {
        public static int constructor = 286776671;

        static {
        }

        public TL_geoPointEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_geoPointEmpty.constructor);
        }
    }

    public class TL_geoPoint_layer81 extends TL_geoPoint {
        public static int constructor = 541710092;

        static {
        }

        public TL_geoPoint_layer81() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this._long = arg3.readDouble(arg4);
            this.lat = arg3.readDouble(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_geoPoint_layer81.constructor);
            arg3.writeDouble(this._long);
            arg3.writeDouble(this.lat);
        }
    }

    public class TL_groupCall extends GroupCall {
        public static int constructor = 177149476;

        static {
        }

        public TL_groupCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            if((this.flags & 1) != 0) {
                this.channel_id = arg3.readInt32(arg4);
            }

            this.admin_id = arg3.readInt32(arg4);
            if((this.flags & 2) != 0) {
                this.encryption_key = arg3.readByteArray(arg4);
            }

            this.key_fingerprint = arg3.readInt64(arg4);
            this.protocol = TL_phoneCallProtocol.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.connection = TL_groupCallConnection.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.reflector_group_tag = arg3.readByteArray(arg4);
            this.reflector_self_tag = arg3.readByteArray(arg4);
            this.reflector_self_secret = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_groupCall.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            if((this.flags & 1) != 0) {
                arg3.writeInt32(this.channel_id);
            }

            arg3.writeInt32(this.admin_id);
            if((this.flags & 2) != 0) {
                arg3.writeByteArray(this.encryption_key);
            }

            arg3.writeInt64(this.key_fingerprint);
            this.protocol.serializeToStream(arg3);
            this.connection.serializeToStream(arg3);
            arg3.writeByteArray(this.reflector_group_tag);
            arg3.writeByteArray(this.reflector_self_tag);
            arg3.writeByteArray(this.reflector_self_secret);
        }
    }

    public class TL_groupCallConnection extends TLObject {
        public static int constructor = 1081287011;
        public long id;
        public String ip;
        public String ipv6;
        public int port;

        static {
        }

        public TL_groupCallConnection() {
            super();
        }

        public static TL_groupCallConnection TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_groupCallConnection.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_groupCallConnection", Integer.valueOf(arg2)));
            }

            TL_groupCallConnection v2 = new TL_groupCallConnection();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.ip = arg3.readString(arg4);
            this.ipv6 = arg3.readString(arg4);
            this.port = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_groupCallConnection.constructor);
            arg3.writeInt64(this.id);
            arg3.writeString(this.ip);
            arg3.writeString(this.ipv6);
            arg3.writeInt32(this.port);
        }
    }

    public class TL_groupCallDiscarded extends GroupCall {
        public static int constructor = 2004925620;

        static {
        }

        public TL_groupCallDiscarded() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.duration = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_groupCallDiscarded.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.duration);
        }
    }

    public class TL_groupCallParticipant extends GroupCallParticipant {
        public static int constructor = 1486730135;

        static {
        }

        public TL_groupCallParticipant() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.readonly = v1;
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.member_tag_hash = arg3.readByteArray(arg4);
            this.streams = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_groupCallParticipant.constructor);
            int v0 = this.readonly ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.date);
            arg2.writeByteArray(this.member_tag_hash);
            arg2.writeByteArray(this.streams);
        }
    }

    public class TL_groupCallParticipantAdmin extends GroupCallParticipant {
        public static int constructor = 1326135736;

        static {
        }

        public TL_groupCallParticipantAdmin() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.member_tag_hash = arg2.readByteArray(arg3);
            this.streams = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_groupCallParticipantAdmin.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeByteArray(this.member_tag_hash);
            arg2.writeByteArray(this.streams);
        }
    }

    public class TL_groupCallParticipantInvited extends GroupCallParticipant {
        public static int constructor = 930387696;

        static {
        }

        public TL_groupCallParticipantInvited() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.phone_call = TL_inputPhoneCall.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_groupCallParticipantInvited.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
            if((this.flags & 1) != 0) {
                this.phone_call.serializeToStream(arg2);
            }
        }
    }

    public class TL_groupCallParticipantLeft extends GroupCallParticipant {
        public static int constructor = 1100680690;

        static {
        }

        public TL_groupCallParticipantLeft() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_groupCallParticipantLeft.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_groupCallPrivate extends GroupCall {
        public static int constructor = 1829443076;

        static {
        }

        public TL_groupCallPrivate() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            if((this.flags & 1) != 0) {
                this.channel_id = arg3.readInt32(arg4);
            }

            this.participants_count = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_groupCallPrivate.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            if((this.flags & 1) != 0) {
                arg3.writeInt32(this.channel_id);
            }

            arg3.writeInt32(this.participants_count);
            arg3.writeInt32(this.admin_id);
        }
    }

    public class TL_help_acceptTermsOfService extends TLObject {
        public static int constructor = -294455398;
        public TL_dataJSON id;

        static {
        }

        public TL_help_acceptTermsOfService() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_acceptTermsOfService.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_help_appUpdate extends help_AppUpdate {
        public static int constructor = 497489295;
        public Document document;
        public ArrayList entities;
        public int flags;
        public int id;
        public boolean popup;
        public String text;
        public String url;
        public String version;

        static {
        }

        public TL_help_appUpdate() {
            super();
            this.entities = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.popup = v0;
            this.id = arg5.readInt32(arg6);
            this.version = arg5.readString(arg6);
            this.text = arg5.readString(arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.entities.add(v1);
                ++v2;
            }

            if((this.flags & 2) != 0) {
                this.document = Document.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 4) != 0) {
                this.url = arg5.readString(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_help_appUpdate.constructor);
            int v0 = this.popup ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeString(this.version);
            arg4.writeString(this.text);
            arg4.writeInt32(481674261);
            v0 = this.entities.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.entities.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 2) != 0) {
                this.document.serializeToStream(arg4);
            }

            if((this.flags & 4) != 0) {
                arg4.writeString(this.url);
            }
        }
    }

    public class TL_help_deepLinkInfo extends help_DeepLinkInfo {
        public static int constructor = 1783556146;
        public ArrayList entities;
        public int flags;
        public String message;
        public boolean update_app;

        static {
        }

        public TL_help_deepLinkInfo() {
            super();
            this.entities = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.update_app = v0;
            this.message = arg5.readString(arg6);
            if((this.flags & 2) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_help_deepLinkInfo.constructor);
            int v0 = this.update_app ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeString(this.message);
            if((this.flags & 2) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_help_deepLinkInfoEmpty extends help_DeepLinkInfo {
        public static int constructor = 1722786150;

        static {
        }

        public TL_help_deepLinkInfoEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_deepLinkInfoEmpty.constructor);
        }
    }

    public class TL_help_getAppChangelog extends TLObject {
        public static int constructor = -1877938321;
        public String prev_app_version;

        static {
        }

        public TL_help_getAppChangelog() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getAppChangelog.constructor);
            arg2.writeString(this.prev_app_version);
        }
    }

    public class TL_help_getAppUpdate extends TLObject {
        public static int constructor = 1378703997;
        public String source;

        static {
        }

        public TL_help_getAppUpdate() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return help_AppUpdate.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getAppUpdate.constructor);
            arg2.writeString(this.source);
        }
    }

    public class TL_help_getConfig extends TLObject {
        public static int constructor = -990308245;

        static {
        }

        public TL_help_getConfig() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_config.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getConfig.constructor);
        }
    }

    public class TL_help_getDeepLinkInfo extends TLObject {
        public static int constructor = 1072547679;
        public String path;

        static {
        }

        public TL_help_getDeepLinkInfo() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return help_DeepLinkInfo.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getDeepLinkInfo.constructor);
            arg2.writeString(this.path);
        }
    }

    public class TL_help_getInviteText extends TLObject {
        public static int constructor = 1295590211;

        static {
        }

        public TL_help_getInviteText() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_help_inviteText.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getInviteText.constructor);
        }
    }

    public class TL_help_getNearestDc extends TLObject {
        public static int constructor = 531836966;

        static {
        }

        public TL_help_getNearestDc() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_nearestDc.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getNearestDc.constructor);
        }
    }

    public class TL_help_getPassportConfig extends TLObject {
        public static int constructor = -966677240;
        public int hash;

        static {
        }

        public TL_help_getPassportConfig() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return help_PassportConfig.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getPassportConfig.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_help_getProxyData extends TLObject {
        public static int constructor = 1031231713;

        static {
        }

        public TL_help_getProxyData() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return help_ProxyData.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getProxyData.constructor);
        }
    }

    public class TL_help_getRecentMeUrls extends TLObject {
        public static int constructor = 1036054804;
        public String referer;

        static {
        }

        public TL_help_getRecentMeUrls() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_help_recentMeUrls.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getRecentMeUrls.constructor);
            arg2.writeString(this.referer);
        }
    }

    public class TL_help_getSupport extends TLObject {
        public static int constructor = -1663104819;

        static {
        }

        public TL_help_getSupport() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_help_support.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getSupport.constructor);
        }
    }

    public class TL_help_getTermsOfServiceUpdate extends TLObject {
        public static int constructor = 749019089;

        static {
        }

        public TL_help_getTermsOfServiceUpdate() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return help_TermsOfServiceUpdate.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_getTermsOfServiceUpdate.constructor);
        }
    }

    public class TL_help_inviteText extends TLObject {
        public static int constructor = 415997816;
        public String message;

        static {
        }

        public TL_help_inviteText() {
            super();
        }

        public static TL_help_inviteText TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_help_inviteText.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_help_inviteText", Integer.valueOf(arg2)));
            }

            TL_help_inviteText v2 = new TL_help_inviteText();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.message = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_inviteText.constructor);
            arg2.writeString(this.message);
        }
    }

    public class TL_help_noAppUpdate extends help_AppUpdate {
        public static int constructor = -1000708810;

        static {
        }

        public TL_help_noAppUpdate() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_noAppUpdate.constructor);
        }
    }

    public class TL_help_passportConfig extends help_PassportConfig {
        public static int constructor = -1600596305;
        public TL_dataJSON countries_langs;
        public int hash;

        static {
        }

        public TL_help_passportConfig() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.hash = arg2.readInt32(arg3);
            this.countries_langs = TL_dataJSON.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_passportConfig.constructor);
            arg2.writeInt32(this.hash);
            this.countries_langs.serializeToStream(arg2);
        }
    }

    public class TL_help_passportConfigNotModified extends help_PassportConfig {
        public static int constructor = -1078332329;

        static {
        }

        public TL_help_passportConfigNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_passportConfigNotModified.constructor);
        }
    }

    public class TL_help_proxyDataEmpty extends help_ProxyData {
        public static int constructor = -526508104;
        public int expires;

        static {
        }

        public TL_help_proxyDataEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.expires = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_proxyDataEmpty.constructor);
            arg2.writeInt32(this.expires);
        }
    }

    public class TL_help_proxyDataPromo extends help_ProxyData {
        public ArrayList chats;
        public static int constructor = 737668643;
        public int expires;
        public Peer peer;
        public ArrayList users;

        static {
        }

        public TL_help_proxyDataPromo() {
            super();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.expires = arg8.readInt32(arg9);
            this.peer = Peer.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.chats.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_help_proxyDataPromo.constructor);
            arg6.writeInt32(this.expires);
            this.peer.serializeToStream(arg6);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.chats.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_help_recentMeUrls extends TLObject {
        public ArrayList chats;
        public static int constructor = 235081943;
        public ArrayList urls;
        public ArrayList users;

        static {
        }

        public TL_help_recentMeUrls() {
            super();
            this.urls = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_help_recentMeUrls TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_help_recentMeUrls.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_help_recentMeUrls", Integer.valueOf(arg2)));
            }

            TL_help_recentMeUrls v2 = new TL_help_recentMeUrls();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                RecentMeUrl v5 = RecentMeUrl.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.urls.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_help_recentMeUrls.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.urls.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.urls.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_help_saveAppLog extends TLObject {
        public static int constructor = 1862465352;
        public ArrayList events;

        static {
        }

        public TL_help_saveAppLog() {
            super();
            this.events = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_help_saveAppLog.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.events.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.events.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_help_setBotUpdatesStatus extends TLObject {
        public static int constructor = -333262899;
        public String message;
        public int pending_updates_count;

        static {
        }

        public TL_help_setBotUpdatesStatus() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_setBotUpdatesStatus.constructor);
            arg2.writeInt32(this.pending_updates_count);
            arg2.writeString(this.message);
        }
    }

    public class TL_help_support extends TLObject {
        public static int constructor = 398898678;
        public String phone_number;
        public User user;

        static {
        }

        public TL_help_support() {
            super();
        }

        public static TL_help_support TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_help_support.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_help_support", Integer.valueOf(arg2)));
            }

            TL_help_support v2 = new TL_help_support();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_number = arg2.readString(arg3);
            this.user = User.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_support.constructor);
            arg2.writeString(this.phone_number);
            this.user.serializeToStream(arg2);
        }
    }

    public class TL_help_termsOfService extends TLObject {
        public static int constructor = 2013922064;
        public ArrayList entities;
        public int flags;
        public TL_dataJSON id;
        public int min_age_confirm;
        public boolean popup;
        public String text;

        static {
        }

        public TL_help_termsOfService() {
            super();
            this.entities = new ArrayList();
        }

        public static TL_help_termsOfService TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_help_termsOfService.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_help_termsOfService", Integer.valueOf(arg2)));
            }

            TL_help_termsOfService v2 = new TL_help_termsOfService();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.popup = v0;
            this.id = TL_dataJSON.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.text = arg5.readString(arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.entities.add(v1);
                ++v2;
            }

            if((this.flags & 2) != 0) {
                this.min_age_confirm = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_help_termsOfService.constructor);
            int v0 = this.popup ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.id.serializeToStream(arg4);
            arg4.writeString(this.text);
            arg4.writeInt32(481674261);
            v0 = this.entities.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.entities.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.min_age_confirm);
            }
        }
    }

    public class TL_help_termsOfServiceUpdate extends help_TermsOfServiceUpdate {
        public static int constructor = 686618977;
        public int expires;
        public TL_help_termsOfService terms_of_service;

        static {
        }

        public TL_help_termsOfServiceUpdate() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.expires = arg2.readInt32(arg3);
            this.terms_of_service = TL_help_termsOfService.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_termsOfServiceUpdate.constructor);
            arg2.writeInt32(this.expires);
            this.terms_of_service.serializeToStream(arg2);
        }
    }

    public class TL_help_termsOfServiceUpdateEmpty extends help_TermsOfServiceUpdate {
        public static int constructor = -483352705;
        public int expires;

        static {
        }

        public TL_help_termsOfServiceUpdateEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.expires = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_help_termsOfServiceUpdateEmpty.constructor);
            arg2.writeInt32(this.expires);
        }
    }

    public class TL_highScore extends TLObject {
        public static int constructor = 1493171408;
        public int pos;
        public int score;
        public int user_id;

        static {
        }

        public TL_highScore() {
            super();
        }

        public static TL_highScore TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_highScore.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_highScore", Integer.valueOf(arg2)));
            }

            TL_highScore v2 = new TL_highScore();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.pos = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.score = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_highScore.constructor);
            arg2.writeInt32(this.pos);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.score);
        }
    }

    public class TL_importedContact extends TLObject {
        public long client_id;
        public static int constructor = -805141448;
        public int user_id;

        static {
        }

        public TL_importedContact() {
            super();
        }

        public static TL_importedContact TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_importedContact.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_importedContact", Integer.valueOf(arg2)));
            }

            TL_importedContact v2 = new TL_importedContact();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.client_id = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_importedContact.constructor);
            arg3.writeInt32(this.user_id);
            arg3.writeInt64(this.client_id);
        }
    }

    public class TL_inlineBotSwitchPM extends TLObject {
        public static int constructor = 1008755359;
        public String start_param;
        public String text;

        static {
        }

        public TL_inlineBotSwitchPM() {
            super();
        }

        public static TL_inlineBotSwitchPM TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inlineBotSwitchPM.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inlineBotSwitchPM", Integer.valueOf(arg2)));
            }

            TL_inlineBotSwitchPM v2 = new TL_inlineBotSwitchPM();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = arg2.readString(arg3);
            this.start_param = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inlineBotSwitchPM.constructor);
            arg2.writeString(this.text);
            arg2.writeString(this.start_param);
        }
    }

    public class TL_inputAppEvent extends TLObject {
        public static int constructor = 1996904104;
        public String data;
        public long peer;
        public double time;
        public String type;

        static {
        }

        public TL_inputAppEvent() {
            super();
        }

        public static TL_inputAppEvent TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputAppEvent.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputAppEvent", Integer.valueOf(arg2)));
            }

            TL_inputAppEvent v2 = new TL_inputAppEvent();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.time = arg3.readDouble(arg4);
            this.type = arg3.readString(arg4);
            this.peer = arg3.readInt64(arg4);
            this.data = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputAppEvent.constructor);
            arg3.writeDouble(this.time);
            arg3.writeString(this.type);
            arg3.writeInt64(this.peer);
            arg3.writeString(this.data);
        }
    }

    public class TL_inputBotInlineMessageID extends TLObject {
        public long access_hash;
        public static int constructor = -1995686519;
        public int dc_id;
        public long id;

        static {
        }

        public TL_inputBotInlineMessageID() {
            super();
        }

        public static TL_inputBotInlineMessageID TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputBotInlineMessageID.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputBotInlineMessageID", Integer.valueOf(arg2)));
            }

            TL_inputBotInlineMessageID v2 = new TL_inputBotInlineMessageID();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.dc_id = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputBotInlineMessageID.constructor);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputChannel extends InputChannel {
        public static int constructor = -1343524562;

        static {
        }

        public TL_inputChannel() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputChannel.constructor);
            arg3.writeInt32(this.channel_id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputChannelEmpty extends InputChannel {
        public static int constructor = -292807034;

        static {
        }

        public TL_inputChannelEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputChannelEmpty.constructor);
        }
    }

    public class TL_inputChatPhoto extends InputChatPhoto {
        public static int constructor = -1991004873;

        static {
        }

        public TL_inputChatPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = InputPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputChatPhoto.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_inputChatPhotoEmpty extends InputChatPhoto {
        public static int constructor = 480546647;

        static {
        }

        public TL_inputChatPhotoEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputChatPhotoEmpty.constructor);
        }
    }

    public class TL_inputChatUploadedPhoto extends InputChatPhoto {
        public static int constructor = -1837345356;

        static {
        }

        public TL_inputChatUploadedPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.file = InputFile.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputChatUploadedPhoto.constructor);
            this.file.serializeToStream(arg2);
        }
    }

    public class TL_inputCheckPasswordEmpty extends InputCheckPasswordSRP {
        public static int constructor = -1736378792;

        static {
        }

        public TL_inputCheckPasswordEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputCheckPasswordEmpty.constructor);
        }
    }

    public class TL_inputCheckPasswordSRP extends InputCheckPasswordSRP {
        public byte[] A;
        public byte[] M1;
        public static int constructor = -763367294;
        public long srp_id;

        static {
        }

        public TL_inputCheckPasswordSRP() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.srp_id = arg3.readInt64(arg4);
            this.A = arg3.readByteArray(arg4);
            this.M1 = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputCheckPasswordSRP.constructor);
            arg3.writeInt64(this.srp_id);
            arg3.writeByteArray(this.A);
            arg3.writeByteArray(this.M1);
        }
    }

    public class TL_inputDialogPeer extends InputDialogPeer {
        public static int constructor = -55902537;
        public InputPeer peer;

        static {
        }

        public TL_inputDialogPeer() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = InputPeer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputDialogPeer.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_inputDialogPeerFeed extends InputDialogPeer {
        public static int constructor = 741914831;
        public int feed_id;

        static {
        }

        public TL_inputDialogPeerFeed() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.feed_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputDialogPeerFeed.constructor);
            arg2.writeInt32(this.feed_id);
        }
    }

    public class TL_inputDocument extends InputDocument {
        public static int constructor = 410618194;

        static {
        }

        public TL_inputDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputDocument.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputDocumentEmpty extends InputDocument {
        public static int constructor = 1928391342;

        static {
        }

        public TL_inputDocumentEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputDocumentEmpty.constructor);
        }
    }

    public class TL_inputDocumentFileLocation extends InputFileLocation {
        public static int constructor = 1313188841;

        static {
        }

        public TL_inputDocumentFileLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputDocumentFileLocation.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputEncryptedChat extends TLObject {
        public long access_hash;
        public int chat_id;
        public static int constructor = -247351839;

        static {
        }

        public TL_inputEncryptedChat() {
            super();
        }

        public static TL_inputEncryptedChat TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputEncryptedChat.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputEncryptedChat", Integer.valueOf(arg2)));
            }

            TL_inputEncryptedChat v2 = new TL_inputEncryptedChat();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputEncryptedChat.constructor);
            arg3.writeInt32(this.chat_id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputEncryptedFile extends InputEncryptedFile {
        public static int constructor = 1511503333;

        static {
        }

        public TL_inputEncryptedFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputEncryptedFile.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputEncryptedFileBigUploaded extends InputEncryptedFile {
        public static int constructor = 767652808;

        static {
        }

        public TL_inputEncryptedFileBigUploaded() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.parts = arg3.readInt32(arg4);
            this.key_fingerprint = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputEncryptedFileBigUploaded.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.parts);
            arg3.writeInt32(this.key_fingerprint);
        }
    }

    public class TL_inputEncryptedFileEmpty extends InputEncryptedFile {
        public static int constructor = 406307684;

        static {
        }

        public TL_inputEncryptedFileEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputEncryptedFileEmpty.constructor);
        }
    }

    public class TL_inputEncryptedFileLocation extends InputFileLocation {
        public static int constructor = -182231723;

        static {
        }

        public TL_inputEncryptedFileLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputEncryptedFileLocation.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputEncryptedFileUploaded extends InputEncryptedFile {
        public static int constructor = 1690108678;

        static {
        }

        public TL_inputEncryptedFileUploaded() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.parts = arg3.readInt32(arg4);
            this.md5_checksum = arg3.readString(arg4);
            this.key_fingerprint = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputEncryptedFileUploaded.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.parts);
            arg3.writeString(this.md5_checksum);
            arg3.writeInt32(this.key_fingerprint);
        }
    }

    public class TL_inputFile extends InputFile {
        public static int constructor = -181407105;

        static {
        }

        public TL_inputFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.parts = arg3.readInt32(arg4);
            this.name = arg3.readString(arg4);
            this.md5_checksum = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputFile.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.parts);
            arg3.writeString(this.name);
            arg3.writeString(this.md5_checksum);
        }
    }

    public class TL_inputFileBig extends InputFile {
        public static int constructor = -95482955;

        static {
        }

        public TL_inputFileBig() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.parts = arg3.readInt32(arg4);
            this.name = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputFileBig.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.parts);
            arg3.writeString(this.name);
        }
    }

    public class TL_inputFileLocation extends InputFileLocation {
        public static int constructor = 342061462;

        static {
        }

        public TL_inputFileLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.volume_id = arg3.readInt64(arg4);
            this.local_id = arg3.readInt32(arg4);
            this.secret = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputFileLocation.constructor);
            arg3.writeInt64(this.volume_id);
            arg3.writeInt32(this.local_id);
            arg3.writeInt64(this.secret);
        }
    }

    public class TL_inputGameID extends InputGame {
        public static int constructor = 53231223;

        static {
        }

        public TL_inputGameID() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputGameID.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputGameShortName extends InputGame {
        public static int constructor = -1020139510;

        static {
        }

        public TL_inputGameShortName() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.bot_id = InputUser.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.short_name = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputGameShortName.constructor);
            this.bot_id.serializeToStream(arg2);
            arg2.writeString(this.short_name);
        }
    }

    public class TL_inputGeoPoint extends InputGeoPoint {
        public static int constructor = -206066487;

        static {
        }

        public TL_inputGeoPoint() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.lat = arg3.readDouble(arg4);
            this._long = arg3.readDouble(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputGeoPoint.constructor);
            arg3.writeDouble(this.lat);
            arg3.writeDouble(this._long);
        }
    }

    public class TL_inputGeoPointEmpty extends InputGeoPoint {
        public static int constructor = -457104426;

        static {
        }

        public TL_inputGeoPointEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputGeoPointEmpty.constructor);
        }
    }

    public class TL_inputGroupCall extends TLObject {
        public long access_hash;
        public static int constructor = -659913713;
        public long id;

        static {
        }

        public TL_inputGroupCall() {
            super();
        }

        public static TL_inputGroupCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputGroupCall.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputGroupCall", Integer.valueOf(arg2)));
            }

            TL_inputGroupCall v2 = new TL_inputGroupCall();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputGroupCall.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputMediaContact extends InputMedia {
        public static int constructor = -122978821;

        static {
        }

        public TL_inputMediaContact() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.vcard = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaContact.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.vcard);
        }
    }

    public class TL_inputMediaDocument extends InputMedia {
        public static int constructor = 598418386;
        public InputDocument id;

        static {
        }

        public TL_inputMediaDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.id = InputDocument.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            if((this.flags & 1) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaDocument.constructor);
            arg2.writeInt32(this.flags);
            this.id.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaDocumentExternal extends InputMedia {
        public static int constructor = -78455655;

        static {
        }

        public TL_inputMediaDocumentExternal() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.url = arg2.readString(arg3);
            if((this.flags & 1) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaDocumentExternal.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.url);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaEmpty extends InputMedia {
        public static int constructor = -1771768449;

        static {
        }

        public TL_inputMediaEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaEmpty.constructor);
        }
    }

    public class TL_inputMediaGame extends InputMedia {
        public static int constructor = -750828557;
        public InputGame id;

        static {
        }

        public TL_inputMediaGame() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = InputGame.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaGame.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_inputMediaGeoLive extends InputMedia {
        public static int constructor = 2065305999;

        static {
        }

        public TL_inputMediaGeoLive() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo_point = InputGeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.period = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaGeoLive.constructor);
            this.geo_point.serializeToStream(arg2);
            arg2.writeInt32(this.period);
        }
    }

    public class TL_inputMediaGeoPoint extends InputMedia {
        public static int constructor = -104578748;

        static {
        }

        public TL_inputMediaGeoPoint() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo_point = InputGeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaGeoPoint.constructor);
            this.geo_point.serializeToStream(arg2);
        }
    }

    public class TL_inputMediaGifExternal extends InputMedia {
        public static int constructor = 1212395773;

        static {
        }

        public TL_inputMediaGifExternal() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.q = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaGifExternal.constructor);
            arg2.writeString(this.url);
            arg2.writeString(this.q);
        }
    }

    public class TL_inputMediaPhoto extends InputMedia {
        public static int constructor = -1279654347;
        public InputPhoto id;

        static {
        }

        public TL_inputMediaPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.id = InputPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            if((this.flags & 1) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaPhoto.constructor);
            arg2.writeInt32(this.flags);
            this.id.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaPhotoExternal extends InputMedia {
        public static int constructor = -440664550;

        static {
        }

        public TL_inputMediaPhotoExternal() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.url = arg2.readString(arg3);
            if((this.flags & 1) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaPhotoExternal.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.url);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaUploadedDocument extends InputMedia {
        public static int constructor = 1530447553;

        static {
        }

        public TL_inputMediaUploadedDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            int v1 = 0;
            boolean v0 = (this.flags & 8) != 0 ? true : false;
            this.nosound_video = v0;
            this.file = InputFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            if((this.flags & 4) != 0) {
                this.thumb = InputFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            this.mime_type = arg8.readString(arg9);
            int v0_1 = arg8.readInt32(arg9);
            int v3 = 481674261;
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0_1; ++v4) {
                DocumentAttribute v5 = DocumentAttribute.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.attributes.add(v5);
            }

            if((this.flags & 1) != 0) {
                v0_1 = arg8.readInt32(arg9);
                if(v0_1 == v3) {
                    v0_1 = arg8.readInt32(arg9);
                    while(v1 < v0_1) {
                        InputDocument v2 = InputDocument.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.stickers.add(v2);
                            ++v1;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg9) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 2) != 0) {
                this.ttl_seconds = arg8.readInt32(arg9);
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_inputMediaUploadedDocument.constructor);
            int v0 = this.nosound_video ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg6.writeInt32(this.flags);
            this.file.serializeToStream(arg6);
            if((this.flags & 4) != 0) {
                this.thumb.serializeToStream(arg6);
            }

            arg6.writeString(this.mime_type);
            v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.attributes.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.attributes.get(v3).serializeToStream(arg6);
            }

            if((this.flags & 1) != 0) {
                arg6.writeInt32(v0);
                v0 = this.stickers.size();
                arg6.writeInt32(v0);
                while(v2 < v0) {
                    this.stickers.get(v2).serializeToStream(arg6);
                    ++v2;
                }
            }

            if((this.flags & 2) != 0) {
                arg6.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaUploadedPhoto extends InputMedia {
        public static int constructor = 505969924;

        static {
        }

        public TL_inputMediaUploadedPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.file = InputFile.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if((this.flags & 1) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v3 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v3 < v0) {
                        InputDocument v1 = InputDocument.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.stickers.add(v1);
                            ++v3;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 2) != 0) {
                this.ttl_seconds = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_inputMediaUploadedPhoto.constructor);
            arg4.writeInt32(this.flags);
            this.file.serializeToStream(arg4);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.stickers.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.stickers.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_inputMediaVenue extends InputMedia {
        public static int constructor = -1052959727;

        static {
        }

        public TL_inputMediaVenue() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo_point = InputGeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
            this.provider = arg2.readString(arg3);
            this.venue_id = arg2.readString(arg3);
            this.venue_type = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMediaVenue.constructor);
            this.geo_point.serializeToStream(arg2);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
            arg2.writeString(this.provider);
            arg2.writeString(this.venue_id);
            arg2.writeString(this.venue_type);
        }
    }

    public class TL_inputMessageEntityMentionName extends MessageEntity {
        public static int constructor = 546203849;
        public InputUser user_id;

        static {
        }

        public TL_inputMessageEntityMentionName() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
            this.user_id = InputUser.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessageEntityMentionName.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_inputMessagesFilterChatPhotos extends MessagesFilter {
        public static int constructor = 975236280;

        static {
        }

        public TL_inputMessagesFilterChatPhotos() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterChatPhotos.constructor);
        }
    }

    public class TL_inputMessagesFilterContacts extends MessagesFilter {
        public static int constructor = -530392189;

        static {
        }

        public TL_inputMessagesFilterContacts() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterContacts.constructor);
        }
    }

    public class TL_inputMessagesFilterDocument extends MessagesFilter {
        public static int constructor = -1629621880;

        static {
        }

        public TL_inputMessagesFilterDocument() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterDocument.constructor);
        }
    }

    public class TL_inputMessagesFilterEmpty extends MessagesFilter {
        public static int constructor = 1474492012;

        static {
        }

        public TL_inputMessagesFilterEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterEmpty.constructor);
        }
    }

    public class TL_inputMessagesFilterGeo extends MessagesFilter {
        public static int constructor = -419271411;

        static {
        }

        public TL_inputMessagesFilterGeo() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterGeo.constructor);
        }
    }

    public class TL_inputMessagesFilterGif extends MessagesFilter {
        public static int constructor = -3644025;

        static {
        }

        public TL_inputMessagesFilterGif() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterGif.constructor);
        }
    }

    public class TL_inputMessagesFilterMusic extends MessagesFilter {
        public static int constructor = 928101534;

        static {
        }

        public TL_inputMessagesFilterMusic() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterMusic.constructor);
        }
    }

    public class TL_inputMessagesFilterMyMentions extends MessagesFilter {
        public static int constructor = -1040652646;

        static {
        }

        public TL_inputMessagesFilterMyMentions() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterMyMentions.constructor);
        }
    }

    public class TL_inputMessagesFilterPhoneCalls extends MessagesFilter {
        public static int constructor = -2134272152;

        static {
        }

        public TL_inputMessagesFilterPhoneCalls() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.flags = arg1.readInt32(arg2);
            arg2 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                arg2 = false;
            }

            this.missed = arg2;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterPhoneCalls.constructor);
            int v0 = this.missed ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_inputMessagesFilterPhotoVideo extends MessagesFilter {
        public static int constructor = 1458172132;

        static {
        }

        public TL_inputMessagesFilterPhotoVideo() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterPhotoVideo.constructor);
        }
    }

    public class TL_inputMessagesFilterPhotoVideoDocuments extends MessagesFilter {
        public static int constructor = -648121413;

        static {
        }

        public TL_inputMessagesFilterPhotoVideoDocuments() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterPhotoVideoDocuments.constructor);
        }
    }

    public class TL_inputMessagesFilterPhotos extends MessagesFilter {
        public static int constructor = -1777752804;

        static {
        }

        public TL_inputMessagesFilterPhotos() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterPhotos.constructor);
        }
    }

    public class TL_inputMessagesFilterRoundVideo extends MessagesFilter {
        public static int constructor = -1253451181;

        static {
        }

        public TL_inputMessagesFilterRoundVideo() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterRoundVideo.constructor);
        }
    }

    public class TL_inputMessagesFilterRoundVoice extends MessagesFilter {
        public static int constructor = 2054952868;

        static {
        }

        public TL_inputMessagesFilterRoundVoice() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterRoundVoice.constructor);
        }
    }

    public class TL_inputMessagesFilterUrl extends MessagesFilter {
        public static int constructor = 2129714567;

        static {
        }

        public TL_inputMessagesFilterUrl() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterUrl.constructor);
        }
    }

    public class TL_inputMessagesFilterVideo extends MessagesFilter {
        public static int constructor = -1614803355;

        static {
        }

        public TL_inputMessagesFilterVideo() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterVideo.constructor);
        }
    }

    public class TL_inputMessagesFilterVoice extends MessagesFilter {
        public static int constructor = 1358283666;

        static {
        }

        public TL_inputMessagesFilterVoice() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputMessagesFilterVoice.constructor);
        }
    }

    public class TL_inputNotifyChats extends InputNotifyPeer {
        public static int constructor = 1251338318;

        static {
        }

        public TL_inputNotifyChats() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputNotifyChats.constructor);
        }
    }

    public class TL_inputNotifyPeer extends InputNotifyPeer {
        public static int constructor = -1195615476;
        public InputPeer peer;

        static {
        }

        public TL_inputNotifyPeer() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = InputPeer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputNotifyPeer.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_inputNotifyUsers extends InputNotifyPeer {
        public static int constructor = 423314455;

        static {
        }

        public TL_inputNotifyUsers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputNotifyUsers.constructor);
        }
    }

    public class TL_inputPaymentCredentials extends InputPaymentCredentials {
        public static int constructor = 873977640;

        static {
        }

        public TL_inputPaymentCredentials() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.save = v1;
            this.data = TL_dataJSON.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPaymentCredentials.constructor);
            int v0 = this.save ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.data.serializeToStream(arg2);
        }
    }

    public class TL_inputPaymentCredentialsAndroidPay extends InputPaymentCredentials {
        public static int constructor = -905587442;

        static {
        }

        public TL_inputPaymentCredentialsAndroidPay() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.payment_token = TL_dataJSON.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.google_transaction_id = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPaymentCredentialsAndroidPay.constructor);
            this.payment_token.serializeToStream(arg2);
            arg2.writeString(this.google_transaction_id);
        }
    }

    public class TL_inputPaymentCredentialsSaved extends InputPaymentCredentials {
        public static int constructor = -1056001329;

        static {
        }

        public TL_inputPaymentCredentialsSaved() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readString(arg3);
            this.tmp_password = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPaymentCredentialsSaved.constructor);
            arg2.writeString(this.id);
            arg2.writeByteArray(this.tmp_password);
        }
    }

    public class TL_inputPeerChannel extends InputPeer {
        public static int constructor = 548253432;

        static {
        }

        public TL_inputPeerChannel() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputPeerChannel.constructor);
            arg3.writeInt32(this.channel_id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputPeerChat extends InputPeer {
        public static int constructor = 396093539;

        static {
        }

        public TL_inputPeerChat() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.chat_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPeerChat.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_inputPeerEmpty extends InputPeer {
        public static int constructor = 2134579434;

        static {
        }

        public TL_inputPeerEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPeerEmpty.constructor);
        }
    }

    public class TL_inputPeerNotifySettings extends TLObject {
        public static int constructor = -1673717362;
        public int flags;
        public int mute_until;
        public boolean show_previews;
        public boolean silent;
        public String sound;

        static {
        }

        public TL_inputPeerNotifySettings() {
            super();
        }

        public static TL_inputPeerNotifySettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputPeerNotifySettings.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputPeerNotifySettings", Integer.valueOf(arg2)));
            }

            TL_inputPeerNotifySettings v2 = new TL_inputPeerNotifySettings();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.show_previews = arg2.readBool(arg3);
            }

            if((this.flags & 2) != 0) {
                this.silent = arg2.readBool(arg3);
            }

            if((this.flags & 4) != 0) {
                this.mute_until = arg2.readInt32(arg3);
            }

            if((this.flags & 8) != 0) {
                this.sound = arg2.readString(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPeerNotifySettings.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.show_previews);
            }

            if((this.flags & 2) != 0) {
                arg2.writeBool(this.silent);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.mute_until);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.sound);
            }
        }
    }

    public class TL_inputPeerSelf extends InputPeer {
        public static int constructor = 2107670217;

        static {
        }

        public TL_inputPeerSelf() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPeerSelf.constructor);
        }
    }

    public class TL_inputPeerUser extends InputPeer {
        public static int constructor = 2072935910;

        static {
        }

        public TL_inputPeerUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputPeerUser.constructor);
            arg3.writeInt32(this.user_id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputPhoneCall extends TLObject {
        public long access_hash;
        public static int constructor = 506920429;
        public long id;

        static {
        }

        public TL_inputPhoneCall() {
            super();
        }

        public static TL_inputPhoneCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputPhoneCall.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputPhoneCall", Integer.valueOf(arg2)));
            }

            TL_inputPhoneCall v2 = new TL_inputPhoneCall();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputPhoneCall.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputPhoneContact extends TLObject {
        public long client_id;
        public static int constructor = -208488460;
        public String first_name;
        public String last_name;
        public String phone;

        static {
        }

        public TL_inputPhoneContact() {
            super();
        }

        public static TL_inputPhoneContact TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputPhoneContact.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputPhoneContact", Integer.valueOf(arg2)));
            }

            TL_inputPhoneContact v2 = new TL_inputPhoneContact();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.client_id = arg3.readInt64(arg4);
            this.phone = arg3.readString(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputPhoneContact.constructor);
            arg3.writeInt64(this.client_id);
            arg3.writeString(this.phone);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
        }
    }

    public class TL_inputPhoto extends InputPhoto {
        public static int constructor = -74070332;

        static {
        }

        public TL_inputPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputPhoto.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputPhotoEmpty extends InputPhoto {
        public static int constructor = 483901197;

        static {
        }

        public TL_inputPhotoEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPhotoEmpty.constructor);
        }
    }

    public class TL_inputPrivacyKeyChatInvite extends InputPrivacyKey {
        public static int constructor = -1107622874;

        static {
        }

        public TL_inputPrivacyKeyChatInvite() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyKeyChatInvite.constructor);
        }
    }

    public class TL_inputPrivacyKeyPhoneCall extends InputPrivacyKey {
        public static int constructor = -88417185;

        static {
        }

        public TL_inputPrivacyKeyPhoneCall() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyKeyPhoneCall.constructor);
        }
    }

    public class TL_inputPrivacyKeyStatusTimestamp extends InputPrivacyKey {
        public static int constructor = 1335282456;

        static {
        }

        public TL_inputPrivacyKeyStatusTimestamp() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyKeyStatusTimestamp.constructor);
        }
    }

    public class TL_inputPrivacyValueAllowAll extends InputPrivacyRule {
        public static int constructor = 407582158;

        static {
        }

        public TL_inputPrivacyValueAllowAll() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyValueAllowAll.constructor);
        }
    }

    public class TL_inputPrivacyValueAllowContacts extends InputPrivacyRule {
        public static int constructor = 218751099;

        static {
        }

        public TL_inputPrivacyValueAllowContacts() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyValueAllowContacts.constructor);
        }
    }

    public class TL_inputPrivacyValueAllowUsers extends InputPrivacyRule {
        public static int constructor = 320652927;

        static {
        }

        public TL_inputPrivacyValueAllowUsers() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                InputUser v2 = InputUser.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_inputPrivacyValueAllowUsers.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_inputPrivacyValueDisallowAll extends InputPrivacyRule {
        public static int constructor = -697604407;

        static {
        }

        public TL_inputPrivacyValueDisallowAll() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyValueDisallowAll.constructor);
        }
    }

    public class TL_inputPrivacyValueDisallowContacts extends InputPrivacyRule {
        public static int constructor = 195371015;

        static {
        }

        public TL_inputPrivacyValueDisallowContacts() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputPrivacyValueDisallowContacts.constructor);
        }
    }

    public class TL_inputPrivacyValueDisallowUsers extends InputPrivacyRule {
        public static int constructor = -1877932953;

        static {
        }

        public TL_inputPrivacyValueDisallowUsers() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                InputUser v2 = InputUser.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_inputPrivacyValueDisallowUsers.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_inputReportReasonOther extends ReportReason {
        public static int constructor = -512463606;

        static {
        }

        public TL_inputReportReasonOther() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputReportReasonOther.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_inputReportReasonPornography extends ReportReason {
        public static int constructor = 777640226;

        static {
        }

        public TL_inputReportReasonPornography() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputReportReasonPornography.constructor);
        }
    }

    public class TL_inputReportReasonSpam extends ReportReason {
        public static int constructor = 1490799288;

        static {
        }

        public TL_inputReportReasonSpam() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputReportReasonSpam.constructor);
        }
    }

    public class TL_inputReportReasonViolence extends ReportReason {
        public static int constructor = 505595789;

        static {
        }

        public TL_inputReportReasonViolence() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputReportReasonViolence.constructor);
        }
    }

    public class TL_inputSecureFile extends InputSecureFile {
        public long access_hash;
        public static int constructor = 1399317950;
        public long id;

        static {
        }

        public TL_inputSecureFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputSecureFile.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputSecureFileUploaded extends InputSecureFile {
        public static int constructor = 859091184;
        public byte[] file_hash;
        public long id;
        public String md5_checksum;
        public int parts;
        public byte[] secret;

        static {
        }

        public TL_inputSecureFileUploaded() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.parts = arg3.readInt32(arg4);
            this.md5_checksum = arg3.readString(arg4);
            this.file_hash = arg3.readByteArray(arg4);
            this.secret = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputSecureFileUploaded.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.parts);
            arg3.writeString(this.md5_checksum);
            arg3.writeByteArray(this.file_hash);
            arg3.writeByteArray(this.secret);
        }
    }

    public class TL_inputSecureValue extends TLObject {
        public static int constructor = -618540889;
        public TL_secureData data;
        public ArrayList files;
        public int flags;
        public InputSecureFile front_side;
        public SecurePlainData plain_data;
        public InputSecureFile reverse_side;
        public InputSecureFile selfie;
        public ArrayList translation;
        public SecureValueType type;

        static {
        }

        public TL_inputSecureValue() {
            super();
            this.translation = new ArrayList();
            this.files = new ArrayList();
        }

        public static TL_inputSecureValue TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputSecureValue.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputSecureValue", Integer.valueOf(arg2)));
            }

            TL_inputSecureValue v2 = new TL_inputSecureValue();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0;
            this.flags = arg8.readInt32(arg9);
            this.type = SecureValueType.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            if((this.flags & 1) != 0) {
                this.data = TL_secureData.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 2) != 0) {
                this.front_side = InputSecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 4) != 0) {
                this.reverse_side = InputSecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 8) != 0) {
                this.selfie = InputSecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            int v2 = 481674261;
            int v3 = 0;
            if((this.flags & 64) != 0) {
                v0 = arg8.readInt32(arg9);
                if(v0 == v2) {
                    v0 = arg8.readInt32(arg9);
                    int v4 = 0;
                    while(v4 < v0) {
                        InputSecureFile v5 = InputSecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                        if(v5 == null) {
                            return;
                        }
                        else {
                            this.translation.add(v5);
                            ++v4;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg9) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 16) != 0) {
                v0 = arg8.readInt32(arg9);
                if(v0 == v2) {
                    v0 = arg8.readInt32(arg9);
                    while(v3 < v0) {
                        InputSecureFile v1 = InputSecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.files.add(v1);
                            ++v3;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg9) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 32) != 0) {
                this.plain_data = SecurePlainData.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            int v0;
            arg6.writeInt32(TL_inputSecureValue.constructor);
            arg6.writeInt32(this.flags);
            this.type.serializeToStream(arg6);
            if((this.flags & 1) != 0) {
                this.data.serializeToStream(arg6);
            }

            if((this.flags & 2) != 0) {
                this.front_side.serializeToStream(arg6);
            }

            if((this.flags & 4) != 0) {
                this.reverse_side.serializeToStream(arg6);
            }

            if((this.flags & 8) != 0) {
                this.selfie.serializeToStream(arg6);
            }

            int v1 = 0;
            int v2 = 481674261;
            if((this.flags & 64) != 0) {
                arg6.writeInt32(v2);
                v0 = this.translation.size();
                arg6.writeInt32(v0);
                int v3;
                for(v3 = 0; v3 < v0; ++v3) {
                    this.translation.get(v3).serializeToStream(arg6);
                }
            }

            if((this.flags & 16) != 0) {
                arg6.writeInt32(v2);
                v0 = this.files.size();
                arg6.writeInt32(v0);
                while(v1 < v0) {
                    this.files.get(v1).serializeToStream(arg6);
                    ++v1;
                }
            }

            if((this.flags & 32) != 0) {
                this.plain_data.serializeToStream(arg6);
            }
        }
    }

    public class TL_inputSingleMedia extends TLObject {
        public static int constructor = 482797855;
        public ArrayList entities;
        public int flags;
        public InputMedia media;
        public String message;
        public long random_id;

        static {
        }

        public TL_inputSingleMedia() {
            super();
            this.entities = new ArrayList();
        }

        public static TL_inputSingleMedia TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputSingleMedia.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputSingleMedia", Integer.valueOf(arg2)));
            }

            TL_inputSingleMedia v2 = new TL_inputSingleMedia();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.media = InputMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.random_id = arg5.readInt64(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 1) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v3 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v3 < v0) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v3;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_inputSingleMedia.constructor);
            arg4.writeInt32(this.flags);
            this.media.serializeToStream(arg4);
            arg4.writeInt64(this.random_id);
            arg4.writeString(this.message);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_inputStickerSetEmpty extends InputStickerSet {
        public static int constructor = -4838507;

        static {
        }

        public TL_inputStickerSetEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputStickerSetEmpty.constructor);
        }
    }

    public class TL_inputStickerSetID extends InputStickerSet {
        public static int constructor = -1645763991;

        static {
        }

        public TL_inputStickerSetID() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputStickerSetID.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputStickerSetShortName extends InputStickerSet {
        public static int constructor = -2044933984;

        static {
        }

        public TL_inputStickerSetShortName() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.short_name = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputStickerSetShortName.constructor);
            arg2.writeString(this.short_name);
        }
    }

    public class TL_inputStickeredMediaDocument extends InputStickeredMedia {
        public static int constructor = 70813275;
        public InputDocument id;

        static {
        }

        public TL_inputStickeredMediaDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = InputDocument.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputStickeredMediaDocument.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_inputStickeredMediaPhoto extends InputStickeredMedia {
        public static int constructor = 1251549527;
        public InputPhoto id;

        static {
        }

        public TL_inputStickeredMediaPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = InputPhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputStickeredMediaPhoto.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_inputUser extends InputUser {
        public static int constructor = -668391402;

        static {
        }

        public TL_inputUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputUser.constructor);
            arg3.writeInt32(this.user_id);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_inputUserEmpty extends InputUser {
        public static int constructor = -1182234929;

        static {
        }

        public TL_inputUserEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputUserEmpty.constructor);
        }
    }

    public class TL_inputUserSelf extends InputUser {
        public static int constructor = -138301121;

        static {
        }

        public TL_inputUserSelf() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_inputUserSelf.constructor);
        }
    }

    public class TL_inputWebDocument extends TLObject {
        public ArrayList attributes;
        public static int constructor = -1678949555;
        public String mime_type;
        public int size;
        public String url;

        static {
        }

        public TL_inputWebDocument() {
            super();
            this.attributes = new ArrayList();
        }

        public static TL_inputWebDocument TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_inputWebDocument.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_inputWebDocument", Integer.valueOf(arg2)));
            }

            TL_inputWebDocument v2 = new TL_inputWebDocument();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.url = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_inputWebDocument.constructor);
            arg4.writeString(this.url);
            arg4.writeInt32(this.size);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_inputWebFileGeoPointLocation extends InputWebFileLocation {
        public long access_hash;
        public static int constructor = -1625153079;
        public InputGeoPoint geo_point;
        public int h;
        public int scale;
        public int w;
        public int zoom;

        static {
        }

        public TL_inputWebFileGeoPointLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.geo_point = InputGeoPoint.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
            this.zoom = arg3.readInt32(arg4);
            this.scale = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputWebFileGeoPointLocation.constructor);
            this.geo_point.serializeToStream(arg3);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
            arg3.writeInt32(this.zoom);
            arg3.writeInt32(this.scale);
        }
    }

    public class TL_inputWebFileLocation extends InputWebFileLocation {
        public long access_hash;
        public static int constructor = -1036396922;
        public String url;

        static {
        }

        public TL_inputWebFileLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.access_hash = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_inputWebFileLocation.constructor);
            arg3.writeString(this.url);
            arg3.writeInt64(this.access_hash);
        }
    }

    public class TL_invoice extends TLObject {
        public static int constructor = -1022713000;
        public String currency;
        public boolean email_requested;
        public boolean email_to_provider;
        public int flags;
        public boolean flexible;
        public boolean name_requested;
        public boolean phone_requested;
        public boolean phone_to_provider;
        public ArrayList prices;
        public boolean shipping_address_requested;
        public boolean test;

        static {
        }

        public TL_invoice() {
            super();
            this.prices = new ArrayList();
        }

        public static TL_invoice TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_invoice.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_invoice", Integer.valueOf(arg2)));
            }

            TL_invoice v2 = new TL_invoice();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.test = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.name_requested = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.phone_requested = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.email_requested = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.shipping_address_requested = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.flexible = v0;
            v0 = (this.flags & 64) != 0 ? true : false;
            this.phone_to_provider = v0;
            v0 = (this.flags & 128) != 0 ? true : false;
            this.email_to_provider = v0;
            this.currency = arg5.readString(arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                TL_labeledPrice v1 = TL_labeledPrice.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.prices.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_invoice.constructor);
            int v0 = this.test ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.name_requested ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.phone_requested ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.email_requested ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.shipping_address_requested ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.flexible ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.phone_to_provider ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.email_to_provider ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeString(this.currency);
            arg4.writeInt32(481674261);
            v0 = this.prices.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.prices.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_keyboardButton extends KeyboardButton {
        public static int constructor = -1560655744;

        static {
        }

        public TL_keyboardButton() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButton.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_keyboardButtonBuy extends KeyboardButton {
        public static int constructor = -1344716869;

        static {
        }

        public TL_keyboardButtonBuy() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonBuy.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_keyboardButtonCallback extends KeyboardButton {
        public static int constructor = 1748655686;

        static {
        }

        public TL_keyboardButtonCallback() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = arg2.readString(arg3);
            this.data = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonCallback.constructor);
            arg2.writeString(this.text);
            arg2.writeByteArray(this.data);
        }
    }

    public class TL_keyboardButtonGame extends KeyboardButton {
        public static int constructor = 1358175439;

        static {
        }

        public TL_keyboardButtonGame() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonGame.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_keyboardButtonRequestGeoLocation extends KeyboardButton {
        public static int constructor = -59151553;

        static {
        }

        public TL_keyboardButtonRequestGeoLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonRequestGeoLocation.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_keyboardButtonRequestPhone extends KeyboardButton {
        public static int constructor = -1318425559;

        static {
        }

        public TL_keyboardButtonRequestPhone() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonRequestPhone.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_keyboardButtonRow extends TLObject {
        public ArrayList buttons;
        public static int constructor = 2002815875;

        static {
        }

        public TL_keyboardButtonRow() {
            super();
            this.buttons = new ArrayList();
        }

        public static TL_keyboardButtonRow TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_keyboardButtonRow.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_keyboardButtonRow", Integer.valueOf(arg2)));
            }

            TL_keyboardButtonRow v2 = new TL_keyboardButtonRow();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                KeyboardButton v2 = KeyboardButton.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.buttons.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_keyboardButtonRow.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.buttons.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.buttons.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_keyboardButtonSwitchInline extends KeyboardButton {
        public static int constructor = 90744648;

        static {
        }

        public TL_keyboardButtonSwitchInline() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.same_peer = v1;
            this.text = arg3.readString(arg4);
            this.query = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonSwitchInline.constructor);
            int v0 = this.same_peer ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.text);
            arg2.writeString(this.query);
        }
    }

    public class TL_keyboardButtonUrl extends KeyboardButton {
        public static int constructor = 629866245;

        static {
        }

        public TL_keyboardButtonUrl() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = arg2.readString(arg3);
            this.url = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_keyboardButtonUrl.constructor);
            arg2.writeString(this.text);
            arg2.writeString(this.url);
        }
    }

    public class TL_labeledPrice extends TLObject {
        public long amount;
        public static int constructor = -886477832;
        public String label;

        static {
        }

        public TL_labeledPrice() {
            super();
        }

        public static TL_labeledPrice TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_labeledPrice.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_labeledPrice", Integer.valueOf(arg2)));
            }

            TL_labeledPrice v2 = new TL_labeledPrice();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.label = arg2.readString(arg3);
            this.amount = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_labeledPrice.constructor);
            arg3.writeString(this.label);
            arg3.writeInt64(this.amount);
        }
    }

    public class TL_langPackDifference extends TLObject {
        public static int constructor = -209337866;
        public int from_version;
        public String lang_code;
        public ArrayList strings;
        public int version;

        static {
        }

        public TL_langPackDifference() {
            super();
            this.strings = new ArrayList();
        }

        public static TL_langPackDifference TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_langPackDifference.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_langPackDifference", Integer.valueOf(arg2)));
            }

            TL_langPackDifference v2 = new TL_langPackDifference();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.lang_code = arg5.readString(arg6);
            this.from_version = arg5.readInt32(arg6);
            this.version = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                LangPackString v2 = LangPackString.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.strings.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_langPackDifference.constructor);
            arg4.writeString(this.lang_code);
            arg4.writeInt32(this.from_version);
            arg4.writeInt32(this.version);
            arg4.writeInt32(481674261);
            int v0 = this.strings.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.strings.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_langPackLanguage extends TLObject {
        public static int constructor = 292985073;
        public String lang_code;
        public String name;
        public String native_name;

        static {
        }

        public TL_langPackLanguage() {
            super();
        }

        public static TL_langPackLanguage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_langPackLanguage.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_langPackLanguage", Integer.valueOf(arg2)));
            }

            TL_langPackLanguage v2 = new TL_langPackLanguage();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.name = arg2.readString(arg3);
            this.native_name = arg2.readString(arg3);
            this.lang_code = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langPackLanguage.constructor);
            arg2.writeString(this.name);
            arg2.writeString(this.native_name);
            arg2.writeString(this.lang_code);
        }
    }

    public class TL_langPackString extends LangPackString {
        public static int constructor = -892239370;

        static {
        }

        public TL_langPackString() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.key = arg2.readString(arg3);
            this.value = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langPackString.constructor);
            arg2.writeString(this.key);
            arg2.writeString(this.value);
        }
    }

    public class TL_langPackStringDeleted extends LangPackString {
        public static int constructor = 695856818;

        static {
        }

        public TL_langPackStringDeleted() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.key = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langPackStringDeleted.constructor);
            arg2.writeString(this.key);
        }
    }

    public class TL_langPackStringPluralized extends LangPackString {
        public static int constructor = 1816636575;

        static {
        }

        public TL_langPackStringPluralized() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.key = arg2.readString(arg3);
            if((this.flags & 1) != 0) {
                this.zero_value = arg2.readString(arg3);
            }

            if((this.flags & 2) != 0) {
                this.one_value = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.two_value = arg2.readString(arg3);
            }

            if((this.flags & 8) != 0) {
                this.few_value = arg2.readString(arg3);
            }

            if((this.flags & 16) != 0) {
                this.many_value = arg2.readString(arg3);
            }

            this.other_value = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langPackStringPluralized.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeString(this.key);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.zero_value);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.one_value);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.two_value);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.few_value);
            }

            if((this.flags & 16) != 0) {
                arg2.writeString(this.many_value);
            }

            arg2.writeString(this.other_value);
        }
    }

    public class TL_langpack_getDifference extends TLObject {
        public static int constructor = 187583869;
        public int from_version;

        static {
        }

        public TL_langpack_getDifference() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_langPackDifference.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langpack_getDifference.constructor);
            arg2.writeInt32(this.from_version);
        }
    }

    public class TL_langpack_getLangPack extends TLObject {
        public static int constructor = -1699363442;
        public String lang_code;

        static {
        }

        public TL_langpack_getLangPack() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_langPackDifference.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langpack_getLangPack.constructor);
            arg2.writeString(this.lang_code);
        }
    }

    public class TL_langpack_getLanguages extends TLObject {
        public static int constructor = -2146445955;

        static {
        }

        public TL_langpack_getLanguages() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_langPackLanguage v2 = TL_langPackLanguage.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_langpack_getLanguages.constructor);
        }
    }

    public class TL_langpack_getStrings extends TLObject {
        public static int constructor = 773776152;
        public ArrayList keys;
        public String lang_code;

        static {
        }

        public TL_langpack_getStrings() {
            super();
            this.keys = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                LangPackString v2 = LangPackString.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_langpack_getStrings.constructor);
            arg4.writeString(this.lang_code);
            arg4.writeInt32(481674261);
            int v0 = this.keys.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeString(this.keys.get(v1));
            }
        }
    }

    public class TL_maskCoords extends TLObject {
        public static int constructor = -1361650766;
        public int n;
        public double x;
        public double y;
        public double zoom;

        static {
        }

        public TL_maskCoords() {
            super();
        }

        public static TL_maskCoords TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_maskCoords.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_maskCoords", Integer.valueOf(arg2)));
            }

            TL_maskCoords v2 = new TL_maskCoords();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.n = arg3.readInt32(arg4);
            this.x = arg3.readDouble(arg4);
            this.y = arg3.readDouble(arg4);
            this.zoom = arg3.readDouble(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_maskCoords.constructor);
            arg3.writeInt32(this.n);
            arg3.writeDouble(this.x);
            arg3.writeDouble(this.y);
            arg3.writeDouble(this.zoom);
        }
    }

    public class TL_message extends Message {
        public static int constructor = 1157215293;

        static {
        }

        public TL_message() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.post = v0;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 256) != 0) {
                this.from_id = arg5.readInt32(arg6);
            }

            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = MessageFwdHeader.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null) {
                    this.ttl = this.media.ttl_seconds;
                }

                if(this.media == null) {
                    goto label_89;
                }

                if(TextUtils.isEmpty(this.media.captionLegacy)) {
                    goto label_89;
                }

                this.message = this.media.captionLegacy;
            }

        label_89:
            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 1024) != 0) {
                this.views = arg5.readInt32(arg6);
            }

            if((this.flags & 32768) != 0) {
                this.edit_date = arg5.readInt32(arg6);
            }

            if((this.flags & 65536) != 0) {
                this.post_author = arg5.readString(arg6);
            }

            if((this.flags & 131072) != 0) {
                this.grouped_id = arg5.readInt64(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message.constructor);
            int v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.silent ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.post ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg4.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                this.fwd_from.serializeToStream(arg4);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeInt32(this.via_bot_id);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 1024) != 0) {
                arg4.writeInt32(this.views);
            }

            if((this.flags & 32768) != 0) {
                arg4.writeInt32(this.edit_date);
            }

            if((this.flags & 65536) != 0) {
                arg4.writeString(this.post_author);
            }

            if((this.flags & 131072) != 0) {
                arg4.writeInt64(this.grouped_id);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_messageActionBotAllowed extends MessageAction {
        public static int constructor = -1410748418;
        public String domain;

        static {
        }

        public TL_messageActionBotAllowed() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.domain = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionBotAllowed.constructor);
            arg2.writeString(this.domain);
        }
    }

    public class TL_messageActionChannelCreate extends MessageAction {
        public static int constructor = -1781355374;

        static {
        }

        public TL_messageActionChannelCreate() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.title = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChannelCreate.constructor);
            arg2.writeString(this.title);
        }
    }

    public class TL_messageActionChannelMigrateFrom extends MessageAction {
        public static int constructor = -1336546578;

        static {
        }

        public TL_messageActionChannelMigrateFrom() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.title = arg2.readString(arg3);
            this.chat_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChannelMigrateFrom.constructor);
            arg2.writeString(this.title);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_messageActionChatAddUser extends MessageAction {
        public static int constructor = 1217033015;

        static {
        }

        public TL_messageActionChatAddUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.users.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messageActionChatAddUser.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.users.get(v1).intValue());
            }
        }
    }

    public class TL_messageActionChatAddUser_old extends TL_messageActionChatAddUser {
        public static int constructor = 1581055051;

        static {
        }

        public TL_messageActionChatAddUser_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatAddUser_old.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_messageActionChatCreate extends MessageAction {
        public static int constructor = -1503425638;

        static {
        }

        public TL_messageActionChatCreate() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.title = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.users.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messageActionChatCreate.constructor);
            arg4.writeString(this.title);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.users.get(v1).intValue());
            }
        }
    }

    public class TL_messageActionChatDeletePhoto extends MessageAction {
        public static int constructor = -1780220945;

        static {
        }

        public TL_messageActionChatDeletePhoto() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatDeletePhoto.constructor);
        }
    }

    public class TL_messageActionChatDeleteUser extends MessageAction {
        public static int constructor = -1297179892;

        static {
        }

        public TL_messageActionChatDeleteUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatDeleteUser.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_messageActionChatEditPhoto extends MessageAction {
        public static int constructor = 2144015272;

        static {
        }

        public TL_messageActionChatEditPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.photo = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatEditPhoto.constructor);
            this.photo.serializeToStream(arg2);
        }
    }

    public class TL_messageActionChatEditTitle extends MessageAction {
        public static int constructor = -1247687078;

        static {
        }

        public TL_messageActionChatEditTitle() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.title = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatEditTitle.constructor);
            arg2.writeString(this.title);
        }
    }

    public class TL_messageActionChatJoinedByLink extends MessageAction {
        public static int constructor = -123931160;

        static {
        }

        public TL_messageActionChatJoinedByLink() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.inviter_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatJoinedByLink.constructor);
            arg2.writeInt32(this.inviter_id);
        }
    }

    public class TL_messageActionChatMigrateTo extends MessageAction {
        public static int constructor = 1371385889;

        static {
        }

        public TL_messageActionChatMigrateTo() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.channel_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionChatMigrateTo.constructor);
            arg2.writeInt32(this.channel_id);
        }
    }

    public class TL_messageActionCreatedBroadcastList extends MessageAction {
        public static int constructor = 1431655767;

        static {
        }

        public TL_messageActionCreatedBroadcastList() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionCreatedBroadcastList.constructor);
        }
    }

    public class TL_messageActionCustomAction extends MessageAction {
        public static int constructor = -85549226;

        static {
        }

        public TL_messageActionCustomAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.message = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionCustomAction.constructor);
            arg2.writeString(this.message);
        }
    }

    public class TL_messageActionEmpty extends MessageAction {
        public static int constructor = -1230047312;

        static {
        }

        public TL_messageActionEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionEmpty.constructor);
        }
    }

    public class TL_messageActionGameScore extends MessageAction {
        public static int constructor = -1834538890;

        static {
        }

        public TL_messageActionGameScore() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.game_id = arg3.readInt64(arg4);
            this.score = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messageActionGameScore.constructor);
            arg3.writeInt64(this.game_id);
            arg3.writeInt32(this.score);
        }
    }

    public class TL_messageActionGroupCall extends MessageAction {
        public static int constructor = 2047704898;

        static {
        }

        public TL_messageActionGroupCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.call = TL_inputGroupCall.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            if((this.flags & 1) != 0) {
                this.duration = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionGroupCall.constructor);
            arg2.writeInt32(this.flags);
            this.call.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.duration);
            }
        }
    }

    public class TL_messageActionHistoryClear extends MessageAction {
        public static int constructor = -1615153660;

        static {
        }

        public TL_messageActionHistoryClear() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionHistoryClear.constructor);
        }
    }

    public class TL_messageActionLoginUnknownLocation extends MessageAction {
        public static int constructor = 1431655925;

        static {
        }

        public TL_messageActionLoginUnknownLocation() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionLoginUnknownLocation.constructor);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
        }
    }

    public class TL_messageActionPaymentSent extends MessageAction {
        public static int constructor = 1080663248;

        static {
        }

        public TL_messageActionPaymentSent() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.currency = arg2.readString(arg3);
            this.total_amount = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messageActionPaymentSent.constructor);
            arg3.writeString(this.currency);
            arg3.writeInt64(this.total_amount);
        }
    }

    public class TL_messageActionPhoneCall extends MessageAction {
        public static int constructor = -2132731265;

        static {
        }

        public TL_messageActionPhoneCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.call_id = arg3.readInt64(arg4);
            if((this.flags & 1) != 0) {
                this.reason = PhoneCallDiscardReason.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 2) != 0) {
                this.duration = arg3.readInt32(arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messageActionPhoneCall.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.call_id);
            if((this.flags & 1) != 0) {
                this.reason.serializeToStream(arg3);
            }

            if((this.flags & 2) != 0) {
                arg3.writeInt32(this.duration);
            }
        }
    }

    public class TL_messageActionPinMessage extends MessageAction {
        public static int constructor = -1799538451;

        static {
        }

        public TL_messageActionPinMessage() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionPinMessage.constructor);
        }
    }

    public class TL_messageActionScreenshotTaken extends MessageAction {
        public static int constructor = 1200788123;

        static {
        }

        public TL_messageActionScreenshotTaken() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionScreenshotTaken.constructor);
        }
    }

    public class TL_messageActionSecureValuesSent extends MessageAction {
        public static int constructor = -648257196;
        public ArrayList types;

        static {
        }

        public TL_messageActionSecureValuesSent() {
            super();
            this.types = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                SecureValueType v2 = SecureValueType.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.types.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messageActionSecureValuesSent.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.types.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.types.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messageActionTTLChange extends MessageAction {
        public static int constructor = 1431655762;

        static {
        }

        public TL_messageActionTTLChange() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.ttl = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionTTLChange.constructor);
            arg2.writeInt32(this.ttl);
        }
    }

    public class TL_messageActionUserJoined extends MessageAction {
        public static int constructor = 1431655760;

        static {
        }

        public TL_messageActionUserJoined() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionUserJoined.constructor);
        }
    }

    public class TL_messageActionUserUpdatedPhoto extends MessageAction {
        public static int constructor = 1431655761;

        static {
        }

        public TL_messageActionUserUpdatedPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.newUserPhoto = UserProfilePhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageActionUserUpdatedPhoto.constructor);
            this.newUserPhoto.serializeToStream(arg2);
        }
    }

    public class TL_messageEmpty extends Message {
        public static int constructor = -2082087340;

        static {
        }

        public TL_messageEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt32(arg2);
            this.to_id = new TL_peerUser();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEmpty.constructor);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_messageEncryptedAction extends MessageAction {
        public static int constructor = 1431655927;

        static {
        }

        public TL_messageEncryptedAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.encryptedAction = DecryptedMessageAction.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEncryptedAction.constructor);
            this.encryptedAction.serializeToStream(arg2);
        }
    }

    public class TL_messageEntityBold extends MessageEntity {
        public static int constructor = -1117713463;

        static {
        }

        public TL_messageEntityBold() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityBold.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityBotCommand extends MessageEntity {
        public static int constructor = 1827637959;

        static {
        }

        public TL_messageEntityBotCommand() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityBotCommand.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityCashtag extends MessageEntity {
        public static int constructor = 1280209983;

        static {
        }

        public TL_messageEntityCashtag() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityCashtag.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityCode extends MessageEntity {
        public static int constructor = 681706865;

        static {
        }

        public TL_messageEntityCode() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityCode.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityEmail extends MessageEntity {
        public static int constructor = 1692693954;

        static {
        }

        public TL_messageEntityEmail() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityEmail.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityHashtag extends MessageEntity {
        public static int constructor = 1868782349;

        static {
        }

        public TL_messageEntityHashtag() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityHashtag.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityItalic extends MessageEntity {
        public static int constructor = -2106619040;

        static {
        }

        public TL_messageEntityItalic() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityItalic.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityMention extends MessageEntity {
        public static int constructor = -100378723;

        static {
        }

        public TL_messageEntityMention() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityMention.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityMentionName extends MessageEntity {
        public static int constructor = 892193368;
        public int user_id;

        static {
        }

        public TL_messageEntityMentionName() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityMentionName.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_messageEntityPhone extends MessageEntity {
        public static int constructor = -1687559349;

        static {
        }

        public TL_messageEntityPhone() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityPhone.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityPre extends MessageEntity {
        public static int constructor = 1938967520;

        static {
        }

        public TL_messageEntityPre() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
            this.language = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityPre.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
            arg2.writeString(this.language);
        }
    }

    public class TL_messageEntityTextUrl extends MessageEntity {
        public static int constructor = 1990644519;

        static {
        }

        public TL_messageEntityTextUrl() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
            this.url = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityTextUrl.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
            arg2.writeString(this.url);
        }
    }

    public class TL_messageEntityUnknown extends MessageEntity {
        public static int constructor = -1148011883;

        static {
        }

        public TL_messageEntityUnknown() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityUnknown.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageEntityUrl extends MessageEntity {
        public static int constructor = 1859134776;

        static {
        }

        public TL_messageEntityUrl() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.offset = arg2.readInt32(arg3);
            this.length = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageEntityUrl.constructor);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.length);
        }
    }

    public class TL_messageForwarded_old2 extends Message {
        public static int constructor = -1553471722;

        static {
        }

        public TL_messageForwarded_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v2 = false;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
                v2 = true;
            }

            this.media_unread = v2;
            this.id = arg4.readInt32(arg5);
            this.fwd_from = new TL_messageFwdHeader();
            this.fwd_from.from_id = arg4.readInt32(arg5);
            this.fwd_from.flags |= 1;
            this.fwd_from.date = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.message = arg4.readString(arg5);
            this.flags |= 772;
            this.media = MessageMedia.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageForwarded_old2.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.fwd_from.from_id);
            arg2.writeInt32(this.fwd_from.date);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
        }
    }

    public class TL_messageForwarded_old extends TL_messageForwarded_old2 {
        public static int constructor = 99903492;

        static {
        }

        public TL_messageForwarded_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.fwd_from = new TL_messageFwdHeader();
            this.fwd_from.from_id = arg3.readInt32(arg4);
            this.fwd_from.flags |= 1;
            this.fwd_from.date = arg3.readInt32(arg4);
            this.from_id = arg3.readInt32(arg4);
            this.to_id = Peer.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.out = arg3.readBool(arg4);
            this.unread = arg3.readBool(arg4);
            this.flags |= 772;
            this.date = arg3.readInt32(arg4);
            this.message = arg3.readString(arg4);
            this.media = MessageMedia.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageForwarded_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.fwd_from.from_id);
            arg2.writeInt32(this.fwd_from.date);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeBool(this.out);
            arg2.writeBool(this.unread);
            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            this.writeAttachPath(arg2);
        }
    }

    public class TL_messageFwdHeader extends MessageFwdHeader {
        public static int constructor = 1436466797;

        static {
        }

        public TL_messageFwdHeader() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.from_id = arg2.readInt32(arg3);
            }

            this.date = arg2.readInt32(arg3);
            if((this.flags & 2) != 0) {
                this.channel_id = arg2.readInt32(arg3);
            }

            if((this.flags & 4) != 0) {
                this.channel_post = arg2.readInt32(arg3);
            }

            if((this.flags & 8) != 0) {
                this.post_author = arg2.readString(arg3);
            }

            if((this.flags & 16) != 0) {
                this.saved_from_peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }

            if((this.flags & 16) != 0) {
                this.saved_from_msg_id = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageFwdHeader.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.from_id);
            }

            arg2.writeInt32(this.date);
            if((this.flags & 2) != 0) {
                arg2.writeInt32(this.channel_id);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.channel_post);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.post_author);
            }

            if((this.flags & 16) != 0) {
                this.saved_from_peer.serializeToStream(arg2);
            }

            if((this.flags & 16) != 0) {
                arg2.writeInt32(this.saved_from_msg_id);
            }
        }
    }

    public class TL_messageFwdHeader_layer68 extends TL_messageFwdHeader {
        public static int constructor = -947462709;

        static {
        }

        public TL_messageFwdHeader_layer68() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.from_id = arg2.readInt32(arg3);
            }

            this.date = arg2.readInt32(arg3);
            if((this.flags & 2) != 0) {
                this.channel_id = arg2.readInt32(arg3);
            }

            if((this.flags & 4) != 0) {
                this.channel_post = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageFwdHeader_layer68.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.from_id);
            }

            arg2.writeInt32(this.date);
            if((this.flags & 2) != 0) {
                arg2.writeInt32(this.channel_id);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.channel_post);
            }
        }
    }

    public class TL_messageFwdHeader_layer72 extends TL_messageFwdHeader {
        public static int constructor = -85986132;

        static {
        }

        public TL_messageFwdHeader_layer72() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.from_id = arg2.readInt32(arg3);
            }

            this.date = arg2.readInt32(arg3);
            if((this.flags & 2) != 0) {
                this.channel_id = arg2.readInt32(arg3);
            }

            if((this.flags & 4) != 0) {
                this.channel_post = arg2.readInt32(arg3);
            }

            if((this.flags & 8) != 0) {
                this.post_author = arg2.readString(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageFwdHeader_layer72.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.from_id);
            }

            arg2.writeInt32(this.date);
            if((this.flags & 2) != 0) {
                arg2.writeInt32(this.channel_id);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.channel_post);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.post_author);
            }
        }
    }

    public class TL_messageMediaAudio_layer45 extends MessageMedia {
        public static int constructor = -961117440;

        static {
        }

        public TL_messageMediaAudio_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.audio_unused = Audio.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaAudio_layer45.constructor);
            this.audio_unused.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaContact extends MessageMedia {
        public static int constructor = -873313984;

        static {
        }

        public TL_messageMediaContact() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.vcard = arg2.readString(arg3);
            this.user_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaContact.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.vcard);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_messageMediaContact_layer81 extends TL_messageMediaContact {
        public static int constructor = 1585262393;

        static {
        }

        public TL_messageMediaContact_layer81() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_number = arg2.readString(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.user_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaContact_layer81.constructor);
            arg2.writeString(this.phone_number);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_messageMediaDocument extends MessageMedia {
        public static int constructor = -1666158377;

        static {
        }

        public TL_messageMediaDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            TL_documentEmpty v0_1;
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                Document v0 = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
            else {
                v0_1 = new TL_documentEmpty();
            }

            this.document = ((Document)v0_1);
            if((this.flags & 4) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaDocument.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.document.serializeToStream(arg2);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_messageMediaDocument_layer68 extends TL_messageMediaDocument {
        public static int constructor = -203411800;

        static {
        }

        public TL_messageMediaDocument_layer68() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.document = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.captionLegacy = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaDocument_layer68.constructor);
            this.document.serializeToStream(arg2);
            arg2.writeString(this.captionLegacy);
        }
    }

    public class TL_messageMediaDocument_layer74 extends TL_messageMediaDocument {
        public static int constructor = 2084836563;

        static {
        }

        public TL_messageMediaDocument_layer74() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            TL_documentEmpty v0_1;
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                Document v0 = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
            else {
                v0_1 = new TL_documentEmpty();
            }

            this.document = ((Document)v0_1);
            if((this.flags & 2) != 0) {
                this.captionLegacy = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaDocument_layer74.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.document.serializeToStream(arg2);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.captionLegacy);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_messageMediaDocument_old extends TL_messageMediaDocument {
        public static int constructor = 802824708;

        static {
        }

        public TL_messageMediaDocument_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.document = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaDocument_old.constructor);
            this.document.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaEmpty extends MessageMedia {
        public static int constructor = 1038967584;

        static {
        }

        public TL_messageMediaEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaEmpty.constructor);
        }
    }

    public class TL_messageMediaGame extends MessageMedia {
        public static int constructor = -38694904;

        static {
        }

        public TL_messageMediaGame() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.game = TL_game.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaGame.constructor);
            this.game.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaGeo extends MessageMedia {
        public static int constructor = 1457575028;

        static {
        }

        public TL_messageMediaGeo() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaGeo.constructor);
            this.geo.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaGeoLive extends MessageMedia {
        public static int constructor = 2084316681;

        static {
        }

        public TL_messageMediaGeoLive() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.period = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaGeoLive.constructor);
            this.geo.serializeToStream(arg2);
            arg2.writeInt32(this.period);
        }
    }

    public class TL_messageMediaInvoice extends MessageMedia {
        public static int constructor = -2074799289;
        public WebDocument photo;

        static {
        }

        public TL_messageMediaInvoice() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.shipping_address_requested = v0;
            if((this.flags & 8) != 0) {
                v1 = true;
            }

            this.test = v1;
            this.title = arg4.readString(arg5);
            this.description = arg4.readString(arg5);
            if((this.flags & 1) != 0) {
                this.photo = WebDocument.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 4) != 0) {
                this.receipt_msg_id = arg4.readInt32(arg5);
            }

            this.currency = arg4.readString(arg5);
            this.total_amount = arg4.readInt64(arg5);
            this.start_param = arg4.readString(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messageMediaInvoice.constructor);
            int v0 = this.shipping_address_requested ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.test ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeString(this.title);
            arg3.writeString(this.description);
            if((this.flags & 1) != 0) {
                this.photo.serializeToStream(arg3);
            }

            if((this.flags & 4) != 0) {
                arg3.writeInt32(this.receipt_msg_id);
            }

            arg3.writeString(this.currency);
            arg3.writeInt64(this.total_amount);
            arg3.writeString(this.start_param);
        }
    }

    public class TL_messageMediaPhoto extends MessageMedia {
        public static int constructor = 1766936791;

        static {
        }

        public TL_messageMediaPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            TL_photoEmpty v0_1;
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                Photo v0 = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
            else {
                v0_1 = new TL_photoEmpty();
            }

            this.photo = ((Photo)v0_1);
            if((this.flags & 4) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaPhoto.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.photo.serializeToStream(arg2);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_messageMediaPhoto_layer68 extends TL_messageMediaPhoto {
        public static int constructor = 1032643901;

        static {
        }

        public TL_messageMediaPhoto_layer68() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.photo = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.captionLegacy = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaPhoto_layer68.constructor);
            this.photo.serializeToStream(arg2);
            arg2.writeString(this.captionLegacy);
        }
    }

    public class TL_messageMediaPhoto_layer74 extends TL_messageMediaPhoto {
        public static int constructor = -1256047857;

        static {
        }

        public TL_messageMediaPhoto_layer74() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            TL_photoEmpty v0_1;
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                Photo v0 = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
            else {
                v0_1 = new TL_photoEmpty();
            }

            this.photo = ((Photo)v0_1);
            if((this.flags & 2) != 0) {
                this.captionLegacy = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.ttl_seconds = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaPhoto_layer74.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.photo.serializeToStream(arg2);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.captionLegacy);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.ttl_seconds);
            }
        }
    }

    public class TL_messageMediaPhoto_old extends TL_messageMediaPhoto {
        public static int constructor = -926655958;

        static {
        }

        public TL_messageMediaPhoto_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.photo = Photo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaPhoto_old.constructor);
            this.photo.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaUnsupported extends MessageMedia {
        public static int constructor = -1618676578;

        static {
        }

        public TL_messageMediaUnsupported() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaUnsupported.constructor);
        }
    }

    public class TL_messageMediaUnsupported_old extends TL_messageMediaUnsupported {
        public static int constructor = 694364726;

        static {
        }

        public TL_messageMediaUnsupported_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.bytes = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaUnsupported_old.constructor);
            arg2.writeByteArray(this.bytes);
        }
    }

    public class TL_messageMediaVenue extends MessageMedia {
        public static int constructor = 784356159;

        static {
        }

        public TL_messageMediaVenue() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
            this.provider = arg2.readString(arg3);
            this.venue_id = arg2.readString(arg3);
            this.venue_type = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaVenue.constructor);
            this.geo.serializeToStream(arg2);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
            arg2.writeString(this.provider);
            arg2.writeString(this.venue_id);
            arg2.writeString(this.venue_type);
        }
    }

    public class TL_messageMediaVenue_layer71 extends MessageMedia {
        public static int constructor = 2031269663;

        static {
        }

        public TL_messageMediaVenue_layer71() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.geo = GeoPoint.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.title = arg2.readString(arg3);
            this.address = arg2.readString(arg3);
            this.provider = arg2.readString(arg3);
            this.venue_id = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaVenue_layer71.constructor);
            this.geo.serializeToStream(arg2);
            arg2.writeString(this.title);
            arg2.writeString(this.address);
            arg2.writeString(this.provider);
            arg2.writeString(this.venue_id);
        }
    }

    public class TL_messageMediaVideo_layer45 extends MessageMedia {
        public static int constructor = 1540298357;

        static {
        }

        public TL_messageMediaVideo_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.video_unused = Video.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.captionLegacy = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaVideo_layer45.constructor);
            this.video_unused.serializeToStream(arg2);
            arg2.writeString(this.captionLegacy);
        }
    }

    public class TL_messageMediaVideo_old extends TL_messageMediaVideo_layer45 {
        public static int constructor = -1563278704;

        static {
        }

        public TL_messageMediaVideo_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.video_unused = Video.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaVideo_old.constructor);
            this.video_unused.serializeToStream(arg2);
        }
    }

    public class TL_messageMediaWebPage extends MessageMedia {
        public static int constructor = -1557277184;

        static {
        }

        public TL_messageMediaWebPage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.webpage = WebPage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageMediaWebPage.constructor);
            this.webpage.serializeToStream(arg2);
        }
    }

    public class TL_messageRange extends TLObject {
        public static int constructor = 182649427;
        public int max_id;
        public int min_id;

        static {
        }

        public TL_messageRange() {
            super();
        }

        public static TL_messageRange TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messageRange.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messageRange", Integer.valueOf(arg2)));
            }

            TL_messageRange v2 = new TL_messageRange();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.min_id = arg2.readInt32(arg3);
            this.max_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageRange.constructor);
            arg2.writeInt32(this.min_id);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_messageService extends Message {
        public static int constructor = -1642487306;

        static {
        }

        public TL_messageService() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            if((this.flags & 16384) != 0) {
            }
            else {
                v1 = false;
            }

            this.post = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 256) != 0) {
                this.from_id = arg4.readInt32(arg5);
            }

            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg4.readInt32(arg5);
            }

            this.date = arg4.readInt32(arg5);
            this.action = MessageAction.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageService.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.silent ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.post ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg2.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg2);
            if((this.flags & 8) != 0) {
                arg2.writeInt32(this.reply_to_msg_id);
            }

            arg2.writeInt32(this.date);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_messageService_layer48 extends TL_messageService {
        public static int constructor = -1066691065;

        static {
        }

        public TL_messageService_layer48() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            if((this.flags & 16384) != 0) {
            }
            else {
                v1 = false;
            }

            this.post = v1;
            this.id = arg4.readInt32(arg5);
            if((this.flags & 256) != 0) {
                this.from_id = arg4.readInt32(arg5);
            }

            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.from_id == 0) {
                int v0_1 = this.to_id.user_id != 0 ? this.to_id.user_id : -this.to_id.channel_id;
                this.from_id = v0_1;
            }

            this.date = arg4.readInt32(arg5);
            this.action = MessageAction.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageService_layer48.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.silent ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.post ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg2.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg2);
            arg2.writeInt32(this.date);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_messageService_old2 extends TL_messageService {
        public static int constructor = 495384334;

        static {
        }

        public TL_messageService_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.media_unread = v1;
            this.id = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.action = MessageAction.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.flags |= 256;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageService_old2.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeInt32(this.date);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_messageService_old extends TL_messageService {
        public static int constructor = -1618124613;

        static {
        }

        public TL_messageService_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.from_id = arg2.readInt32(arg3);
            this.to_id = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.out = arg2.readBool(arg3);
            this.unread = arg2.readBool(arg3);
            this.flags |= 256;
            this.date = arg2.readInt32(arg3);
            this.action = MessageAction.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messageService_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeBool(this.out);
            arg2.writeBool(this.unread);
            arg2.writeInt32(this.date);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_message_layer47 extends TL_message {
        public static int constructor = -913120932;

        static {
        }

        public TL_message_layer47() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v3;
            MessageFwdHeader v0_3;
            int v0_1;
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 256) != 0) {
                this.from_id = arg5.readInt32(arg6);
            }

            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.from_id == 0) {
                v0_1 = this.to_id.user_id != 0 ? this.to_id.user_id : -this.to_id.channel_id;
                this.from_id = v0_1;
            }

            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                Peer v0_2 = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if((v0_2 instanceof TL_peerChannel)) {
                    this.fwd_from.channel_id = v0_2.channel_id;
                    v0_3 = this.fwd_from;
                    v3 = v0_3.flags | 2;
                    goto label_71;
                }
                else if((v0_2 instanceof TL_peerUser)) {
                    this.fwd_from.from_id = v0_2.user_id;
                    v0_3 = this.fwd_from;
                    v3 = v0_3.flags | 1;
                label_71:
                    v0_3.flags = v3;
                }

                this.fwd_from.date = arg5.readInt32(arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                    this.message = this.media.captionLegacy;
                }
            }
            else {
                this.media = new TL_messageMediaEmpty();
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 1024) != 0) {
                this.views = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_layer47.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg4.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                if(this.fwd_from.from_id != 0) {
                    TL_peerUser v0_1 = new TL_peerUser();
                    v0_1.user_id = this.fwd_from.from_id;
                    v0_1.serializeToStream(arg4);
                }
                else {
                    TL_peerChannel v0_2 = new TL_peerChannel();
                    v0_2.channel_id = this.fwd_from.channel_id;
                    v0_2.serializeToStream(arg4);
                }

                arg4.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeInt32(this.via_bot_id);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 1024) != 0) {
                arg4.writeInt32(this.views);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_layer68 extends TL_message {
        public static int constructor = -1063525281;

        static {
        }

        public TL_message_layer68() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0_1;
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.post = v0;
            v0 = (this.flags & 1073741824) != 0 ? true : false;
            this.with_my_score = v0;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 256) != 0) {
                this.from_id = arg5.readInt32(arg6);
            }

            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.from_id == 0) {
                v0_1 = this.to_id.user_id != 0 ? this.to_id.user_id : -this.to_id.channel_id;
                this.from_id = v0_1;
            }

            if((this.flags & 4) != 0) {
                this.fwd_from = MessageFwdHeader.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                    this.message = this.media.captionLegacy;
                }
            }
            else {
                this.media = new TL_messageMediaEmpty();
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 1024) != 0) {
                this.views = arg5.readInt32(arg6);
            }

            if((this.flags & 32768) != 0) {
                this.edit_date = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_layer68.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.silent ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.post ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            v0 = this.with_my_score ? this.flags | 1073741824 : this.flags & -1073741825;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg4.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                this.fwd_from.serializeToStream(arg4);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeInt32(this.via_bot_id);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 1024) != 0) {
                arg4.writeInt32(this.views);
            }

            if((this.flags & 32768) != 0) {
                arg4.writeInt32(this.edit_date);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_layer72 extends TL_message {
        public static int constructor = -1864508399;

        static {
        }

        public TL_message_layer72() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.post = v0;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 256) != 0) {
                this.from_id = arg5.readInt32(arg6);
            }

            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = MessageFwdHeader.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null) {
                    this.ttl = this.media.ttl_seconds;
                }

                if(this.media == null) {
                    goto label_89;
                }

                if(TextUtils.isEmpty(this.media.captionLegacy)) {
                    goto label_89;
                }

                this.message = this.media.captionLegacy;
            }

        label_89:
            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 1024) != 0) {
                this.views = arg5.readInt32(arg6);
            }

            if((this.flags & 32768) != 0) {
                this.edit_date = arg5.readInt32(arg6);
            }

            if((this.flags & 65536) != 0) {
                this.post_author = arg5.readString(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_layer72.constructor);
            int v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.silent ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.post ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg4.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                this.fwd_from.serializeToStream(arg4);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeInt32(this.via_bot_id);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 1024) != 0) {
                arg4.writeInt32(this.views);
            }

            if((this.flags & 32768) != 0) {
                arg4.writeInt32(this.edit_date);
            }

            if((this.flags & 65536) != 0) {
                arg4.writeString(this.post_author);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_old2 extends TL_message {
        public static int constructor = 1450613171;

        static {
        }

        public TL_message_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5) | 256 | 512;
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.media_unread = v1;
            this.id = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.message = arg4.readString(arg5);
            this.media = MessageMedia.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_message_old2.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            this.writeAttachPath(arg2);
        }
    }

    public class TL_message_old3 extends TL_message {
        public static int constructor = -1481959023;

        static {
        }

        public TL_message_old3() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5) | 256 | 512;
            boolean v2 = false;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
                v2 = true;
            }

            this.media_unread = v2;
            this.id = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                this.fwd_from.from_id = arg4.readInt32(arg5);
                this.fwd_from.flags |= 1;
                this.fwd_from.date = arg4.readInt32(arg5);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg4.readInt32(arg5);
            }

            this.date = arg4.readInt32(arg5);
            this.message = arg4.readString(arg5);
            this.media = MessageMedia.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_message_old3.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.fwd_from.from_id);
                arg2.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 8) != 0) {
                arg2.writeInt32(this.reply_to_msg_id);
            }

            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            this.writeAttachPath(arg2);
        }
    }

    public class TL_message_old4 extends TL_message {
        public static int constructor = -1023016155;

        static {
        }

        public TL_message_old4() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5) | 256 | 512;
            boolean v2 = false;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
                v2 = true;
            }

            this.media_unread = v2;
            this.id = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                this.fwd_from.from_id = arg4.readInt32(arg5);
                this.fwd_from.flags |= 1;
                this.fwd_from.date = arg4.readInt32(arg5);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg4.readInt32(arg5);
            }

            this.date = arg4.readInt32(arg5);
            this.message = arg4.readString(arg5);
            this.media = MessageMedia.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_message_old4.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.fwd_from.from_id);
                arg2.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 8) != 0) {
                arg2.writeInt32(this.reply_to_msg_id);
            }

            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg2);
            }

            this.writeAttachPath(arg2);
        }
    }

    public class TL_message_old5 extends TL_message {
        public static int constructor = -260565816;

        static {
        }

        public TL_message_old5() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6) | 256 | 512;
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            this.from_id = arg5.readInt32(arg6);
            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                this.fwd_from.from_id = arg5.readInt32(arg6);
                this.fwd_from.flags |= 1;
                this.fwd_from.date = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_old5.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.fwd_from.from_id);
                arg4.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            this.media.serializeToStream(arg4);
            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_old6 extends TL_message {
        public static int constructor = 736885382;

        static {
        }

        public TL_message_old6() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6) | 256;
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            this.from_id = arg5.readInt32(arg6);
            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                this.fwd_from.from_id = arg5.readInt32(arg6);
                this.fwd_from.flags |= 1;
                this.fwd_from.date = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                    this.message = this.media.captionLegacy;
                }
            }
            else {
                this.media = new TL_messageMediaEmpty();
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_old6.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                arg4.writeInt32(this.fwd_from.from_id);
                arg4.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_old7 extends TL_message {
        public static int constructor = 1537633299;

        static {
        }

        public TL_message_old7() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v3;
            MessageFwdHeader v0_3;
            int v0_1;
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 256) != 0) {
                this.from_id = arg5.readInt32(arg6);
            }

            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.from_id == 0) {
                v0_1 = this.to_id.user_id != 0 ? this.to_id.user_id : -this.to_id.channel_id;
                this.from_id = v0_1;
            }

            if((this.flags & 4) != 0) {
                this.fwd_from = new TL_messageFwdHeader();
                Peer v0_2 = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if((v0_2 instanceof TL_peerChannel)) {
                    this.fwd_from.channel_id = v0_2.channel_id;
                    v0_3 = this.fwd_from;
                    v3 = v0_3.flags | 2;
                    goto label_71;
                }
                else if((v0_2 instanceof TL_peerUser)) {
                    this.fwd_from.from_id = v0_2.user_id;
                    v0_3 = this.fwd_from;
                    v3 = v0_3.flags | 1;
                label_71:
                    v0_3.flags = v3;
                }

                this.fwd_from.date = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                    this.message = this.media.captionLegacy;
                }
            }
            else {
                this.media = new TL_messageMediaEmpty();
            }

            if((this.flags & 64) != 0) {
                this.reply_markup = ReplyMarkup.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v2 < v0_1) {
                        MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v1);
                            ++v2;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }

            if((this.flags & 1024) != 0) {
                this.views = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_old7.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            if((this.flags & 256) != 0) {
                arg4.writeInt32(this.from_id);
            }

            this.to_id.serializeToStream(arg4);
            if((this.flags & 4) != 0) {
                if(this.fwd_from.from_id != 0) {
                    TL_peerUser v0_1 = new TL_peerUser();
                    v0_1.user_id = this.fwd_from.from_id;
                    v0_1.serializeToStream(arg4);
                }
                else {
                    TL_peerChannel v0_2 = new TL_peerChannel();
                    v0_2.channel_id = this.fwd_from.channel_id;
                    v0_2.serializeToStream(arg4);
                }

                arg4.writeInt32(this.fwd_from.date);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            if((this.flags & 512) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 64) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 128) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 1024) != 0) {
                arg4.writeInt32(this.views);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_old extends TL_message {
        public static int constructor = 585853626;

        static {
        }

        public TL_message_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.from_id = arg2.readInt32(arg3);
            this.to_id = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.out = arg2.readBool(arg3);
            this.unread = arg2.readBool(arg3);
            this.flags |= 768;
            this.date = arg2.readInt32(arg3);
            this.message = arg2.readString(arg3);
            this.media = MessageMedia.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_message_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeBool(this.out);
            arg2.writeBool(this.unread);
            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            this.writeAttachPath(arg2);
        }
    }

    public class TL_message_secret extends TL_message {
        public static int constructor = 1431655930;

        static {
        }

        public TL_message_secret() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            this.ttl = arg5.readInt32(arg6);
            this.from_id = arg5.readInt32(arg6);
            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }

            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.entities.add(v1);
                ++v2;
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_name = arg5.readString(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_random_id = arg5.readInt64(arg6);
            }

            if((this.flags & 131072) != 0) {
                this.grouped_id = arg5.readInt64(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_secret.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeInt32(this.ttl);
            arg4.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg4);
            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            this.media.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.entities.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.entities.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeString(this.via_bot_name);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt64(this.reply_to_random_id);
            }

            if((this.flags & 131072) != 0) {
                arg4.writeInt64(this.grouped_id);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_secret_layer72 extends TL_message {
        public static int constructor = 1431655929;

        static {
        }

        public TL_message_secret_layer72() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            this.id = arg5.readInt32(arg6);
            this.ttl = arg5.readInt32(arg6);
            this.from_id = arg5.readInt32(arg6);
            this.to_id = Peer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.date = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }

            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.entities.add(v1);
                ++v2;
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_name = arg5.readString(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_random_id = arg5.readInt64(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_message_secret_layer72.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.id);
            arg4.writeInt32(this.ttl);
            arg4.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg4);
            arg4.writeInt32(this.date);
            arg4.writeString(this.message);
            this.media.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.entities.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.entities.get(v1).serializeToStream(arg4);
            }

            if((this.flags & 2048) != 0) {
                arg4.writeString(this.via_bot_name);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt64(this.reply_to_random_id);
            }

            this.writeAttachPath(arg4);
        }
    }

    public class TL_message_secret_old extends TL_message_secret {
        public static int constructor = 1431655928;

        static {
        }

        public TL_message_secret_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5) | 256 | 512;
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.unread = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.media_unread = v1;
            this.id = arg4.readInt32(arg5);
            this.ttl = arg4.readInt32(arg5);
            this.from_id = arg4.readInt32(arg5);
            this.to_id = Peer.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            this.date = arg4.readInt32(arg5);
            this.message = arg4.readString(arg5);
            this.media = MessageMedia.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if(this.media != null && !TextUtils.isEmpty(this.media.captionLegacy)) {
                this.message = this.media.captionLegacy;
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_message_secret_old.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.out ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.mentioned ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.media_unread ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.ttl);
            arg2.writeInt32(this.from_id);
            this.to_id.serializeToStream(arg2);
            arg2.writeInt32(this.date);
            arg2.writeString(this.message);
            this.media.serializeToStream(arg2);
            this.writeAttachPath(arg2);
        }
    }

    public class TL_messages_acceptEncryption extends TLObject {
        public static int constructor = 1035731989;
        public byte[] g_b;
        public long key_fingerprint;
        public TL_inputEncryptedChat peer;

        static {
        }

        public TL_messages_acceptEncryption() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return EncryptedChat.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_acceptEncryption.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeByteArray(this.g_b);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_messages_addChatUser extends TLObject {
        public int chat_id;
        public static int constructor = -106911223;
        public int fwd_limit;
        public InputUser user_id;

        static {
        }

        public TL_messages_addChatUser() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_addChatUser.constructor);
            arg2.writeInt32(this.chat_id);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.fwd_limit);
        }
    }

    public class TL_messages_affectedHistory extends TLObject {
        public static int constructor = -1269012015;
        public int offset;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_messages_affectedHistory() {
            super();
        }

        public static TL_messages_affectedHistory TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_affectedHistory.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_affectedHistory", Integer.valueOf(arg2)));
            }

            TL_messages_affectedHistory v2 = new TL_messages_affectedHistory();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
            this.offset = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_affectedHistory.constructor);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
            arg2.writeInt32(this.offset);
        }
    }

    public class TL_messages_affectedMessages extends TLObject {
        public static int constructor = -2066640507;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_messages_affectedMessages() {
            super();
        }

        public static TL_messages_affectedMessages TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_affectedMessages.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_affectedMessages", Integer.valueOf(arg2)));
            }

            TL_messages_affectedMessages v2 = new TL_messages_affectedMessages();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_affectedMessages.constructor);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_messages_allStickers extends messages_AllStickers {
        public static int constructor = -302170017;
        public int hash;

        static {
        }

        public TL_messages_allStickers() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.hash = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                StickerSet v2 = StickerSet.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sets.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_allStickers.constructor);
            arg4.writeInt32(this.hash);
            arg4.writeInt32(481674261);
            int v0 = this.sets.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sets.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_allStickersNotModified extends messages_AllStickers {
        public static int constructor = -395967805;

        static {
        }

        public TL_messages_allStickersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_allStickersNotModified.constructor);
        }
    }

    public class TL_messages_archivedStickers extends TLObject {
        public static int constructor = 1338747336;
        public int count;
        public ArrayList sets;

        static {
        }

        public TL_messages_archivedStickers() {
            super();
            this.sets = new ArrayList();
        }

        public static TL_messages_archivedStickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_archivedStickers.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_archivedStickers", Integer.valueOf(arg2)));
            }

            TL_messages_archivedStickers v2 = new TL_messages_archivedStickers();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.count = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                StickerSetCovered v2 = StickerSetCovered.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sets.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_archivedStickers.constructor);
            arg4.writeInt32(this.count);
            arg4.writeInt32(481674261);
            int v0 = this.sets.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sets.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_botCallbackAnswer extends TLObject {
        public boolean alert;
        public int cache_time;
        public static int constructor = 911761060;
        public int flags;
        public boolean has_url;
        public String message;
        public boolean native_ui;
        public String url;

        static {
        }

        public TL_messages_botCallbackAnswer() {
            super();
        }

        public static TL_messages_botCallbackAnswer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_botCallbackAnswer.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_botCallbackAnswer", Integer.valueOf(arg2)));
            }

            TL_messages_botCallbackAnswer v2 = new TL_messages_botCallbackAnswer();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.alert = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.has_url = v0;
            if((this.flags & 16) != 0) {
                v1 = true;
            }

            this.native_ui = v1;
            if((this.flags & 1) != 0) {
                this.message = arg4.readString(arg5);
            }

            if((this.flags & 4) != 0) {
                this.url = arg4.readString(arg5);
            }

            this.cache_time = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_botCallbackAnswer.constructor);
            int v0 = this.alert ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.has_url ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            v0 = this.native_ui ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.message);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.url);
            }

            arg2.writeInt32(this.cache_time);
        }
    }

    public class TL_messages_botResults extends messages_BotResults {
        public static int constructor = -1803769784;

        static {
        }

        public TL_messages_botResults() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.gallery = v0;
            this.query_id = arg8.readInt64(arg9);
            if((this.flags & 2) != 0) {
                this.next_offset = arg8.readString(arg9);
            }

            if((this.flags & 4) != 0) {
                this.switch_pm = TL_inlineBotSwitchPM.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            int v0_1 = arg8.readInt32(arg9);
            int v3 = 481674261;
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0_1; ++v4) {
                BotInlineResult v5 = BotInlineResult.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.results.add(v5);
            }

            this.cache_time = arg8.readInt32(arg9);
            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            while(v2 < v0_1) {
                User v1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1 == null) {
                    return;
                }

                this.users.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_botResults.constructor);
            int v0 = this.gallery ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg6.writeInt32(this.flags);
            arg6.writeInt64(this.query_id);
            if((this.flags & 2) != 0) {
                arg6.writeString(this.next_offset);
            }

            if((this.flags & 4) != 0) {
                this.switch_pm.serializeToStream(arg6);
            }

            v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.results.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.results.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(this.cache_time);
            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_botResults_layer71 extends TL_messages_botResults {
        public static int constructor = -858565059;

        static {
        }

        public TL_messages_botResults_layer71() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.gallery = v0;
            this.query_id = arg6.readInt64(arg7);
            if((this.flags & 2) != 0) {
                this.next_offset = arg6.readString(arg7);
            }

            if((this.flags & 4) != 0) {
                this.switch_pm = TL_inlineBotSwitchPM.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
            }

            int v0_1 = arg6.readInt32(arg7);
            if(v0_1 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg6.readInt32(arg7);
            while(v2 < v0_1) {
                BotInlineResult v1 = BotInlineResult.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
                if(v1 == null) {
                    return;
                }

                this.results.add(v1);
                ++v2;
            }

            this.cache_time = arg6.readInt32(arg7);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_botResults_layer71.constructor);
            int v0 = this.gallery ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt64(this.query_id);
            if((this.flags & 2) != 0) {
                arg4.writeString(this.next_offset);
            }

            if((this.flags & 4) != 0) {
                this.switch_pm.serializeToStream(arg4);
            }

            arg4.writeInt32(481674261);
            v0 = this.results.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.results.get(v1).serializeToStream(arg4);
            }

            arg4.writeInt32(this.cache_time);
        }
    }

    public class TL_messages_channelMessages extends messages_Messages {
        public static int constructor = -1725551049;

        static {
        }

        public TL_messages_channelMessages() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            this.pts = arg8.readInt32(arg9);
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.messages.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_channelMessages.constructor);
            arg6.writeInt32(this.flags);
            arg6.writeInt32(this.pts);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_chatFull extends TLObject {
        public ArrayList chats;
        public static int constructor = -438840932;
        public ChatFull full_chat;
        public ArrayList users;

        static {
        }

        public TL_messages_chatFull() {
            super();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_messages_chatFull TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_chatFull.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_chatFull", Integer.valueOf(arg2)));
            }

            TL_messages_chatFull v2 = new TL_messages_chatFull();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.full_chat = ChatFull.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.chats.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_chatFull.constructor);
            this.full_chat.serializeToStream(arg6);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.chats.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_chats extends messages_Chats {
        public static int constructor = 1694474197;

        static {
        }

        public TL_messages_chats() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                Chat v2 = Chat.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.chats.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_chats.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.chats.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.chats.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_chatsSlice extends messages_Chats {
        public static int constructor = -1663561404;

        static {
        }

        public TL_messages_chatsSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.count = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                Chat v2 = Chat.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.chats.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_chatsSlice.constructor);
            arg4.writeInt32(this.count);
            arg4.writeInt32(481674261);
            int v0 = this.chats.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.chats.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_checkChatInvite extends TLObject {
        public static int constructor = 1051570619;
        public String hash;

        static {
        }

        public TL_messages_checkChatInvite() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return ChatInvite.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_checkChatInvite.constructor);
            arg2.writeString(this.hash);
        }
    }

    public class TL_messages_clearAllDrafts extends TLObject {
        public static int constructor = 2119757468;

        static {
        }

        public TL_messages_clearAllDrafts() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_clearAllDrafts.constructor);
        }
    }

    public class TL_messages_clearRecentStickers extends TLObject {
        public boolean attached;
        public static int constructor = -1986437075;
        public int flags;

        static {
        }

        public TL_messages_clearRecentStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_clearRecentStickers.constructor);
            int v0 = this.attached ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_messages_createChat extends TLObject {
        public static int constructor = 164303470;
        public String title;
        public ArrayList users;

        static {
        }

        public TL_messages_createChat() {
            super();
            this.users = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_createChat.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }

            arg4.writeString(this.title);
        }
    }

    public class TL_messages_deleteChatUser extends TLObject {
        public int chat_id;
        public static int constructor = -530505962;
        public InputUser user_id;

        static {
        }

        public TL_messages_deleteChatUser() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_deleteChatUser.constructor);
            arg2.writeInt32(this.chat_id);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_messages_deleteHistory extends TLObject {
        public static int constructor = 469850889;
        public int flags;
        public boolean just_clear;
        public int max_id;
        public InputPeer peer;

        static {
        }

        public TL_messages_deleteHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedHistory.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_deleteHistory.constructor);
            int v0 = this.just_clear ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_messages_deleteMessages extends TLObject {
        public static int constructor = -443640366;
        public int flags;
        public ArrayList id;
        public boolean revoke;

        static {
        }

        public TL_messages_deleteMessages() {
            super();
            this.id = new ArrayList();
        }

        public static TL_messages_deleteMessages TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_deleteMessages.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_deleteMessages", Integer.valueOf(arg2)));
            }

            TL_messages_deleteMessages v2 = new TL_messages_deleteMessages();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedMessages.TLdeserialize(arg1, arg2, arg3);
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.revoke = v0;
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                this.id.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_deleteMessages.constructor);
            int v0 = this.revoke ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(481674261);
            v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_messages_dhConfig extends messages_DhConfig {
        public static int constructor = 740433629;

        static {
        }

        public TL_messages_dhConfig() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.g = arg2.readInt32(arg3);
            this.p = arg2.readByteArray(arg3);
            this.version = arg2.readInt32(arg3);
            this.random = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_dhConfig.constructor);
            arg2.writeInt32(this.g);
            arg2.writeByteArray(this.p);
            arg2.writeInt32(this.version);
            arg2.writeByteArray(this.random);
        }
    }

    public class TL_messages_dhConfigNotModified extends messages_DhConfig {
        public static int constructor = -1058912715;

        static {
        }

        public TL_messages_dhConfigNotModified() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.random = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_dhConfigNotModified.constructor);
            arg2.writeByteArray(this.random);
        }
    }

    public class TL_messages_dialogs extends messages_Dialogs {
        public static int constructor = 364538944;

        static {
        }

        public TL_messages_dialogs() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_dialog v5 = TL_dialog.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.dialogs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5_1 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.messages.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_2 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.chats.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_dialogs.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.dialogs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.dialogs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.messages.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_dialogsNotModified extends messages_Dialogs {
        public static int constructor = -253500010;

        static {
        }

        public TL_messages_dialogsNotModified() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.count = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_dialogsNotModified.constructor);
            arg2.writeInt32(this.count);
        }
    }

    public class TL_messages_dialogsSlice extends messages_Dialogs {
        public static int constructor = 1910543603;

        static {
        }

        public TL_messages_dialogsSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_dialog v5 = TL_dialog.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.dialogs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5_1 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.messages.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_2 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.chats.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_dialogsSlice.constructor);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.dialogs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.dialogs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.messages.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_discardEncryption extends TLObject {
        public int chat_id;
        public static int constructor = -304536635;

        static {
        }

        public TL_messages_discardEncryption() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_discardEncryption.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_messages_editChatAdmin extends TLObject {
        public int chat_id;
        public static int constructor = -1444503762;
        public boolean is_admin;
        public InputUser user_id;

        static {
        }

        public TL_messages_editChatAdmin() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_editChatAdmin.constructor);
            arg2.writeInt32(this.chat_id);
            this.user_id.serializeToStream(arg2);
            arg2.writeBool(this.is_admin);
        }
    }

    public class TL_messages_editChatPhoto extends TLObject {
        public int chat_id;
        public static int constructor = -900957736;
        public InputChatPhoto photo;

        static {
        }

        public TL_messages_editChatPhoto() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_editChatPhoto.constructor);
            arg2.writeInt32(this.chat_id);
            this.photo.serializeToStream(arg2);
        }
    }

    public class TL_messages_editChatTitle extends TLObject {
        public int chat_id;
        public static int constructor = -599447467;
        public String title;

        static {
        }

        public TL_messages_editChatTitle() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_editChatTitle.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeString(this.title);
        }
    }

    public class TL_messages_editMessage extends TLObject {
        public static int constructor = -1073683256;
        public ArrayList entities;
        public int flags;
        public InputGeoPoint geo_point;
        public int id;
        public InputMedia media;
        public String message;
        public boolean no_webpage;
        public InputPeer peer;
        public ReplyMarkup reply_markup;
        public boolean stop_geo_live;

        static {
        }

        public TL_messages_editMessage() {
            super();
            this.entities = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_editMessage.constructor);
            int v0 = this.no_webpage ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.stop_geo_live ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.peer.serializeToStream(arg4);
            arg4.writeInt32(this.id);
            if((this.flags & 2048) != 0) {
                arg4.writeString(this.message);
            }

            if((this.flags & 16384) != 0) {
                this.media.serializeToStream(arg4);
            }

            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }

            if((this.flags & 8192) != 0) {
                this.geo_point.serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_exportChatInvite extends TLObject {
        public int chat_id;
        public static int constructor = 2106086025;

        static {
        }

        public TL_messages_exportChatInvite() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return ExportedChatInvite.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_exportChatInvite.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_messages_faveSticker extends TLObject {
        public static int constructor = -1174420133;
        public InputDocument id;
        public boolean unfave;

        static {
        }

        public TL_messages_faveSticker() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_faveSticker.constructor);
            this.id.serializeToStream(arg2);
            arg2.writeBool(this.unfave);
        }
    }

    public class TL_messages_favedStickers extends messages_FavedStickers {
        public static int constructor = -209768682;

        static {
        }

        public TL_messages_favedStickers() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.hash = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_stickerPack v5 = TL_stickerPack.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.packs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.stickers.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_favedStickers.constructor);
            arg6.writeInt32(this.hash);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.packs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.packs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.stickers.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.stickers.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_favedStickersNotModified extends messages_FavedStickers {
        public static int constructor = -1634752813;

        static {
        }

        public TL_messages_favedStickersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_favedStickersNotModified.constructor);
        }
    }

    public class TL_messages_featuredStickers extends messages_FeaturedStickers {
        public static int constructor = -123893531;

        static {
        }

        public TL_messages_featuredStickers() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.hash = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                StickerSetCovered v5 = StickerSetCovered.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.sets.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                this.unread.add(Long.valueOf(arg8.readInt64(arg9)));
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_featuredStickers.constructor);
            arg6.writeInt32(this.hash);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.sets.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.sets.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.unread.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                arg6.writeInt64(this.unread.get(v2).longValue());
                ++v2;
            }
        }
    }

    public class TL_messages_featuredStickersNotModified extends messages_FeaturedStickers {
        public static int constructor = 82699215;

        static {
        }

        public TL_messages_featuredStickersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_featuredStickersNotModified.constructor);
        }
    }

    public class TL_messages_forwardMessage extends TLObject {
        public static int constructor = 865483769;
        public int id;
        public InputPeer peer;
        public long random_id;

        static {
        }

        public TL_messages_forwardMessage() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_forwardMessage.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.random_id);
        }
    }

    public class TL_messages_forwardMessages extends TLObject {
        public boolean background;
        public static int constructor = 1888354709;
        public int flags;
        public InputPeer from_peer;
        public boolean grouped;
        public ArrayList id;
        public ArrayList random_id;
        public boolean silent;
        public InputPeer to_peer;
        public boolean with_my_score;

        static {
        }

        public TL_messages_forwardMessages() {
            super();
            this.id = new ArrayList();
            this.random_id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_forwardMessages.constructor);
            int v0 = this.silent ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.background ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.with_my_score ? this.flags | 256 : this.flags & -257;
            this.flags = v0;
            v0 = this.grouped ? this.flags | 512 : this.flags & -513;
            this.flags = v0;
            arg6.writeInt32(this.flags);
            this.from_peer.serializeToStream(arg6);
            v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.id.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                arg6.writeInt32(this.id.get(v3).intValue());
            }

            arg6.writeInt32(v0);
            v0 = this.random_id.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                arg6.writeInt64(this.random_id.get(v2).longValue());
                ++v2;
            }

            this.to_peer.serializeToStream(arg6);
        }
    }

    public class TL_messages_foundGifs extends TLObject {
        public static int constructor = 1158290442;
        public int next_offset;
        public ArrayList results;

        static {
        }

        public TL_messages_foundGifs() {
            super();
            this.results = new ArrayList();
        }

        public static TL_messages_foundGifs TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_foundGifs.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_foundGifs", Integer.valueOf(arg2)));
            }

            TL_messages_foundGifs v2 = new TL_messages_foundGifs();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.next_offset = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                FoundGif v2 = FoundGif.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.results.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_foundGifs.constructor);
            arg4.writeInt32(this.next_offset);
            arg4.writeInt32(481674261);
            int v0 = this.results.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.results.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_foundStickerSets extends messages_FoundStickerSets {
        public static int constructor = 1359533640;
        public int hash;
        public ArrayList sets;

        static {
        }

        public TL_messages_foundStickerSets() {
            super();
            this.sets = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.hash = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                StickerSetCovered v2 = StickerSetCovered.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sets.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_foundStickerSets.constructor);
            arg4.writeInt32(this.hash);
            arg4.writeInt32(481674261);
            int v0 = this.sets.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sets.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_foundStickerSetsNotModified extends messages_FoundStickerSets {
        public static int constructor = 223655517;

        static {
        }

        public TL_messages_foundStickerSetsNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_foundStickerSetsNotModified.constructor);
        }
    }

    public class TL_messages_getAllChats extends TLObject {
        public static int constructor = -341307408;
        public ArrayList except_ids;

        static {
        }

        public TL_messages_getAllChats() {
            super();
            this.except_ids = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Chats.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getAllChats.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.except_ids.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.except_ids.get(v1).intValue());
            }
        }
    }

    public class TL_messages_getAllDrafts extends TLObject {
        public static int constructor = 1782549861;

        static {
        }

        public TL_messages_getAllDrafts() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getAllDrafts.constructor);
        }
    }

    public class TL_messages_getAllStickers extends TLObject {
        public static int constructor = 479598769;
        public int hash;

        static {
        }

        public TL_messages_getAllStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_AllStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getAllStickers.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getArchivedStickers extends TLObject {
        public static int constructor = 1475442322;
        public int flags;
        public int limit;
        public boolean masks;
        public long offset_id;

        static {
        }

        public TL_messages_getArchivedStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_archivedStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_getArchivedStickers.constructor);
            int v0 = this.masks ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.offset_id);
            arg3.writeInt32(this.limit);
        }
    }

    public class TL_messages_getAttachedStickers extends TLObject {
        public static int constructor = -866424884;
        public InputStickeredMedia media;

        static {
        }

        public TL_messages_getAttachedStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                StickerSetCovered v2 = StickerSetCovered.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getAttachedStickers.constructor);
            this.media.serializeToStream(arg2);
        }
    }

    public class TL_messages_getBotCallbackAnswer extends TLObject {
        public static int constructor = -2130010132;
        public byte[] data;
        public int flags;
        public boolean game;
        public int msg_id;
        public InputPeer peer;

        static {
        }

        public TL_messages_getBotCallbackAnswer() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_botCallbackAnswer.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getBotCallbackAnswer.constructor);
            int v0 = this.game ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.msg_id);
            if((this.flags & 1) != 0) {
                arg2.writeByteArray(this.data);
            }
        }
    }

    public class TL_messages_getChats extends TLObject {
        public static int constructor = 1013621127;
        public ArrayList id;

        static {
        }

        public TL_messages_getChats() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_chats.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getChats.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_messages_getCommonChats extends TLObject {
        public static int constructor = 218777796;
        public int limit;
        public int max_id;
        public InputUser user_id;

        static {
        }

        public TL_messages_getCommonChats() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Chats.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getCommonChats.constructor);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_messages_getDhConfig extends TLObject {
        public static int constructor = 651135312;
        public int random_length;
        public int version;

        static {
        }

        public TL_messages_getDhConfig() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_DhConfig.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getDhConfig.constructor);
            arg2.writeInt32(this.version);
            arg2.writeInt32(this.random_length);
        }
    }

    public class TL_messages_getDialogUnreadMarks extends TLObject {
        public static int constructor = 585256482;

        static {
        }

        public TL_messages_getDialogUnreadMarks() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                DialogPeer v2 = DialogPeer.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getDialogUnreadMarks.constructor);
        }
    }

    public class TL_messages_getDialogs extends TLObject {
        public static int constructor = -1332171034;
        public boolean exclude_pinned;
        public int flags;
        public int hash;
        public int limit;
        public int offset_date;
        public int offset_id;
        public InputPeer offset_peer;

        static {
        }

        public TL_messages_getDialogs() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Dialogs.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getDialogs.constructor);
            int v0 = this.exclude_pinned ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.offset_date);
            arg2.writeInt32(this.offset_id);
            this.offset_peer.serializeToStream(arg2);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getDocumentByHash extends TLObject {
        public static int constructor = 864953444;
        public String mime_type;
        public byte[] sha256;
        public int size;

        static {
        }

        public TL_messages_getDocumentByHash() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Document.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getDocumentByHash.constructor);
            arg2.writeByteArray(this.sha256);
            arg2.writeInt32(this.size);
            arg2.writeString(this.mime_type);
        }
    }

    public class TL_messages_getFavedStickers extends TLObject {
        public static int constructor = 567151374;
        public int hash;

        static {
        }

        public TL_messages_getFavedStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_FavedStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getFavedStickers.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getFeaturedStickers extends TLObject {
        public static int constructor = 766298703;
        public int hash;

        static {
        }

        public TL_messages_getFeaturedStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_FeaturedStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getFeaturedStickers.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getFullChat extends TLObject {
        public int chat_id;
        public static int constructor = 998448230;

        static {
        }

        public TL_messages_getFullChat() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_chatFull.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getFullChat.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_messages_getGameHighScores extends TLObject {
        public static int constructor = -400399203;
        public int id;
        public InputPeer peer;
        public InputUser user_id;

        static {
        }

        public TL_messages_getGameHighScores() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_highScores.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getGameHighScores.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.id);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_messages_getHistory extends TLObject {
        public int add_offset;
        public static int constructor = -1347868602;
        public int limit;
        public int max_id;
        public int min_id;
        public int offset_date;
        public int offset_id;
        public InputPeer peer;

        static {
        }

        public TL_messages_getHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getHistory.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.offset_id);
            arg2.writeInt32(this.offset_date);
            arg2.writeInt32(this.add_offset);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.min_id);
        }
    }

    public class TL_messages_getInlineBotResults extends TLObject {
        public InputUser bot;
        public static int constructor = 1364105629;
        public int flags;
        public InputGeoPoint geo_point;
        public String offset;
        public InputPeer peer;
        public String query;

        static {
        }

        public TL_messages_getInlineBotResults() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_BotResults.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getInlineBotResults.constructor);
            arg2.writeInt32(this.flags);
            this.bot.serializeToStream(arg2);
            this.peer.serializeToStream(arg2);
            if((this.flags & 1) != 0) {
                this.geo_point.serializeToStream(arg2);
            }

            arg2.writeString(this.query);
            arg2.writeString(this.offset);
        }
    }

    public class TL_messages_getInlineGameHighScores extends TLObject {
        public static int constructor = 258170395;
        public TL_inputBotInlineMessageID id;
        public InputUser user_id;

        static {
        }

        public TL_messages_getInlineGameHighScores() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_highScores.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getInlineGameHighScores.constructor);
            this.id.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
        }
    }

    public class TL_messages_getMaskStickers extends TLObject {
        public static int constructor = 1706608543;
        public int hash;

        static {
        }

        public TL_messages_getMaskStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_AllStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getMaskStickers.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getMessageEditData extends TLObject {
        public static int constructor = -39416522;
        public int id;
        public InputPeer peer;

        static {
        }

        public TL_messages_getMessageEditData() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_messageEditData.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getMessageEditData.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_messages_getMessages extends TLObject {
        public static int constructor = 1109588596;
        public ArrayList id;

        static {
        }

        public TL_messages_getMessages() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getMessages.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_messages_getMessagesViews extends TLObject {
        public static int constructor = -993483427;
        public ArrayList id;
        public boolean increment;
        public InputPeer peer;

        static {
        }

        public TL_messages_getMessagesViews() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                v6.objects.add(Integer.valueOf(arg5.readInt32(arg7)));
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getMessagesViews.constructor);
            this.peer.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }

            arg4.writeBool(this.increment);
        }
    }

    public class TL_messages_getPeerDialogs extends TLObject {
        public static int constructor = -462373635;
        public ArrayList peers;

        static {
        }

        public TL_messages_getPeerDialogs() {
            super();
            this.peers = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_peerDialogs.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getPeerDialogs.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.peers.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.peers.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_getPeerSettings extends TLObject {
        public static int constructor = 913498268;
        public InputPeer peer;

        static {
        }

        public TL_messages_getPeerSettings() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_peerSettings.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getPeerSettings.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_getPinnedDialogs extends TLObject {
        public static int constructor = -497756594;

        static {
        }

        public TL_messages_getPinnedDialogs() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_peerDialogs.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getPinnedDialogs.constructor);
        }
    }

    public class TL_messages_getRecentLocations extends TLObject {
        public static int constructor = -1144759543;
        public int hash;
        public int limit;
        public InputPeer peer;

        static {
        }

        public TL_messages_getRecentLocations() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getRecentLocations.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getRecentStickers extends TLObject {
        public boolean attached;
        public static int constructor = 1587647177;
        public int flags;
        public int hash;

        static {
        }

        public TL_messages_getRecentStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_RecentStickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getRecentStickers.constructor);
            int v0 = this.attached ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getSavedGifs extends TLObject {
        public static int constructor = -2084618926;
        public int hash;

        static {
        }

        public TL_messages_getSavedGifs() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_SavedGifs.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getSavedGifs.constructor);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getStickerSet extends TLObject {
        public static int constructor = 639215886;
        public InputStickerSet stickerset;

        static {
        }

        public TL_messages_getStickerSet() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_stickerSet.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getStickerSet.constructor);
            this.stickerset.serializeToStream(arg2);
        }
    }

    public class TL_messages_getStickers extends TLObject {
        public static int constructor = 71126828;
        public String emoticon;
        public int hash;

        static {
        }

        public TL_messages_getStickers() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Stickers.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getStickers.constructor);
            arg2.writeString(this.emoticon);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getUnreadMentions extends TLObject {
        public int add_offset;
        public static int constructor = 1180140658;
        public int limit;
        public int max_id;
        public int min_id;
        public int offset_id;
        public InputPeer peer;

        static {
        }

        public TL_messages_getUnreadMentions() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getUnreadMentions.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.offset_id);
            arg2.writeInt32(this.add_offset);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.min_id);
        }
    }

    public class TL_messages_getWebPage extends TLObject {
        public static int constructor = 852135825;
        public int hash;
        public String url;

        static {
        }

        public TL_messages_getWebPage() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return WebPage.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_getWebPage.constructor);
            arg2.writeString(this.url);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_getWebPagePreview extends TLObject {
        public static int constructor = -1956073268;
        public ArrayList entities;
        public int flags;
        public String message;

        static {
        }

        public TL_messages_getWebPagePreview() {
            super();
            this.entities = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return MessageMedia.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_getWebPagePreview.constructor);
            arg4.writeInt32(this.flags);
            arg4.writeString(this.message);
            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_messages_hideReportSpam extends TLObject {
        public static int constructor = -1460572005;
        public InputPeer peer;

        static {
        }

        public TL_messages_hideReportSpam() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_hideReportSpam.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_highScores extends TLObject {
        public static int constructor = -1707344487;
        public ArrayList scores;
        public ArrayList users;

        static {
        }

        public TL_messages_highScores() {
            super();
            this.scores = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_messages_highScores TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_highScores.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_highScores", Integer.valueOf(arg2)));
            }

            TL_messages_highScores v2 = new TL_messages_highScores();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_highScore v5 = TL_highScore.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.scores.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_highScores.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.scores.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.scores.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_importChatInvite extends TLObject {
        public static int constructor = 1817183516;
        public String hash;

        static {
        }

        public TL_messages_importChatInvite() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_importChatInvite.constructor);
            arg2.writeString(this.hash);
        }
    }

    public class TL_messages_installStickerSet extends TLObject {
        public boolean archived;
        public static int constructor = -946871200;
        public InputStickerSet stickerset;

        static {
        }

        public TL_messages_installStickerSet() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_StickerSetInstallResult.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_installStickerSet.constructor);
            this.stickerset.serializeToStream(arg2);
            arg2.writeBool(this.archived);
        }
    }

    public class TL_messages_markDialogUnread extends TLObject {
        public static int constructor = -1031349873;
        public int flags;
        public InputDialogPeer peer;
        public boolean unread;

        static {
        }

        public TL_messages_markDialogUnread() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_markDialogUnread.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_messageEditData extends TLObject {
        public boolean caption;
        public static int constructor = 649453030;
        public int flags;

        static {
        }

        public TL_messages_messageEditData() {
            super();
        }

        public static TL_messages_messageEditData TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_messageEditData.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_messageEditData", Integer.valueOf(arg2)));
            }

            TL_messages_messageEditData v2 = new TL_messages_messageEditData();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.flags = arg1.readInt32(arg2);
            arg2 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                arg2 = false;
            }

            this.caption = arg2;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_messageEditData.constructor);
            int v0 = this.caption ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_messages_messageEmpty extends TLObject {
        public static int constructor = 1062078024;

        static {
        }

        public TL_messages_messageEmpty() {
            super();
        }

        public static TL_messages_messageEmpty TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_messageEmpty.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_messageEmpty", Integer.valueOf(arg2)));
            }

            TL_messages_messageEmpty v2 = new TL_messages_messageEmpty();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_messageEmpty.constructor);
        }
    }

    public class TL_messages_messages extends messages_Messages {
        public static int constructor = -1938715001;

        static {
        }

        public TL_messages_messages() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.messages.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_messages.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_messagesSlice extends messages_Messages {
        public static int constructor = 189033187;

        static {
        }

        public TL_messages_messagesSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.messages.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_messagesSlice.constructor);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_migrateChat extends TLObject {
        public int chat_id;
        public static int constructor = 363051235;

        static {
        }

        public TL_messages_migrateChat() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_migrateChat.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_messages_peerDialogs extends TLObject {
        public ArrayList chats;
        public static int constructor = 863093588;
        public ArrayList dialogs;
        public ArrayList messages;
        public TL_updates_state state;
        public ArrayList users;

        static {
        }

        public TL_messages_peerDialogs() {
            super();
            this.dialogs = new ArrayList();
            this.messages = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_messages_peerDialogs TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_peerDialogs.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_peerDialogs", Integer.valueOf(arg2)));
            }

            TL_messages_peerDialogs v2 = new TL_messages_peerDialogs();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_dialog v5 = TL_dialog.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.dialogs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5_1 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.messages.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_2 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.chats.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }

            this.state = TL_updates_state.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_peerDialogs.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.dialogs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.dialogs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.messages.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }

            this.state.serializeToStream(arg6);
        }
    }

    public class TL_messages_readEncryptedHistory extends TLObject {
        public static int constructor = 2135648522;
        public int max_date;
        public TL_inputEncryptedChat peer;

        static {
        }

        public TL_messages_readEncryptedHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_readEncryptedHistory.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.max_date);
        }
    }

    public class TL_messages_readFeaturedStickers extends TLObject {
        public static int constructor = 1527873830;
        public ArrayList id;

        static {
        }

        public TL_messages_readFeaturedStickers() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_messages_readFeaturedStickers.constructor);
            arg5.writeInt32(481674261);
            int v0 = this.id.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.id.get(v1).longValue());
            }
        }
    }

    public class TL_messages_readHistory extends TLObject {
        public static int constructor = 238054714;
        public int max_id;
        public InputPeer peer;

        static {
        }

        public TL_messages_readHistory() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedMessages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_readHistory.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_messages_readMentions extends TLObject {
        public static int constructor = 251759059;
        public InputPeer peer;

        static {
        }

        public TL_messages_readMentions() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedHistory.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_readMentions.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_readMessageContents extends TLObject {
        public static int constructor = 916930423;
        public ArrayList id;

        static {
        }

        public TL_messages_readMessageContents() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_affectedMessages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_readMessageContents.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }
        }
    }

    public class TL_messages_receivedMessages extends TLObject {
        public static int constructor = 94983360;
        public int max_id;

        static {
        }

        public TL_messages_receivedMessages() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_receivedNotifyMessage v2 = TL_receivedNotifyMessage.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_receivedMessages.constructor);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_messages_receivedQueue extends TLObject {
        public static int constructor = 1436924774;
        public int max_qts;

        static {
        }

        public TL_messages_receivedQueue() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg6, int arg7, boolean arg8) {
            Vector v7 = new Vector();
            int v0 = arg6.readInt32(arg8);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                v7.objects.add(Long.valueOf(arg6.readInt64(arg8)));
            }

            return ((TLObject)v7);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_receivedQueue.constructor);
            arg2.writeInt32(this.max_qts);
        }
    }

    public class TL_messages_recentStickers extends messages_RecentStickers {
        public static int constructor = 586395571;
        public ArrayList dates;
        public int hash;
        public ArrayList packs;
        public ArrayList stickers;

        static {
        }

        public TL_messages_recentStickers() {
            super();
            this.packs = new ArrayList();
            this.stickers = new ArrayList();
            this.dates = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.hash = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_stickerPack v5 = TL_stickerPack.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.packs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Document v5_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.stickers.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                this.dates.add(Integer.valueOf(arg8.readInt32(arg9)));
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_recentStickers.constructor);
            arg6.writeInt32(this.hash);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.packs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.packs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.stickers.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.stickers.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.dates.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                arg6.writeInt32(this.dates.get(v2).intValue());
                ++v2;
            }
        }
    }

    public class TL_messages_recentStickersNotModified extends messages_RecentStickers {
        public static int constructor = 186120336;

        static {
        }

        public TL_messages_recentStickersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_recentStickersNotModified.constructor);
        }
    }

    public class TL_messages_reorderPinnedDialogs extends TLObject {
        public static int constructor = 1532089919;
        public int flags;
        public boolean force;
        public ArrayList order;

        static {
        }

        public TL_messages_reorderPinnedDialogs() {
            super();
            this.order = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_reorderPinnedDialogs.constructor);
            int v0 = this.force ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(481674261);
            v0 = this.order.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.order.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_reorderStickerSets extends TLObject {
        public static int constructor = 2016638777;
        public int flags;
        public boolean masks;
        public ArrayList order;

        static {
        }

        public TL_messages_reorderStickerSets() {
            super();
            this.order = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_messages_reorderStickerSets.constructor);
            int v0 = this.masks ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg5.writeInt32(this.flags);
            arg5.writeInt32(481674261);
            v0 = this.order.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.order.get(v1).longValue());
            }
        }
    }

    public class TL_messages_report extends TLObject {
        public static int constructor = -1115507112;
        public ArrayList id;
        public InputPeer peer;
        public ReportReason reason;

        static {
        }

        public TL_messages_report() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_report.constructor);
            this.peer.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.id.get(v1).intValue());
            }

            this.reason.serializeToStream(arg4);
        }
    }

    public class TL_messages_reportEncryptedSpam extends TLObject {
        public static int constructor = 1259113487;
        public TL_inputEncryptedChat peer;

        static {
        }

        public TL_messages_reportEncryptedSpam() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_reportEncryptedSpam.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_reportSpam extends TLObject {
        public static int constructor = -820669733;
        public InputPeer peer;

        static {
        }

        public TL_messages_reportSpam() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_reportSpam.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_requestEncryption extends TLObject {
        public static int constructor = -162681021;
        public byte[] g_a;
        public int random_id;
        public InputUser user_id;

        static {
        }

        public TL_messages_requestEncryption() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return EncryptedChat.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_requestEncryption.constructor);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.random_id);
            arg2.writeByteArray(this.g_a);
        }
    }

    public class TL_messages_saveDraft extends TLObject {
        public static int constructor = -1137057461;
        public ArrayList entities;
        public int flags;
        public String message;
        public boolean no_webpage;
        public InputPeer peer;
        public int reply_to_msg_id;

        static {
        }

        public TL_messages_saveDraft() {
            super();
            this.entities = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_saveDraft.constructor);
            int v0 = this.no_webpage ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            this.peer.serializeToStream(arg4);
            arg4.writeString(this.message);
            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_messages_saveGif extends TLObject {
        public static int constructor = 846868683;
        public InputDocument id;
        public boolean unsave;

        static {
        }

        public TL_messages_saveGif() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_saveGif.constructor);
            this.id.serializeToStream(arg2);
            arg2.writeBool(this.unsave);
        }
    }

    public class TL_messages_saveRecentSticker extends TLObject {
        public boolean attached;
        public static int constructor = 958863608;
        public int flags;
        public InputDocument id;
        public boolean unsave;

        static {
        }

        public TL_messages_saveRecentSticker() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_saveRecentSticker.constructor);
            int v0 = this.attached ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.id.serializeToStream(arg2);
            arg2.writeBool(this.unsave);
        }
    }

    public class TL_messages_savedGifs extends messages_SavedGifs {
        public static int constructor = 772213157;

        static {
        }

        public TL_messages_savedGifs() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.hash = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                Document v2 = Document.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.gifs.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_savedGifs.constructor);
            arg4.writeInt32(this.hash);
            arg4.writeInt32(481674261);
            int v0 = this.gifs.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.gifs.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_savedGifsNotModified extends messages_SavedGifs {
        public static int constructor = -402498398;

        static {
        }

        public TL_messages_savedGifsNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_savedGifsNotModified.constructor);
        }
    }

    public class TL_messages_search extends TLObject {
        public int add_offset;
        public static int constructor = -2045448344;
        public MessagesFilter filter;
        public int flags;
        public InputUser from_id;
        public int hash;
        public int limit;
        public int max_date;
        public int max_id;
        public int min_date;
        public int min_id;
        public int offset_id;
        public InputPeer peer;
        public String q;

        static {
        }

        public TL_messages_search() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_search.constructor);
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
            arg2.writeString(this.q);
            if((this.flags & 1) != 0) {
                this.from_id.serializeToStream(arg2);
            }

            this.filter.serializeToStream(arg2);
            arg2.writeInt32(this.min_date);
            arg2.writeInt32(this.max_date);
            arg2.writeInt32(this.offset_id);
            arg2.writeInt32(this.add_offset);
            arg2.writeInt32(this.limit);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.min_id);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_searchGifs extends TLObject {
        public static int constructor = -1080395925;
        public int offset;
        public String q;

        static {
        }

        public TL_messages_searchGifs() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_messages_foundGifs.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_searchGifs.constructor);
            arg2.writeString(this.q);
            arg2.writeInt32(this.offset);
        }
    }

    public class TL_messages_searchGlobal extends TLObject {
        public static int constructor = -1640190800;
        public int limit;
        public int offset_date;
        public int offset_id;
        public InputPeer offset_peer;
        public String q;

        static {
        }

        public TL_messages_searchGlobal() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_Messages.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_searchGlobal.constructor);
            arg2.writeString(this.q);
            arg2.writeInt32(this.offset_date);
            this.offset_peer.serializeToStream(arg2);
            arg2.writeInt32(this.offset_id);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_messages_searchStickerSets extends TLObject {
        public static int constructor = -1028140917;
        public boolean exclude_featured;
        public int flags;
        public int hash;
        public String q;

        static {
        }

        public TL_messages_searchStickerSets() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_FoundStickerSets.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_searchStickerSets.constructor);
            int v0 = this.exclude_featured ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeString(this.q);
            arg2.writeInt32(this.hash);
        }
    }

    public class TL_messages_sendBroadcast extends TLObject {
        public static int constructor = -1082919718;
        public ArrayList contacts;
        public InputMedia media;
        public String message;
        public ArrayList random_id;

        static {
        }

        public TL_messages_sendBroadcast() {
            super();
            this.contacts = new ArrayList();
            this.random_id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_sendBroadcast.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.contacts.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.contacts.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.random_id.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                arg6.writeInt64(this.random_id.get(v2).longValue());
                ++v2;
            }

            arg6.writeString(this.message);
            this.media.serializeToStream(arg6);
        }
    }

    public class TL_messages_sendEncrypted extends TLObject {
        public static int constructor = -1451792525;
        public NativeByteBuffer data;
        public TL_inputEncryptedChat peer;
        public long random_id;

        static {
        }

        public TL_messages_sendEncrypted() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_SentEncryptedMessage.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
            if(this.data != null) {
                this.data.reuse();
                this.data = null;
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_sendEncrypted.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt64(this.random_id);
            arg3.writeByteBuffer(this.data);
        }
    }

    public class TL_messages_sendEncryptedFile extends TLObject {
        public static int constructor = -1701831834;
        public NativeByteBuffer data;
        public InputEncryptedFile file;
        public TL_inputEncryptedChat peer;
        public long random_id;

        static {
        }

        public TL_messages_sendEncryptedFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_SentEncryptedMessage.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
            if(this.data != null) {
                this.data.reuse();
                this.data = null;
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_sendEncryptedFile.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt64(this.random_id);
            arg3.writeByteBuffer(this.data);
            this.file.serializeToStream(arg3);
        }
    }

    public class TL_messages_sendEncryptedMultiMedia extends TLObject {
        public static int constructor = -892679478;
        public ArrayList files;
        public ArrayList messages;

        static {
        }

        public TL_messages_sendEncryptedMultiMedia() {
            super();
            this.messages = new ArrayList();
            this.files = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_SentEncryptedMessage.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
        }

        public void serializeToStream(AbstractSerializedData arg1) {
        }
    }

    public class TL_messages_sendEncryptedService extends TLObject {
        public static int constructor = 852769188;
        public NativeByteBuffer data;
        public TL_inputEncryptedChat peer;
        public long random_id;

        static {
        }

        public TL_messages_sendEncryptedService() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return messages_SentEncryptedMessage.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
            if(this.data != null) {
                this.data.reuse();
                this.data = null;
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_sendEncryptedService.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt64(this.random_id);
            arg3.writeByteBuffer(this.data);
        }
    }

    public class TL_messages_sendInlineBotResult extends TLObject {
        public boolean background;
        public boolean clear_draft;
        public static int constructor = -1318189314;
        public int flags;
        public String id;
        public InputPeer peer;
        public long query_id;
        public long random_id;
        public int reply_to_msg_id;
        public boolean silent;

        static {
        }

        public TL_messages_sendInlineBotResult() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_sendInlineBotResult.constructor);
            int v0 = this.silent ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.background ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.clear_draft ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            this.peer.serializeToStream(arg3);
            if((this.flags & 1) != 0) {
                arg3.writeInt32(this.reply_to_msg_id);
            }

            arg3.writeInt64(this.random_id);
            arg3.writeInt64(this.query_id);
            arg3.writeString(this.id);
        }
    }

    public class TL_messages_sendMedia extends TLObject {
        public boolean background;
        public boolean clear_draft;
        public static int constructor = -1194252757;
        public ArrayList entities;
        public int flags;
        public InputMedia media;
        public String message;
        public InputPeer peer;
        public long random_id;
        public ReplyMarkup reply_markup;
        public int reply_to_msg_id;
        public boolean silent;

        static {
        }

        public TL_messages_sendMedia() {
            super();
            this.entities = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_sendMedia.constructor);
            int v0 = this.silent ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.background ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.clear_draft ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.peer.serializeToStream(arg4);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            this.media.serializeToStream(arg4);
            arg4.writeString(this.message);
            arg4.writeInt64(this.random_id);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_messages_sendMessage extends TLObject {
        public boolean background;
        public boolean clear_draft;
        public static int constructor = -91733382;
        public ArrayList entities;
        public int flags;
        public String message;
        public boolean no_webpage;
        public InputPeer peer;
        public long random_id;
        public ReplyMarkup reply_markup;
        public int reply_to_msg_id;
        public boolean silent;

        static {
        }

        public TL_messages_sendMessage() {
            super();
            this.entities = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_sendMessage.constructor);
            int v0 = this.no_webpage ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.silent ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.background ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.clear_draft ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.peer.serializeToStream(arg4);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeString(this.message);
            arg4.writeInt64(this.random_id);
            if((this.flags & 4) != 0) {
                this.reply_markup.serializeToStream(arg4);
            }

            if((this.flags & 8) != 0) {
                arg4.writeInt32(481674261);
                v0 = this.entities.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.entities.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_messages_sendMultiMedia extends TLObject {
        public boolean background;
        public boolean clear_draft;
        public static int constructor = 546656559;
        public int flags;
        public ArrayList multi_media;
        public InputPeer peer;
        public int reply_to_msg_id;
        public boolean silent;

        static {
        }

        public TL_messages_sendMultiMedia() {
            super();
            this.multi_media = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_sendMultiMedia.constructor);
            int v0 = this.silent ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            v0 = this.background ? this.flags | 64 : this.flags & -65;
            this.flags = v0;
            v0 = this.clear_draft ? this.flags | 128 : this.flags & -129;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.peer.serializeToStream(arg4);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(this.reply_to_msg_id);
            }

            arg4.writeInt32(481674261);
            v0 = this.multi_media.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.multi_media.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_sendScreenshotNotification extends TLObject {
        public static int constructor = -914493408;
        public InputPeer peer;
        public long random_id;
        public int reply_to_msg_id;

        static {
        }

        public TL_messages_sendScreenshotNotification() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_sendScreenshotNotification.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt32(this.reply_to_msg_id);
            arg3.writeInt64(this.random_id);
        }
    }

    public class TL_messages_sentEncryptedFile extends messages_SentEncryptedMessage {
        public static int constructor = -1802240206;

        static {
        }

        public TL_messages_sentEncryptedFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.date = arg2.readInt32(arg3);
            this.file = EncryptedFile.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_sentEncryptedFile.constructor);
            arg2.writeInt32(this.date);
            this.file.serializeToStream(arg2);
        }
    }

    public class TL_messages_sentEncryptedMessage extends messages_SentEncryptedMessage {
        public static int constructor = 1443858741;

        static {
        }

        public TL_messages_sentEncryptedMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.date = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_sentEncryptedMessage.constructor);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_messages_setBotCallbackAnswer extends TLObject {
        public boolean alert;
        public int cache_time;
        public static int constructor = -712043766;
        public int flags;
        public String message;
        public long query_id;
        public String url;

        static {
        }

        public TL_messages_setBotCallbackAnswer() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_setBotCallbackAnswer.constructor);
            int v0 = this.alert ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.query_id);
            if((this.flags & 1) != 0) {
                arg3.writeString(this.message);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.url);
            }

            arg3.writeInt32(this.cache_time);
        }
    }

    public class TL_messages_setEncryptedTyping extends TLObject {
        public static int constructor = 2031374829;
        public TL_inputEncryptedChat peer;
        public boolean typing;

        static {
        }

        public TL_messages_setEncryptedTyping() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_setEncryptedTyping.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeBool(this.typing);
        }
    }

    public class TL_messages_setGameScore extends TLObject {
        public static int constructor = -1896289088;
        public boolean edit_message;
        public int flags;
        public boolean force;
        public int id;
        public InputPeer peer;
        public int score;
        public InputUser user_id;

        static {
        }

        public TL_messages_setGameScore() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_setGameScore.constructor);
            int v0 = this.edit_message ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.force ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.id);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.score);
        }
    }

    public class TL_messages_setInlineGameScore extends TLObject {
        public static int constructor = 363700068;
        public boolean edit_message;
        public int flags;
        public boolean force;
        public TL_inputBotInlineMessageID id;
        public int score;
        public InputUser user_id;

        static {
        }

        public TL_messages_setInlineGameScore() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_setInlineGameScore.constructor);
            int v0 = this.edit_message ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.force ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.id.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.score);
        }
    }

    public class TL_messages_setTyping extends TLObject {
        public SendMessageAction action;
        public static int constructor = -1551737264;
        public InputPeer peer;

        static {
        }

        public TL_messages_setTyping() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_setTyping.constructor);
            this.peer.serializeToStream(arg2);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_messages_startBot extends TLObject {
        public InputUser bot;
        public static int constructor = -421563528;
        public InputPeer peer;
        public long random_id;
        public String start_param;

        static {
        }

        public TL_messages_startBot() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_messages_startBot.constructor);
            this.bot.serializeToStream(arg3);
            this.peer.serializeToStream(arg3);
            arg3.writeInt64(this.random_id);
            arg3.writeString(this.start_param);
        }
    }

    public class TL_messages_stickerSet extends TLObject {
        public static int constructor = -1240849242;
        public ArrayList documents;
        public ArrayList packs;
        public StickerSet set;

        static {
        }

        public TL_messages_stickerSet() {
            super();
            this.packs = new ArrayList();
            this.documents = new ArrayList();
        }

        public static TL_messages_stickerSet TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_messages_stickerSet.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_messages_stickerSet", Integer.valueOf(arg2)));
            }

            TL_messages_stickerSet v2 = new TL_messages_stickerSet();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.set = StickerSet.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                TL_stickerPack v5 = TL_stickerPack.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.packs.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.documents.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_messages_stickerSet.constructor);
            this.set.serializeToStream(arg6);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.packs.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.packs.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.documents.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.documents.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_messages_stickerSetInstallResultArchive extends messages_StickerSetInstallResult {
        public static int constructor = 904138920;

        static {
        }

        public TL_messages_stickerSetInstallResultArchive() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                StickerSetCovered v2 = StickerSetCovered.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sets.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_stickerSetInstallResultArchive.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.sets.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sets.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_stickerSetInstallResultSuccess extends messages_StickerSetInstallResult {
        public static int constructor = 946083368;

        static {
        }

        public TL_messages_stickerSetInstallResultSuccess() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_stickerSetInstallResultSuccess.constructor);
        }
    }

    public class TL_messages_stickers extends messages_Stickers {
        public static int constructor = -463889475;
        public int hash;
        public ArrayList stickers;

        static {
        }

        public TL_messages_stickers() {
            super();
            this.stickers = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.hash = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                Document v2 = Document.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.stickers.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_messages_stickers.constructor);
            arg4.writeInt32(this.hash);
            arg4.writeInt32(481674261);
            int v0 = this.stickers.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.stickers.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_messages_stickersNotModified extends messages_Stickers {
        public static int constructor = -244016606;

        static {
        }

        public TL_messages_stickersNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_stickersNotModified.constructor);
        }
    }

    public class TL_messages_toggleChatAdmins extends TLObject {
        public int chat_id;
        public static int constructor = -326379039;
        public boolean enabled;

        static {
        }

        public TL_messages_toggleChatAdmins() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_toggleChatAdmins.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeBool(this.enabled);
        }
    }

    public class TL_messages_toggleDialogPin extends TLObject {
        public static int constructor = -1489903017;
        public int flags;
        public InputDialogPeer peer;
        public boolean pinned;

        static {
        }

        public TL_messages_toggleDialogPin() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_toggleDialogPin.constructor);
            int v0 = this.pinned ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_messages_uninstallStickerSet extends TLObject {
        public static int constructor = -110209570;
        public InputStickerSet stickerset;

        static {
        }

        public TL_messages_uninstallStickerSet() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_uninstallStickerSet.constructor);
            this.stickerset.serializeToStream(arg2);
        }
    }

    public class TL_messages_uploadEncryptedFile extends TLObject {
        public static int constructor = 1347929239;
        public InputEncryptedFile file;
        public TL_inputEncryptedChat peer;

        static {
        }

        public TL_messages_uploadEncryptedFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return EncryptedFile.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_uploadEncryptedFile.constructor);
            this.peer.serializeToStream(arg2);
            this.file.serializeToStream(arg2);
        }
    }

    public class TL_messages_uploadMedia extends TLObject {
        public static int constructor = 1369162417;
        public InputMedia media;
        public InputPeer peer;

        static {
        }

        public TL_messages_uploadMedia() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return MessageMedia.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_messages_uploadMedia.constructor);
            this.peer.serializeToStream(arg2);
            this.media.serializeToStream(arg2);
        }
    }

    public class TL_nearestDc extends TLObject {
        public static int constructor = -1910892683;
        public String country;
        public int nearest_dc;
        public int this_dc;

        static {
        }

        public TL_nearestDc() {
            super();
        }

        public static TL_nearestDc TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_nearestDc.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_nearestDc", Integer.valueOf(arg2)));
            }

            TL_nearestDc v2 = new TL_nearestDc();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.country = arg2.readString(arg3);
            this.this_dc = arg2.readInt32(arg3);
            this.nearest_dc = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_nearestDc.constructor);
            arg2.writeString(this.country);
            arg2.writeInt32(this.this_dc);
            arg2.writeInt32(this.nearest_dc);
        }
    }

    public class TL_notifyChats extends NotifyPeer {
        public static int constructor = -1073230141;

        static {
        }

        public TL_notifyChats() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_notifyChats.constructor);
        }
    }

    public class TL_notifyPeer extends NotifyPeer {
        public static int constructor = -1613493288;

        static {
        }

        public TL_notifyPeer() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_notifyPeer.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_notifyUsers extends NotifyPeer {
        public static int constructor = -1261946036;

        static {
        }

        public TL_notifyUsers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_notifyUsers.constructor);
        }
    }

    public class TL_null extends TLObject {
        public static int constructor = 1450380236;

        static {
        }

        public TL_null() {
            super();
        }

        public static TL_null TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_null.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_null", Integer.valueOf(arg2)));
            }

            TL_null v2 = new TL_null();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_null.constructor);
        }
    }

    public class TL_pageBlockAnchor extends PageBlock {
        public static int constructor = -837994576;

        static {
        }

        public TL_pageBlockAnchor() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.name = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockAnchor.constructor);
            arg2.writeString(this.name);
        }
    }

    public class TL_pageBlockAudio extends PageBlock {
        public static int constructor = 834148991;

        static {
        }

        public TL_pageBlockAudio() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.audio_id = arg3.readInt64(arg4);
            this.caption = RichText.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_pageBlockAudio.constructor);
            arg3.writeInt64(this.audio_id);
            this.caption.serializeToStream(arg3);
        }
    }

    public class TL_pageBlockAuthorDate extends PageBlock {
        public RichText author;
        public static int constructor = -1162877472;

        static {
        }

        public TL_pageBlockAuthorDate() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.author = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.published_date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockAuthorDate.constructor);
            this.author.serializeToStream(arg2);
            arg2.writeInt32(this.published_date);
        }
    }

    public class TL_pageBlockAuthorDate_layer60 extends TL_pageBlockAuthorDate {
        public static int constructor = 1029399794;

        static {
        }

        public TL_pageBlockAuthorDate_layer60() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            String v0 = arg3.readString(arg4);
            this.author = new TL_textPlain();
            this.author.text = v0;
            this.published_date = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockAuthorDate_layer60.constructor);
            arg2.writeString(this.author.text);
            arg2.writeInt32(this.published_date);
        }
    }

    public class TL_pageBlockBlockquote extends PageBlock {
        public static int constructor = 641563686;

        static {
        }

        public TL_pageBlockBlockquote() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.caption = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockBlockquote.constructor);
            this.text.serializeToStream(arg2);
            this.caption.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockChannel extends PageBlock {
        public static int constructor = -283684427;

        static {
        }

        public TL_pageBlockChannel() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel = Chat.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockChannel.constructor);
            this.channel.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockCollage extends PageBlock {
        public static int constructor = 145955919;
        public ArrayList items;

        static {
        }

        public TL_pageBlockCollage() {
            super();
            this.items = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PageBlock v2 = PageBlock.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.items.add(v2);
                ++v1;
            }

            this.caption = RichText.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_pageBlockCollage.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.items.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.items.get(v1).serializeToStream(arg4);
            }

            this.caption.serializeToStream(arg4);
        }
    }

    public class TL_pageBlockCover extends PageBlock {
        public static int constructor = 972174080;

        static {
        }

        public TL_pageBlockCover() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.cover = PageBlock.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockCover.constructor);
            this.cover.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockDivider extends PageBlock {
        public static int constructor = -618614392;

        static {
        }

        public TL_pageBlockDivider() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockDivider.constructor);
        }
    }

    public class TL_pageBlockEmbed extends PageBlock {
        public static int constructor = -840826671;

        static {
        }

        public TL_pageBlockEmbed() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.full_width = v0;
            if((this.flags & 8) != 0) {
            }
            else {
                v1 = false;
            }

            this.allow_scrolling = v1;
            if((this.flags & 2) != 0) {
                this.url = arg4.readString(arg5);
            }

            if((this.flags & 4) != 0) {
                this.html = arg4.readString(arg5);
            }

            if((this.flags & 16) != 0) {
                this.poster_photo_id = arg4.readInt64(arg5);
            }

            this.w = arg4.readInt32(arg5);
            this.h = arg4.readInt32(arg5);
            this.caption = RichText.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_pageBlockEmbed.constructor);
            int v0 = this.full_width ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.allow_scrolling ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            if((this.flags & 2) != 0) {
                arg3.writeString(this.url);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.html);
            }

            if((this.flags & 16) != 0) {
                arg3.writeInt64(this.poster_photo_id);
            }

            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
            this.caption.serializeToStream(arg3);
        }
    }

    public class TL_pageBlockEmbedPost extends PageBlock {
        public String author;
        public static int constructor = 690781161;

        static {
        }

        public TL_pageBlockEmbedPost() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.url = arg5.readString(arg6);
            this.webpage_id = arg5.readInt64(arg6);
            this.author_photo_id = arg5.readInt64(arg6);
            this.author = arg5.readString(arg6);
            this.date = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PageBlock v2 = PageBlock.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.blocks.add(v2);
                ++v1;
            }

            this.caption = RichText.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_pageBlockEmbedPost.constructor);
            arg4.writeString(this.url);
            arg4.writeInt64(this.webpage_id);
            arg4.writeInt64(this.author_photo_id);
            arg4.writeString(this.author);
            arg4.writeInt32(this.date);
            arg4.writeInt32(481674261);
            int v0 = this.blocks.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.blocks.get(v1).serializeToStream(arg4);
            }

            this.caption.serializeToStream(arg4);
        }
    }

    public class TL_pageBlockEmbed_layer60 extends TL_pageBlockEmbed {
        public static int constructor = -650782469;

        static {
        }

        public TL_pageBlockEmbed_layer60() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.full_width = v0;
            if((this.flags & 8) != 0) {
            }
            else {
                v1 = false;
            }

            this.allow_scrolling = v1;
            if((this.flags & 2) != 0) {
                this.url = arg4.readString(arg5);
            }

            if((this.flags & 4) != 0) {
                this.html = arg4.readString(arg5);
            }

            this.w = arg4.readInt32(arg5);
            this.h = arg4.readInt32(arg5);
            this.caption = RichText.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockEmbed_layer60.constructor);
            int v0 = this.full_width ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.allow_scrolling ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            if((this.flags & 2) != 0) {
                arg2.writeString(this.url);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.html);
            }

            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            this.caption.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockFooter extends PageBlock {
        public static int constructor = 1216809369;

        static {
        }

        public TL_pageBlockFooter() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockFooter.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockHeader extends PageBlock {
        public static int constructor = -1076861716;

        static {
        }

        public TL_pageBlockHeader() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockHeader.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockList extends PageBlock {
        public static int constructor = 978896884;
        public ArrayList items;

        static {
        }

        public TL_pageBlockList() {
            super();
            this.items = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.ordered = arg5.readBool(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                RichText v2 = RichText.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.items.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_pageBlockList.constructor);
            arg4.writeBool(this.ordered);
            arg4.writeInt32(481674261);
            int v0 = this.items.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.items.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_pageBlockParagraph extends PageBlock {
        public static int constructor = 1182402406;

        static {
        }

        public TL_pageBlockParagraph() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockParagraph.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockPhoto extends PageBlock {
        public static int constructor = -372860542;

        static {
        }

        public TL_pageBlockPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.photo_id = arg3.readInt64(arg4);
            this.caption = RichText.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_pageBlockPhoto.constructor);
            arg3.writeInt64(this.photo_id);
            this.caption.serializeToStream(arg3);
        }
    }

    public class TL_pageBlockPreformatted extends PageBlock {
        public static int constructor = -1066346178;

        static {
        }

        public TL_pageBlockPreformatted() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.language = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockPreformatted.constructor);
            this.text.serializeToStream(arg2);
            arg2.writeString(this.language);
        }
    }

    public class TL_pageBlockPullquote extends PageBlock {
        public static int constructor = 1329878739;

        static {
        }

        public TL_pageBlockPullquote() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.caption = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockPullquote.constructor);
            this.text.serializeToStream(arg2);
            this.caption.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockSlideshow extends PageBlock {
        public static int constructor = 319588707;
        public ArrayList items;

        static {
        }

        public TL_pageBlockSlideshow() {
            super();
            this.items = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PageBlock v2 = PageBlock.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.items.add(v2);
                ++v1;
            }

            this.caption = RichText.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_pageBlockSlideshow.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.items.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.items.get(v1).serializeToStream(arg4);
            }

            this.caption.serializeToStream(arg4);
        }
    }

    public class TL_pageBlockSubheader extends PageBlock {
        public static int constructor = -248793375;

        static {
        }

        public TL_pageBlockSubheader() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockSubheader.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockSubtitle extends PageBlock {
        public static int constructor = -1879401953;

        static {
        }

        public TL_pageBlockSubtitle() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockSubtitle.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockTitle extends PageBlock {
        public static int constructor = 1890305021;

        static {
        }

        public TL_pageBlockTitle() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockTitle.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_pageBlockUnsupported extends PageBlock {
        public static int constructor = 324435594;

        static {
        }

        public TL_pageBlockUnsupported() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_pageBlockUnsupported.constructor);
        }
    }

    public class TL_pageBlockVideo extends PageBlock {
        public static int constructor = -640214938;

        static {
        }

        public TL_pageBlockVideo() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.autoplay = v0;
            if((this.flags & 2) != 0) {
            }
            else {
                v1 = false;
            }

            this.loop = v1;
            this.video_id = arg4.readInt64(arg5);
            this.caption = RichText.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_pageBlockVideo.constructor);
            int v0 = this.autoplay ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.loop ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.video_id);
            this.caption.serializeToStream(arg3);
        }
    }

    public class TL_pageFull extends Page {
        public static int constructor = 1433323434;

        static {
        }

        public TL_pageFull() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                PageBlock v5 = PageBlock.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocks.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5_1 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.photos.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.documents.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_pageFull.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocks.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocks.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.photos.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.documents.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.documents.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_pageFull_layer67 extends TL_pageFull {
        public static int constructor = -677274263;

        static {
        }

        public TL_pageFull_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                PageBlock v5 = PageBlock.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocks.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5_1 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.photos.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.documents.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_pageFull_layer67.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocks.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocks.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.photos.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.documents.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.documents.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_pagePart extends Page {
        public static int constructor = -1908433218;

        static {
        }

        public TL_pagePart() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                PageBlock v5 = PageBlock.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocks.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5_1 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.photos.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.documents.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_pagePart.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocks.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocks.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.photos.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.documents.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.documents.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_pagePart_layer67 extends TL_pagePart {
        public static int constructor = -1913754556;

        static {
        }

        public TL_pagePart_layer67() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                PageBlock v5 = PageBlock.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.blocks.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5_1 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.photos.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Document v1_1 = Document.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.documents.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_pagePart_layer67.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.blocks.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.blocks.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.photos.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.documents.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.documents.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow extends PasswordKdfAlgo {
        public static int constructor = 982592842;
        public int g;
        public byte[] p;
        public byte[] salt1;
        public byte[] salt2;

        static {
        }

        public TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.salt1 = arg2.readByteArray(arg3);
            this.salt2 = arg2.readByteArray(arg3);
            this.g = arg2.readInt32(arg3);
            this.p = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.constructor);
            arg2.writeByteArray(this.salt1);
            arg2.writeByteArray(this.salt2);
            arg2.writeInt32(this.g);
            arg2.writeByteArray(this.p);
        }
    }

    public class TL_passwordKdfAlgoUnknown extends PasswordKdfAlgo {
        public static int constructor = -732254058;

        static {
        }

        public TL_passwordKdfAlgoUnknown() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_passwordKdfAlgoUnknown.constructor);
        }
    }

    public class TL_paymentRequestedInfo extends TLObject {
        public static int constructor = -1868808300;
        public String email;
        public int flags;
        public String name;
        public String phone;
        public TL_postAddress shipping_address;

        static {
        }

        public TL_paymentRequestedInfo() {
            super();
        }

        public static TL_paymentRequestedInfo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_paymentRequestedInfo.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_paymentRequestedInfo", Integer.valueOf(arg2)));
            }

            TL_paymentRequestedInfo v2 = new TL_paymentRequestedInfo();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.name = arg2.readString(arg3);
            }

            if((this.flags & 2) != 0) {
                this.phone = arg2.readString(arg3);
            }

            if((this.flags & 4) != 0) {
                this.email = arg2.readString(arg3);
            }

            if((this.flags & 8) != 0) {
                this.shipping_address = TL_postAddress.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_paymentRequestedInfo.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.name);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.phone);
            }

            if((this.flags & 4) != 0) {
                arg2.writeString(this.email);
            }

            if((this.flags & 8) != 0) {
                this.shipping_address.serializeToStream(arg2);
            }
        }
    }

    public class TL_paymentSavedCredentialsCard extends TLObject {
        public static int constructor = -842892769;
        public String id;
        public String title;

        static {
        }

        public TL_paymentSavedCredentialsCard() {
            super();
        }

        public static TL_paymentSavedCredentialsCard TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_paymentSavedCredentialsCard.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_paymentSavedCredentialsCard", Integer.valueOf(arg2)));
            }

            TL_paymentSavedCredentialsCard v2 = new TL_paymentSavedCredentialsCard();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readString(arg3);
            this.title = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_paymentSavedCredentialsCard.constructor);
            arg2.writeString(this.id);
            arg2.writeString(this.title);
        }
    }

    public class TL_payments_clearSavedInfo extends TLObject {
        public static int constructor = -667062079;
        public boolean credentials;
        public int flags;
        public boolean info;

        static {
        }

        public TL_payments_clearSavedInfo() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_clearSavedInfo.constructor);
            int v0 = this.credentials ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.info ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_payments_getPaymentForm extends TLObject {
        public static int constructor = -1712285883;
        public int msg_id;

        static {
        }

        public TL_payments_getPaymentForm() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_payments_paymentForm.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_getPaymentForm.constructor);
            arg2.writeInt32(this.msg_id);
        }
    }

    public class TL_payments_getPaymentReceipt extends TLObject {
        public static int constructor = -1601001088;
        public int msg_id;

        static {
        }

        public TL_payments_getPaymentReceipt() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_payments_paymentReceipt.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_getPaymentReceipt.constructor);
            arg2.writeInt32(this.msg_id);
        }
    }

    public class TL_payments_getSavedInfo extends TLObject {
        public static int constructor = 578650699;

        static {
        }

        public TL_payments_getSavedInfo() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_payments_savedInfo.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_getSavedInfo.constructor);
        }
    }

    public class TL_payments_paymentForm extends TLObject {
        public int bot_id;
        public boolean can_save_credentials;
        public static int constructor = 1062645411;
        public int flags;
        public TL_invoice invoice;
        public TL_dataJSON native_params;
        public String native_provider;
        public boolean password_missing;
        public int provider_id;
        public TL_paymentSavedCredentialsCard saved_credentials;
        public TL_paymentRequestedInfo saved_info;
        public String url;
        public ArrayList users;

        static {
        }

        public TL_payments_paymentForm() {
            super();
            this.users = new ArrayList();
        }

        public static TL_payments_paymentForm TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_payments_paymentForm.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_payments_paymentForm", Integer.valueOf(arg2)));
            }

            TL_payments_paymentForm v2 = new TL_payments_paymentForm();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 4) != 0 ? true : false;
            this.can_save_credentials = v0;
            v0 = (this.flags & 8) != 0 ? true : false;
            this.password_missing = v0;
            this.bot_id = arg5.readInt32(arg6);
            this.invoice = TL_invoice.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.provider_id = arg5.readInt32(arg6);
            this.url = arg5.readString(arg6);
            if((this.flags & 16) != 0) {
                this.native_provider = arg5.readString(arg6);
            }

            if((this.flags & 16) != 0) {
                this.native_params = TL_dataJSON.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 1) != 0) {
                this.saved_info = TL_paymentRequestedInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2) != 0) {
                this.saved_credentials = TL_paymentSavedCredentialsCard.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v1 < v0_1) {
                User v2 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_payments_paymentForm.constructor);
            int v0 = this.can_save_credentials ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.password_missing ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.bot_id);
            this.invoice.serializeToStream(arg4);
            arg4.writeInt32(this.provider_id);
            arg4.writeString(this.url);
            if((this.flags & 16) != 0) {
                arg4.writeString(this.native_provider);
            }

            if((this.flags & 16) != 0) {
                this.native_params.serializeToStream(arg4);
            }

            if((this.flags & 1) != 0) {
                this.saved_info.serializeToStream(arg4);
            }

            if((this.flags & 2) != 0) {
                this.saved_credentials.serializeToStream(arg4);
            }

            arg4.writeInt32(481674261);
            v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_payments_paymentReceipt extends TLObject {
        public int bot_id;
        public static int constructor = 1342771681;
        public String credentials_title;
        public String currency;
        public int date;
        public int flags;
        public TL_paymentRequestedInfo info;
        public TL_invoice invoice;
        public int provider_id;
        public TL_shippingOption shipping;
        public long total_amount;
        public ArrayList users;

        static {
        }

        public TL_payments_paymentReceipt() {
            super();
            this.users = new ArrayList();
        }

        public static TL_payments_paymentReceipt TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_payments_paymentReceipt.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_payments_paymentReceipt", Integer.valueOf(arg2)));
            }

            TL_payments_paymentReceipt v2 = new TL_payments_paymentReceipt();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            this.bot_id = arg5.readInt32(arg6);
            this.invoice = TL_invoice.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.provider_id = arg5.readInt32(arg6);
            if((this.flags & 1) != 0) {
                this.info = TL_paymentRequestedInfo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2) != 0) {
                this.shipping = TL_shippingOption.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            this.currency = arg5.readString(arg6);
            this.total_amount = arg5.readInt64(arg6);
            this.credentials_title = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v3 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v3 < v0) {
                User v1 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.users.add(v1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_payments_paymentReceipt.constructor);
            arg4.writeInt32(this.flags);
            arg4.writeInt32(this.date);
            arg4.writeInt32(this.bot_id);
            this.invoice.serializeToStream(arg4);
            arg4.writeInt32(this.provider_id);
            if((this.flags & 1) != 0) {
                this.info.serializeToStream(arg4);
            }

            if((this.flags & 2) != 0) {
                this.shipping.serializeToStream(arg4);
            }

            arg4.writeString(this.currency);
            arg4.writeInt64(this.total_amount);
            arg4.writeString(this.credentials_title);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_payments_paymentResult extends payments_PaymentResult {
        public static int constructor = 1314881805;

        static {
        }

        public TL_payments_paymentResult() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.updates = Updates.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_paymentResult.constructor);
            this.updates.serializeToStream(arg2);
        }
    }

    public class TL_payments_paymentVerficationNeeded extends payments_PaymentResult {
        public static int constructor = 1800845601;

        static {
        }

        public TL_payments_paymentVerficationNeeded() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.url = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_paymentVerficationNeeded.constructor);
            arg2.writeString(this.url);
        }
    }

    public class TL_payments_savedInfo extends TLObject {
        public static int constructor = -74456004;
        public int flags;
        public boolean has_saved_credentials;
        public TL_paymentRequestedInfo saved_info;

        static {
        }

        public TL_payments_savedInfo() {
            super();
        }

        public static TL_payments_savedInfo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_payments_savedInfo.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_payments_savedInfo", Integer.valueOf(arg2)));
            }

            TL_payments_savedInfo v2 = new TL_payments_savedInfo();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.has_saved_credentials = v0;
            if((this.flags & 1) != 0) {
                this.saved_info = TL_paymentRequestedInfo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_savedInfo.constructor);
            int v0 = this.has_saved_credentials ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                this.saved_info.serializeToStream(arg2);
            }
        }
    }

    public class TL_payments_sendPaymentForm extends TLObject {
        public static int constructor = 730364339;
        public InputPaymentCredentials credentials;
        public int flags;
        public int msg_id;
        public String requested_info_id;
        public String shipping_option_id;

        static {
        }

        public TL_payments_sendPaymentForm() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return payments_PaymentResult.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_sendPaymentForm.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.msg_id);
            if((this.flags & 1) != 0) {
                arg2.writeString(this.requested_info_id);
            }

            if((this.flags & 2) != 0) {
                arg2.writeString(this.shipping_option_id);
            }

            this.credentials.serializeToStream(arg2);
        }
    }

    public class TL_payments_validateRequestedInfo extends TLObject {
        public static int constructor = 1997180532;
        public int flags;
        public TL_paymentRequestedInfo info;
        public int msg_id;
        public boolean save;

        static {
        }

        public TL_payments_validateRequestedInfo() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_payments_validatedRequestedInfo.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_payments_validateRequestedInfo.constructor);
            int v0 = this.save ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.msg_id);
            this.info.serializeToStream(arg2);
        }
    }

    public class TL_payments_validatedRequestedInfo extends TLObject {
        public static int constructor = -784000893;
        public int flags;
        public String id;
        public ArrayList shipping_options;

        static {
        }

        public TL_payments_validatedRequestedInfo() {
            super();
            this.shipping_options = new ArrayList();
        }

        public static TL_payments_validatedRequestedInfo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_payments_validatedRequestedInfo.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_payments_validatedRequestedInfo", Integer.valueOf(arg2)));
            }

            TL_payments_validatedRequestedInfo v2 = new TL_payments_validatedRequestedInfo();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            if((this.flags & 1) != 0) {
                this.id = arg5.readString(arg6);
            }

            if((this.flags & 2) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v3 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v3 < v0) {
                        TL_shippingOption v1 = TL_shippingOption.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.shipping_options.add(v1);
                            ++v3;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_payments_validatedRequestedInfo.constructor);
            arg4.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg4.writeString(this.id);
            }

            if((this.flags & 2) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.shipping_options.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.shipping_options.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_peerChannel extends Peer {
        public static int constructor = -1109531342;

        static {
        }

        public TL_peerChannel() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.channel_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerChannel.constructor);
            arg2.writeInt32(this.channel_id);
        }
    }

    public class TL_peerChat extends Peer {
        public static int constructor = -1160714821;

        static {
        }

        public TL_peerChat() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.chat_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerChat.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_peerNotifySettings extends PeerNotifySettings {
        public static int constructor = -1353671392;

        static {
        }

        public TL_peerNotifySettings() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.show_previews = arg2.readBool(arg3);
            }

            if((this.flags & 2) != 0) {
                this.silent = arg2.readBool(arg3);
            }

            if((this.flags & 4) != 0) {
                this.mute_until = arg2.readInt32(arg3);
            }

            if((this.flags & 8) != 0) {
                this.sound = arg2.readString(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerNotifySettings.constructor);
            arg2.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg2.writeBool(this.show_previews);
            }

            if((this.flags & 2) != 0) {
                arg2.writeBool(this.silent);
            }

            if((this.flags & 4) != 0) {
                arg2.writeInt32(this.mute_until);
            }

            if((this.flags & 8) != 0) {
                arg2.writeString(this.sound);
            }
        }
    }

    public class TL_peerNotifySettingsEmpty_layer77 extends PeerNotifySettings {
        public static int constructor = 1889961234;

        static {
        }

        public TL_peerNotifySettingsEmpty_layer77() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerNotifySettingsEmpty_layer77.constructor);
        }
    }

    public class TL_peerNotifySettings_layer47 extends TL_peerNotifySettings {
        public static int constructor = -1923214866;

        static {
        }

        public TL_peerNotifySettings_layer47() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.mute_until = arg2.readInt32(arg3);
            this.sound = arg2.readString(arg3);
            this.show_previews = arg2.readBool(arg3);
            this.events_mask = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerNotifySettings_layer47.constructor);
            arg2.writeInt32(this.mute_until);
            arg2.writeString(this.sound);
            arg2.writeBool(this.show_previews);
            arg2.writeInt32(this.events_mask);
        }
    }

    public class TL_peerNotifySettings_layer77 extends TL_peerNotifySettings {
        public static int constructor = -1697798976;

        static {
        }

        public TL_peerNotifySettings_layer77() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.show_previews = v0;
            if((this.flags & 2) != 0) {
            }
            else {
                v1 = false;
            }

            this.silent = v1;
            this.mute_until = arg4.readInt32(arg5);
            this.sound = arg4.readString(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerNotifySettings_layer77.constructor);
            int v0 = this.show_previews ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.silent ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.mute_until);
            arg2.writeString(this.sound);
        }
    }

    public class TL_peerSettings extends TLObject {
        public static int constructor = -2122045747;
        public int flags;
        public boolean report_spam;

        static {
        }

        public TL_peerSettings() {
            super();
        }

        public static TL_peerSettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_peerSettings.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_peerSettings", Integer.valueOf(arg2)));
            }

            TL_peerSettings v2 = new TL_peerSettings();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.flags = arg1.readInt32(arg2);
            arg2 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                arg2 = false;
            }

            this.report_spam = arg2;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerSettings.constructor);
            int v0 = this.report_spam ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_peerUser extends Peer {
        public static int constructor = -1649296275;

        static {
        }

        public TL_peerUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.user_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_peerUser.constructor);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_phoneCall extends PhoneCall {
        public static int constructor = -1660057;

        static {
        }

        public TL_phoneCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            this.admin_id = arg5.readInt32(arg6);
            this.participant_id = arg5.readInt32(arg6);
            this.g_a_or_b = arg5.readByteArray(arg6);
            this.key_fingerprint = arg5.readInt64(arg6);
            this.protocol = TL_phoneCallProtocol.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.connection = TL_phoneConnection.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_phoneConnection v2 = TL_phoneConnection.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.alternative_connections.add(v2);
                ++v1;
            }

            this.start_date = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_phoneCall.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeInt32(this.admin_id);
            arg4.writeInt32(this.participant_id);
            arg4.writeByteArray(this.g_a_or_b);
            arg4.writeInt64(this.key_fingerprint);
            this.protocol.serializeToStream(arg4);
            this.connection.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.alternative_connections.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.alternative_connections.get(v1).serializeToStream(arg4);
            }

            arg4.writeInt32(this.start_date);
        }
    }

    public class TL_phoneCallAccepted extends PhoneCall {
        public static int constructor = 1828732223;

        static {
        }

        public TL_phoneCallAccepted() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_b = arg3.readByteArray(arg4);
            this.protocol = TL_phoneCallProtocol.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneCallAccepted.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_b);
            this.protocol.serializeToStream(arg3);
        }
    }

    public class TL_phoneCallDiscardReasonAllowGroupCall extends PhoneCallDiscardReason {
        public static int constructor = -1344096199;

        static {
        }

        public TL_phoneCallDiscardReasonAllowGroupCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.encrypted_key = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallDiscardReasonAllowGroupCall.constructor);
            arg2.writeByteArray(this.encrypted_key);
        }
    }

    public class TL_phoneCallDiscardReasonBusy extends PhoneCallDiscardReason {
        public static int constructor = -84416311;

        static {
        }

        public TL_phoneCallDiscardReasonBusy() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallDiscardReasonBusy.constructor);
        }
    }

    public class TL_phoneCallDiscardReasonDisconnect extends PhoneCallDiscardReason {
        public static int constructor = -527056480;

        static {
        }

        public TL_phoneCallDiscardReasonDisconnect() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallDiscardReasonDisconnect.constructor);
        }
    }

    public class TL_phoneCallDiscardReasonHangup extends PhoneCallDiscardReason {
        public static int constructor = 1471006352;

        static {
        }

        public TL_phoneCallDiscardReasonHangup() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallDiscardReasonHangup.constructor);
        }
    }

    public class TL_phoneCallDiscardReasonMissed extends PhoneCallDiscardReason {
        public static int constructor = -2048646399;

        static {
        }

        public TL_phoneCallDiscardReasonMissed() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallDiscardReasonMissed.constructor);
        }
    }

    public class TL_phoneCallDiscarded extends PhoneCall {
        public static int constructor = 1355435489;

        static {
        }

        public TL_phoneCallDiscarded() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 4) != 0 ? true : false;
            this.need_rating = v0;
            if((this.flags & 8) != 0) {
                v1 = true;
            }

            this.need_debug = v1;
            this.id = arg4.readInt64(arg5);
            if((this.flags & 1) != 0) {
                this.reason = PhoneCallDiscardReason.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            if((this.flags & 2) != 0) {
                this.duration = arg4.readInt32(arg5);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneCallDiscarded.constructor);
            int v0 = this.need_rating ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.need_debug ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            if((this.flags & 1) != 0) {
                this.reason.serializeToStream(arg3);
            }

            if((this.flags & 2) != 0) {
                arg3.writeInt32(this.duration);
            }
        }
    }

    public class TL_phoneCallEmpty extends PhoneCall {
        public static int constructor = 1399245077;

        static {
        }

        public TL_phoneCallEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneCallEmpty.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_phoneCallProtocol extends TLObject {
        public static int constructor = -1564789301;
        public int flags;
        public int max_layer;
        public int min_layer;
        public boolean udp_p2p;
        public boolean udp_reflector;

        static {
        }

        public TL_phoneCallProtocol() {
            super();
        }

        public static TL_phoneCallProtocol TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_phoneCallProtocol.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_phoneCallProtocol", Integer.valueOf(arg2)));
            }

            TL_phoneCallProtocol v2 = new TL_phoneCallProtocol();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.udp_p2p = v0;
            if((this.flags & 2) != 0) {
            }
            else {
                v1 = false;
            }

            this.udp_reflector = v1;
            this.min_layer = arg4.readInt32(arg5);
            this.max_layer = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phoneCallProtocol.constructor);
            int v0 = this.udp_p2p ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.udp_reflector ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.min_layer);
            arg2.writeInt32(this.max_layer);
        }
    }

    public class TL_phoneCallRequested extends PhoneCall {
        public static int constructor = -2089411356;

        static {
        }

        public TL_phoneCallRequested() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.g_a_hash = arg3.readByteArray(arg4);
            this.protocol = TL_phoneCallProtocol.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneCallRequested.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            arg3.writeByteArray(this.g_a_hash);
            this.protocol.serializeToStream(arg3);
        }
    }

    public class TL_phoneCallWaiting extends PhoneCall {
        public static int constructor = 462375633;

        static {
        }

        public TL_phoneCallWaiting() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.admin_id = arg3.readInt32(arg4);
            this.participant_id = arg3.readInt32(arg4);
            this.protocol = TL_phoneCallProtocol.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            if((this.flags & 1) != 0) {
                this.receive_date = arg3.readInt32(arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneCallWaiting.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.admin_id);
            arg3.writeInt32(this.participant_id);
            this.protocol.serializeToStream(arg3);
            if((this.flags & 1) != 0) {
                arg3.writeInt32(this.receive_date);
            }
        }
    }

    public class TL_phoneConnection extends TLObject {
        public static int constructor = -1655957568;
        public long id;
        public String ip;
        public String ipv6;
        public byte[] peer_tag;
        public int port;

        static {
        }

        public TL_phoneConnection() {
            super();
        }

        public static TL_phoneConnection TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_phoneConnection.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_phoneConnection", Integer.valueOf(arg2)));
            }

            TL_phoneConnection v2 = new TL_phoneConnection();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.ip = arg3.readString(arg4);
            this.ipv6 = arg3.readString(arg4);
            this.port = arg3.readInt32(arg4);
            this.peer_tag = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phoneConnection.constructor);
            arg3.writeInt64(this.id);
            arg3.writeString(this.ip);
            arg3.writeString(this.ipv6);
            arg3.writeInt32(this.port);
            arg3.writeByteArray(this.peer_tag);
        }
    }

    public class TL_phone_acceptCall extends TLObject {
        public static int constructor = 1003664544;
        public byte[] g_b;
        public TL_inputPhoneCall peer;
        public TL_phoneCallProtocol protocol;

        static {
        }

        public TL_phone_acceptCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_phoneCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_acceptCall.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeByteArray(this.g_b);
            this.protocol.serializeToStream(arg2);
        }
    }

    public class TL_phone_confirmCall extends TLObject {
        public static int constructor = 788404002;
        public byte[] g_a;
        public long key_fingerprint;
        public TL_inputPhoneCall peer;
        public TL_phoneCallProtocol protocol;

        static {
        }

        public TL_phone_confirmCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_phoneCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phone_confirmCall.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeByteArray(this.g_a);
            arg3.writeInt64(this.key_fingerprint);
            this.protocol.serializeToStream(arg3);
        }
    }

    public class TL_phone_createGroupCall extends TLObject {
        public InputChannel channel;
        public static int constructor = -2063276618;
        public byte[] encryption_key;
        public int flags;
        public long key_fingerprint;
        public TL_phoneCallProtocol protocol;
        public int random_id;
        public byte[] streams;

        static {
        }

        public TL_phone_createGroupCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phone_createGroupCall.constructor);
            arg3.writeInt32(this.flags);
            this.channel.serializeToStream(arg3);
            arg3.writeInt32(this.random_id);
            this.protocol.serializeToStream(arg3);
            if((this.flags & 1) != 0) {
                arg3.writeByteArray(this.encryption_key);
            }

            arg3.writeInt64(this.key_fingerprint);
            arg3.writeByteArray(this.streams);
        }
    }

    public class TL_phone_discardCall extends TLObject {
        public long connection_id;
        public static int constructor = 2027164582;
        public int duration;
        public TL_inputPhoneCall peer;
        public PhoneCallDiscardReason reason;

        static {
        }

        public TL_phone_discardCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phone_discardCall.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeInt32(this.duration);
            this.reason.serializeToStream(arg3);
            arg3.writeInt64(this.connection_id);
        }
    }

    public class TL_phone_discardGroupCall extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = 2054648117;

        static {
        }

        public TL_phone_discardGroupCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_discardGroupCall.constructor);
            this.call.serializeToStream(arg2);
        }
    }

    public class TL_phone_editGroupCallMember extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = 1181064164;
        public int flags;
        public boolean kicked;
        public boolean readonly;
        public byte[] streams;
        public InputUser user_id;

        static {
        }

        public TL_phone_editGroupCallMember() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_editGroupCallMember.constructor);
            int v0 = this.readonly ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.kicked ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.call.serializeToStream(arg2);
            this.user_id.serializeToStream(arg2);
            if((this.flags & 4) != 0) {
                arg2.writeByteArray(this.streams);
            }
        }
    }

    public class TL_phone_getCall extends TLObject {
        public static int constructor = -1965338759;
        public TL_inputPhoneCall peer;

        static {
        }

        public TL_phone_getCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_phoneCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_getCall.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_phone_getCallConfig extends TLObject {
        public static int constructor = 1430593449;

        static {
        }

        public TL_phone_getCallConfig() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_dataJSON.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_getCallConfig.constructor);
        }
    }

    public class TL_phone_getGroupCall extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = 209498135;

        static {
        }

        public TL_phone_getGroupCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_groupCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_getGroupCall.constructor);
            this.call.serializeToStream(arg2);
        }
    }

    public class TL_phone_groupCall extends TLObject {
        public GroupCall call;
        public ArrayList chats;
        public static int constructor = 1731723191;
        public ArrayList participants;
        public ArrayList users;

        static {
        }

        public TL_phone_groupCall() {
            super();
            this.participants = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static TL_phone_groupCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_phone_groupCall.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_phone_groupCall", Integer.valueOf(arg2)));
            }

            TL_phone_groupCall v2 = new TL_phone_groupCall();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.call = GroupCall.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                GroupCallParticipant v5 = GroupCallParticipant.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.participants.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_phone_groupCall.constructor);
            this.call.serializeToStream(arg6);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.participants.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.participants.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_phone_inviteGroupCallMembers extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = -862804260;
        public int flags;
        public boolean uninvite;
        public ArrayList users;

        static {
        }

        public TL_phone_inviteGroupCallMembers() {
            super();
            this.users = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_phone_inviteGroupCallMembers.constructor);
            int v0 = this.uninvite ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            this.call.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_phone_joinGroupCall extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = 165360343;
        public long key_fingerprint;
        public byte[] streams;

        static {
        }

        public TL_phone_joinGroupCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phone_joinGroupCall.constructor);
            this.call.serializeToStream(arg3);
            arg3.writeByteArray(this.streams);
            arg3.writeInt64(this.key_fingerprint);
        }
    }

    public class TL_phone_leaveGroupCall extends TLObject {
        public TL_inputGroupCall call;
        public static int constructor = 1625919071;

        static {
        }

        public TL_phone_leaveGroupCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_leaveGroupCall.constructor);
            this.call.serializeToStream(arg2);
        }
    }

    public class TL_phone_phoneCall extends TLObject {
        public static int constructor = -326966976;
        public PhoneCall phone_call;
        public ArrayList users;

        static {
        }

        public TL_phone_phoneCall() {
            super();
            this.users = new ArrayList();
        }

        public static TL_phone_phoneCall TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_phone_phoneCall.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_phone_phoneCall", Integer.valueOf(arg2)));
            }

            TL_phone_phoneCall v2 = new TL_phone_phoneCall();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.phone_call = PhoneCall.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                User v2 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_phone_phoneCall.constructor);
            this.phone_call.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_phone_receivedCall extends TLObject {
        public static int constructor = 399855457;
        public TL_inputPhoneCall peer;

        static {
        }

        public TL_phone_receivedCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_receivedCall.constructor);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_phone_requestCall extends TLObject {
        public static int constructor = 1536537556;
        public byte[] g_a_hash;
        public TL_phoneCallProtocol protocol;
        public int random_id;
        public InputUser user_id;

        static {
        }

        public TL_phone_requestCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_phoneCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_requestCall.constructor);
            this.user_id.serializeToStream(arg2);
            arg2.writeInt32(this.random_id);
            arg2.writeByteArray(this.g_a_hash);
            this.protocol.serializeToStream(arg2);
        }
    }

    public class TL_phone_saveCallDebug extends TLObject {
        public static int constructor = 662363518;
        public TL_dataJSON debug;
        public TL_inputPhoneCall peer;

        static {
        }

        public TL_phone_saveCallDebug() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_saveCallDebug.constructor);
            this.peer.serializeToStream(arg2);
            this.debug.serializeToStream(arg2);
        }
    }

    public class TL_phone_setCallRating extends TLObject {
        public String comment;
        public static int constructor = 475228724;
        public TL_inputPhoneCall peer;
        public int rating;

        static {
        }

        public TL_phone_setCallRating() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Updates.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_phone_setCallRating.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.rating);
            arg2.writeString(this.comment);
        }
    }

    public class TL_phone_upgradePhoneCall extends TLObject {
        public static int constructor = -1729901126;
        public byte[] encryption_key;
        public int flags;
        public long key_fingerprint;
        public TL_inputPhoneCall peer;
        public byte[] streams;

        static {
        }

        public TL_phone_upgradePhoneCall() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_phone_groupCall.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_phone_upgradePhoneCall.constructor);
            arg3.writeInt32(this.flags);
            this.peer.serializeToStream(arg3);
            if((this.flags & 1) != 0) {
                arg3.writeByteArray(this.encryption_key);
            }

            arg3.writeInt64(this.key_fingerprint);
            arg3.writeByteArray(this.streams);
        }
    }

    public class TL_photo extends Photo {
        public static int constructor = -1836524247;

        static {
        }

        public TL_photo() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.has_stickers = v0;
            this.id = arg6.readInt64(arg7);
            this.access_hash = arg6.readInt64(arg7);
            this.date = arg6.readInt32(arg7);
            int v0_1 = arg6.readInt32(arg7);
            if(v0_1 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg6.readInt32(arg7);
            while(v2 < v0_1) {
                PhotoSize v1 = PhotoSize.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
                if(v1 == null) {
                    return;
                }

                this.sizes.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photo.constructor);
            int v0 = this.has_stickers ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeInt32(481674261);
            v0 = this.sizes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sizes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photoCachedSize extends PhotoSize {
        public static int constructor = -374917894;

        static {
        }

        public TL_photoCachedSize() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = arg2.readString(arg3);
            this.location = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.bytes = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_photoCachedSize.constructor);
            arg2.writeString(this.type);
            this.location.serializeToStream(arg2);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeByteArray(this.bytes);
        }
    }

    public class TL_photoEmpty extends Photo {
        public static int constructor = 590459437;

        static {
        }

        public TL_photoEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_photoEmpty.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_photoSize extends PhotoSize {
        public static int constructor = 2009052699;

        static {
        }

        public TL_photoSize() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = arg2.readString(arg3);
            this.location = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.w = arg2.readInt32(arg3);
            this.h = arg2.readInt32(arg3);
            this.size = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_photoSize.constructor);
            arg2.writeString(this.type);
            this.location.serializeToStream(arg2);
            arg2.writeInt32(this.w);
            arg2.writeInt32(this.h);
            arg2.writeInt32(this.size);
        }
    }

    public class TL_photoSizeEmpty extends PhotoSize {
        public static int constructor = 236446268;

        static {
        }

        public TL_photoSizeEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.type = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_photoSizeEmpty.constructor);
            arg2.writeString(this.type);
        }
    }

    public class TL_photo_layer55 extends TL_photo {
        public static int constructor = -840088834;

        static {
        }

        public TL_photo_layer55() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.date = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PhotoSize v2 = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sizes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photo_layer55.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.date);
            arg4.writeInt32(481674261);
            int v0 = this.sizes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sizes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photo_old2 extends TL_photo {
        public static int constructor = -1014792074;

        static {
        }

        public TL_photo_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.user_id = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            this.geo = GeoPoint.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PhotoSize v2 = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sizes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photo_old2.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.user_id);
            arg4.writeInt32(this.date);
            this.geo.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.sizes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sizes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photo_old extends TL_photo {
        public static int constructor = 582313809;

        static {
        }

        public TL_photo_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt64(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.user_id = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            arg5.readString(arg6);
            this.geo = GeoPoint.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PhotoSize v2 = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sizes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photo_old.constructor);
            arg4.writeInt64(this.id);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.user_id);
            arg4.writeInt32(this.date);
            arg4.writeString("");
            this.geo.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.sizes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sizes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photos_deletePhotos extends TLObject {
        public static int constructor = -2016444625;
        public ArrayList id;

        static {
        }

        public TL_photos_deletePhotos() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg6, int arg7, boolean arg8) {
            Vector v7 = new Vector();
            int v0 = arg6.readInt32(arg8);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                v7.objects.add(Long.valueOf(arg6.readInt64(arg8)));
            }

            return ((TLObject)v7);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photos_deletePhotos.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.id.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photos_getUserPhotos extends TLObject {
        public static int constructor = -1848823128;
        public int limit;
        public long max_id;
        public int offset;
        public InputUser user_id;

        static {
        }

        public TL_photos_getUserPhotos() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return photos_Photos.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_photos_getUserPhotos.constructor);
            this.user_id.serializeToStream(arg3);
            arg3.writeInt32(this.offset);
            arg3.writeInt64(this.max_id);
            arg3.writeInt32(this.limit);
        }
    }

    public class TL_photos_photo extends TLObject {
        public static int constructor = 539045032;
        public Photo photo;
        public ArrayList users;

        static {
        }

        public TL_photos_photo() {
            super();
            this.users = new ArrayList();
        }

        public static TL_photos_photo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_photos_photo.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_photos_photo", Integer.valueOf(arg2)));
            }

            TL_photos_photo v2 = new TL_photos_photo();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.photo = Photo.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                User v2 = User.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.users.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_photos_photo.constructor);
            this.photo.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.users.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_photos_photos extends photos_Photos {
        public static int constructor = -1916114267;

        static {
        }

        public TL_photos_photos() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.photos.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_photos_photos.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.photos.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_photos_photosSlice extends photos_Photos {
        public static int constructor = 352657236;

        static {
        }

        public TL_photos_photosSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.count = arg8.readInt32(arg9);
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Photo v5 = Photo.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.photos.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_photos_photosSlice.constructor);
            arg6.writeInt32(this.count);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.photos.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.photos.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_photos_updateProfilePhoto extends TLObject {
        public static int constructor = -256159406;
        public InputPhoto id;

        static {
        }

        public TL_photos_updateProfilePhoto() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return UserProfilePhoto.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_photos_updateProfilePhoto.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_photos_uploadProfilePhoto extends TLObject {
        public static int constructor = 1328726168;
        public InputFile file;

        static {
        }

        public TL_photos_uploadProfilePhoto() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_photos_photo.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_photos_uploadProfilePhoto.constructor);
            this.file.serializeToStream(arg2);
        }
    }

    public class TL_popularContact extends TLObject {
        public long client_id;
        public static int constructor = 1558266229;
        public int importers;

        static {
        }

        public TL_popularContact() {
            super();
        }

        public static TL_popularContact TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_popularContact.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_popularContact", Integer.valueOf(arg2)));
            }

            TL_popularContact v2 = new TL_popularContact();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.client_id = arg3.readInt64(arg4);
            this.importers = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_popularContact.constructor);
            arg3.writeInt64(this.client_id);
            arg3.writeInt32(this.importers);
        }
    }

    public class TL_postAddress extends TLObject {
        public String city;
        public static int constructor = 512535275;
        public String country_iso2;
        public String post_code;
        public String state;
        public String street_line1;
        public String street_line2;

        static {
        }

        public TL_postAddress() {
            super();
        }

        public static TL_postAddress TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_postAddress.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_postAddress", Integer.valueOf(arg2)));
            }

            TL_postAddress v2 = new TL_postAddress();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.street_line1 = arg2.readString(arg3);
            this.street_line2 = arg2.readString(arg3);
            this.city = arg2.readString(arg3);
            this.state = arg2.readString(arg3);
            this.country_iso2 = arg2.readString(arg3);
            this.post_code = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_postAddress.constructor);
            arg2.writeString(this.street_line1);
            arg2.writeString(this.street_line2);
            arg2.writeString(this.city);
            arg2.writeString(this.state);
            arg2.writeString(this.country_iso2);
            arg2.writeString(this.post_code);
        }
    }

    public class TL_privacyKeyChatInvite extends PrivacyKey {
        public static int constructor = 1343122938;

        static {
        }

        public TL_privacyKeyChatInvite() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyKeyChatInvite.constructor);
        }
    }

    public class TL_privacyKeyPhoneCall extends PrivacyKey {
        public static int constructor = 1030105979;

        static {
        }

        public TL_privacyKeyPhoneCall() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyKeyPhoneCall.constructor);
        }
    }

    public class TL_privacyKeyStatusTimestamp extends PrivacyKey {
        public static int constructor = -1137792208;

        static {
        }

        public TL_privacyKeyStatusTimestamp() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyKeyStatusTimestamp.constructor);
        }
    }

    public class TL_privacyValueAllowAll extends PrivacyRule {
        public static int constructor = 1698855810;

        static {
        }

        public TL_privacyValueAllowAll() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyValueAllowAll.constructor);
        }
    }

    public class TL_privacyValueAllowContacts extends PrivacyRule {
        public static int constructor = -123988;

        static {
        }

        public TL_privacyValueAllowContacts() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyValueAllowContacts.constructor);
        }
    }

    public class TL_privacyValueAllowUsers extends PrivacyRule {
        public static int constructor = 1297858060;

        static {
        }

        public TL_privacyValueAllowUsers() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.users.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_privacyValueAllowUsers.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.users.get(v1).intValue());
            }
        }
    }

    public class TL_privacyValueDisallowAll extends PrivacyRule {
        public static int constructor = -1955338397;

        static {
        }

        public TL_privacyValueDisallowAll() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyValueDisallowAll.constructor);
        }
    }

    public class TL_privacyValueDisallowContacts extends PrivacyRule {
        public static int constructor = -125240806;

        static {
        }

        public TL_privacyValueDisallowContacts() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_privacyValueDisallowContacts.constructor);
        }
    }

    public class TL_privacyValueDisallowUsers extends PrivacyRule {
        public static int constructor = 209668535;

        static {
        }

        public TL_privacyValueDisallowUsers() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.users.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_privacyValueDisallowUsers.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.users.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.users.get(v1).intValue());
            }
        }
    }

    public class TL_receivedNotifyMessage extends TLObject {
        public static int constructor = -1551583367;
        public int flags;
        public int id;

        static {
        }

        public TL_receivedNotifyMessage() {
            super();
        }

        public static TL_receivedNotifyMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_receivedNotifyMessage.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_receivedNotifyMessage", Integer.valueOf(arg2)));
            }

            TL_receivedNotifyMessage v2 = new TL_receivedNotifyMessage();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.flags = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_receivedNotifyMessage.constructor);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_recentMeUrlChat extends RecentMeUrl {
        public static int constructor = -1608834311;

        static {
        }

        public TL_recentMeUrlChat() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.chat_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_recentMeUrlChat.constructor);
            arg2.writeString(this.url);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_recentMeUrlChatInvite extends RecentMeUrl {
        public static int constructor = -347535331;

        static {
        }

        public TL_recentMeUrlChatInvite() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.chat_invite = ChatInvite.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_recentMeUrlChatInvite.constructor);
            arg2.writeString(this.url);
            this.chat_invite.serializeToStream(arg2);
        }
    }

    public class TL_recentMeUrlStickerSet extends RecentMeUrl {
        public static int constructor = -1140172836;

        static {
        }

        public TL_recentMeUrlStickerSet() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.set = StickerSetCovered.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_recentMeUrlStickerSet.constructor);
            arg2.writeString(this.url);
            this.set.serializeToStream(arg2);
        }
    }

    public class TL_recentMeUrlUnknown extends RecentMeUrl {
        public static int constructor = 1189204285;

        static {
        }

        public TL_recentMeUrlUnknown() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.url = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_recentMeUrlUnknown.constructor);
            arg2.writeString(this.url);
        }
    }

    public class TL_recentMeUrlUser extends RecentMeUrl {
        public static int constructor = -1917045962;

        static {
        }

        public TL_recentMeUrlUser() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.url = arg2.readString(arg3);
            this.user_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_recentMeUrlUser.constructor);
            arg2.writeString(this.url);
            arg2.writeInt32(this.user_id);
        }
    }

    public class TL_replyInlineMarkup extends ReplyMarkup {
        public static int constructor = 1218642516;

        static {
        }

        public TL_replyInlineMarkup() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_keyboardButtonRow v2 = TL_keyboardButtonRow.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.rows.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_replyInlineMarkup.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.rows.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.rows.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_replyKeyboardForceReply extends ReplyMarkup {
        public static int constructor = -200242528;

        static {
        }

        public TL_replyKeyboardForceReply() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            arg3 = false;
            boolean v2 = (this.flags & 2) != 0 ? true : false;
            this.single_use = v2;
            if((this.flags & 4) != 0) {
                arg3 = true;
            }

            this.selective = arg3;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_replyKeyboardForceReply.constructor);
            int v0 = this.single_use ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.selective ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_replyKeyboardHide extends ReplyMarkup {
        public static int constructor = -1606526075;

        static {
        }

        public TL_replyKeyboardHide() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.flags = arg1.readInt32(arg2);
            boolean v1 = (this.flags & 4) != 0 ? true : false;
            this.selective = v1;
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_replyKeyboardHide.constructor);
            int v0 = this.selective ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            arg2.writeInt32(this.flags);
        }
    }

    public class TL_replyKeyboardMarkup extends ReplyMarkup {
        public static int constructor = 889353612;

        static {
        }

        public TL_replyKeyboardMarkup() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.resize = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.single_use = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.selective = v0;
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                TL_keyboardButtonRow v1 = TL_keyboardButtonRow.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.rows.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_replyKeyboardMarkup.constructor);
            int v0 = this.resize ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.single_use ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.selective ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            arg4.writeInt32(481674261);
            v0 = this.rows.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.rows.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_secureCredentialsEncrypted extends TLObject {
        public static int constructor = 871426631;
        public byte[] data;
        public byte[] hash;
        public byte[] secret;

        static {
        }

        public TL_secureCredentialsEncrypted() {
            super();
        }

        public static TL_secureCredentialsEncrypted TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_secureCredentialsEncrypted.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_secureCredentialsEncrypted", Integer.valueOf(arg2)));
            }

            TL_secureCredentialsEncrypted v2 = new TL_secureCredentialsEncrypted();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.data = arg2.readByteArray(arg3);
            this.hash = arg2.readByteArray(arg3);
            this.secret = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureCredentialsEncrypted.constructor);
            arg2.writeByteArray(this.data);
            arg2.writeByteArray(this.hash);
            arg2.writeByteArray(this.secret);
        }
    }

    public class TL_secureData extends TLObject {
        public static int constructor = -1964327229;
        public byte[] data;
        public byte[] data_hash;
        public byte[] secret;

        static {
        }

        public TL_secureData() {
            super();
        }

        public static TL_secureData TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_secureData.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_secureData", Integer.valueOf(arg2)));
            }

            TL_secureData v2 = new TL_secureData();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.data = arg2.readByteArray(arg3);
            this.data_hash = arg2.readByteArray(arg3);
            this.secret = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureData.constructor);
            arg2.writeByteArray(this.data);
            arg2.writeByteArray(this.data_hash);
            arg2.writeByteArray(this.secret);
        }
    }

    public class TL_secureFile extends SecureFile {
        public long access_hash;
        public static int constructor = -534283678;
        public int date;
        public int dc_id;
        public byte[] file_hash;
        public long id;
        public byte[] secret;
        public int size;

        static {
        }

        public TL_secureFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.size = arg3.readInt32(arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.file_hash = arg3.readByteArray(arg4);
            this.secret = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_secureFile.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.size);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.date);
            arg3.writeByteArray(this.file_hash);
            arg3.writeByteArray(this.secret);
        }
    }

    public class TL_secureFileEmpty extends SecureFile {
        public static int constructor = 1679398724;

        static {
        }

        public TL_secureFileEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureFileEmpty.constructor);
        }
    }

    public class TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000 extends SecurePasswordKdfAlgo {
        public static int constructor = -1141711456;
        public byte[] salt;

        static {
        }

        public TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.salt = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000.constructor);
            arg2.writeByteArray(this.salt);
        }
    }

    public class TL_securePasswordKdfAlgoSHA512 extends SecurePasswordKdfAlgo {
        public static int constructor = -2042159726;
        public byte[] salt;

        static {
        }

        public TL_securePasswordKdfAlgoSHA512() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.salt = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_securePasswordKdfAlgoSHA512.constructor);
            arg2.writeByteArray(this.salt);
        }
    }

    public class TL_securePasswordKdfAlgoUnknown extends SecurePasswordKdfAlgo {
        public static int constructor = 4883767;

        static {
        }

        public TL_securePasswordKdfAlgoUnknown() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_securePasswordKdfAlgoUnknown.constructor);
        }
    }

    public class TL_securePlainEmail extends SecurePlainData {
        public static int constructor = 569137759;
        public String email;

        static {
        }

        public TL_securePlainEmail() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.email = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_securePlainEmail.constructor);
            arg2.writeString(this.email);
        }
    }

    public class TL_securePlainPhone extends SecurePlainData {
        public static int constructor = 2103482845;
        public String phone;

        static {
        }

        public TL_securePlainPhone() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.phone = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_securePlainPhone.constructor);
            arg2.writeString(this.phone);
        }
    }

    public class TL_secureRequiredType extends SecureRequiredType {
        public static int constructor = -2103600678;
        public int flags;
        public boolean native_names;
        public boolean selfie_required;
        public boolean translation_required;
        public SecureValueType type;

        static {
        }

        public TL_secureRequiredType() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.native_names = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.selfie_required = v0;
            if((this.flags & 4) != 0) {
            }
            else {
                v1 = false;
            }

            this.translation_required = v1;
            this.type = SecureValueType.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureRequiredType.constructor);
            int v0 = this.native_names ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.selfie_required ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.translation_required ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.type.serializeToStream(arg2);
        }
    }

    public class TL_secureRequiredTypeOneOf extends SecureRequiredType {
        public static int constructor = 41187252;
        public ArrayList types;

        static {
        }

        public TL_secureRequiredTypeOneOf() {
            super();
            this.types = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                SecureRequiredType v2 = SecureRequiredType.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.types.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_secureRequiredTypeOneOf.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.types.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.types.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_secureSecretSettings extends TLObject {
        public static int constructor = 354925740;
        public SecurePasswordKdfAlgo secure_algo;
        public byte[] secure_secret;
        public long secure_secret_id;

        static {
        }

        public TL_secureSecretSettings() {
            super();
        }

        public static TL_secureSecretSettings TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_secureSecretSettings.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_secureSecretSettings", Integer.valueOf(arg2)));
            }

            TL_secureSecretSettings v2 = new TL_secureSecretSettings();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.secure_algo = SecurePasswordKdfAlgo.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.secure_secret = arg2.readByteArray(arg3);
            this.secure_secret_id = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_secureSecretSettings.constructor);
            this.secure_algo.serializeToStream(arg3);
            arg3.writeByteArray(this.secure_secret);
            arg3.writeInt64(this.secure_secret_id);
        }
    }

    public class TL_secureValue extends TLObject {
        public static int constructor = 411017418;
        public TL_secureData data;
        public ArrayList files;
        public int flags;
        public SecureFile front_side;
        public byte[] hash;
        public SecurePlainData plain_data;
        public SecureFile reverse_side;
        public SecureFile selfie;
        public ArrayList translation;
        public SecureValueType type;

        static {
        }

        public TL_secureValue() {
            super();
            this.translation = new ArrayList();
            this.files = new ArrayList();
        }

        public static TL_secureValue TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_secureValue.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_secureValue", Integer.valueOf(arg2)));
            }

            TL_secureValue v2 = new TL_secureValue();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0;
            this.flags = arg8.readInt32(arg9);
            this.type = SecureValueType.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            if((this.flags & 1) != 0) {
                this.data = TL_secureData.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 2) != 0) {
                this.front_side = SecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 4) != 0) {
                this.reverse_side = SecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            if((this.flags & 8) != 0) {
                this.selfie = SecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            int v2 = 481674261;
            int v3 = 0;
            if((this.flags & 64) != 0) {
                v0 = arg8.readInt32(arg9);
                if(v0 == v2) {
                    v0 = arg8.readInt32(arg9);
                    int v4 = 0;
                    while(v4 < v0) {
                        SecureFile v5 = SecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                        if(v5 == null) {
                            return;
                        }
                        else {
                            this.translation.add(v5);
                            ++v4;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg9) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 16) != 0) {
                v0 = arg8.readInt32(arg9);
                if(v0 == v2) {
                    v0 = arg8.readInt32(arg9);
                    while(v3 < v0) {
                        SecureFile v1 = SecureFile.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.files.add(v1);
                            ++v3;
                            continue;
                        }

                        break;
                    }
                }
                else if(!arg9) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }

            if((this.flags & 32) != 0) {
                this.plain_data = SecurePlainData.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
            }

            this.hash = arg8.readByteArray(arg9);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            int v0;
            arg6.writeInt32(TL_secureValue.constructor);
            arg6.writeInt32(this.flags);
            this.type.serializeToStream(arg6);
            if((this.flags & 1) != 0) {
                this.data.serializeToStream(arg6);
            }

            if((this.flags & 2) != 0) {
                this.front_side.serializeToStream(arg6);
            }

            if((this.flags & 4) != 0) {
                this.reverse_side.serializeToStream(arg6);
            }

            if((this.flags & 8) != 0) {
                this.selfie.serializeToStream(arg6);
            }

            int v1 = 0;
            int v2 = 481674261;
            if((this.flags & 64) != 0) {
                arg6.writeInt32(v2);
                v0 = this.translation.size();
                arg6.writeInt32(v0);
                int v3;
                for(v3 = 0; v3 < v0; ++v3) {
                    this.translation.get(v3).serializeToStream(arg6);
                }
            }

            if((this.flags & 16) != 0) {
                arg6.writeInt32(v2);
                v0 = this.files.size();
                arg6.writeInt32(v0);
                while(v1 < v0) {
                    this.files.get(v1).serializeToStream(arg6);
                    ++v1;
                }
            }

            if((this.flags & 32) != 0) {
                this.plain_data.serializeToStream(arg6);
            }

            arg6.writeByteArray(this.hash);
        }
    }

    public class TL_secureValueError extends SecureValueError {
        public static int constructor = -2036501105;
        public byte[] hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueError() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueError.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorData extends SecureValueError {
        public static int constructor = -391902247;
        public byte[] data_hash;
        public String field;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorData() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.data_hash = arg2.readByteArray(arg3);
            this.field = arg2.readString(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorData.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.data_hash);
            arg2.writeString(this.field);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorFile extends SecureValueError {
        public static int constructor = 2054162547;
        public byte[] file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.file_hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorFile.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.file_hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorFiles extends SecureValueError {
        public static int constructor = 1717706985;
        public ArrayList file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorFiles() {
            super();
            this.file_hash = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.type = SecureValueType.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.file_hash.add(arg5.readByteArray(arg6));
                ++v1;
            }

            this.text = arg5.readString(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_secureValueErrorFiles.constructor);
            this.type.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.file_hash.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeByteArray(this.file_hash.get(v1));
            }

            arg4.writeString(this.text);
        }
    }

    public class TL_secureValueErrorFrontSide extends SecureValueError {
        public static int constructor = 12467706;
        public byte[] file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorFrontSide() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.file_hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorFrontSide.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.file_hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorReverseSide extends SecureValueError {
        public static int constructor = -2037765467;
        public byte[] file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorReverseSide() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.file_hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorReverseSide.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.file_hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorSelfie extends SecureValueError {
        public static int constructor = -449327402;
        public byte[] file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorSelfie() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.file_hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorSelfie.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.file_hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorTranslationFile extends SecureValueError {
        public static int constructor = -1592506512;
        public byte[] file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorTranslationFile() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.file_hash = arg2.readByteArray(arg3);
            this.text = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueErrorTranslationFile.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.file_hash);
            arg2.writeString(this.text);
        }
    }

    public class TL_secureValueErrorTranslationFiles extends SecureValueError {
        public static int constructor = 878931416;
        public ArrayList file_hash;
        public String text;
        public SecureValueType type;

        static {
        }

        public TL_secureValueErrorTranslationFiles() {
            super();
            this.file_hash = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.type = SecureValueType.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.file_hash.add(arg5.readByteArray(arg6));
                ++v1;
            }

            this.text = arg5.readString(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_secureValueErrorTranslationFiles.constructor);
            this.type.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.file_hash.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeByteArray(this.file_hash.get(v1));
            }

            arg4.writeString(this.text);
        }
    }

    public class TL_secureValueHash extends TLObject {
        public static int constructor = -316748368;
        public byte[] hash;
        public SecureValueType type;

        static {
        }

        public TL_secureValueHash() {
            super();
        }

        public static TL_secureValueHash TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_secureValueHash.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_secureValueHash", Integer.valueOf(arg2)));
            }

            TL_secureValueHash v2 = new TL_secureValueHash();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = SecureValueType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.hash = arg2.readByteArray(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueHash.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeByteArray(this.hash);
        }
    }

    public class TL_secureValueTypeAddress extends SecureValueType {
        public static int constructor = -874308058;

        static {
        }

        public TL_secureValueTypeAddress() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeAddress.constructor);
        }
    }

    public class TL_secureValueTypeBankStatement extends SecureValueType {
        public static int constructor = -1995211763;

        static {
        }

        public TL_secureValueTypeBankStatement() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeBankStatement.constructor);
        }
    }

    public class TL_secureValueTypeDriverLicense extends SecureValueType {
        public static int constructor = 115615172;

        static {
        }

        public TL_secureValueTypeDriverLicense() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeDriverLicense.constructor);
        }
    }

    public class TL_secureValueTypeEmail extends SecureValueType {
        public static int constructor = -1908627474;

        static {
        }

        public TL_secureValueTypeEmail() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeEmail.constructor);
        }
    }

    public class TL_secureValueTypeIdentityCard extends SecureValueType {
        public static int constructor = -1596951477;

        static {
        }

        public TL_secureValueTypeIdentityCard() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeIdentityCard.constructor);
        }
    }

    public class TL_secureValueTypeInternalPassport extends SecureValueType {
        public static int constructor = -1717268701;

        static {
        }

        public TL_secureValueTypeInternalPassport() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeInternalPassport.constructor);
        }
    }

    public class TL_secureValueTypePassport extends SecureValueType {
        public static int constructor = 1034709504;

        static {
        }

        public TL_secureValueTypePassport() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypePassport.constructor);
        }
    }

    public class TL_secureValueTypePassportRegistration extends SecureValueType {
        public static int constructor = -1713143702;

        static {
        }

        public TL_secureValueTypePassportRegistration() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypePassportRegistration.constructor);
        }
    }

    public class TL_secureValueTypePersonalDetails extends SecureValueType {
        public static int constructor = -1658158621;

        static {
        }

        public TL_secureValueTypePersonalDetails() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypePersonalDetails.constructor);
        }
    }

    public class TL_secureValueTypePhone extends SecureValueType {
        public static int constructor = -1289704741;

        static {
        }

        public TL_secureValueTypePhone() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypePhone.constructor);
        }
    }

    public class TL_secureValueTypeRentalAgreement extends SecureValueType {
        public static int constructor = -1954007928;

        static {
        }

        public TL_secureValueTypeRentalAgreement() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeRentalAgreement.constructor);
        }
    }

    public class TL_secureValueTypeTemporaryRegistration extends SecureValueType {
        public static int constructor = -368907213;

        static {
        }

        public TL_secureValueTypeTemporaryRegistration() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeTemporaryRegistration.constructor);
        }
    }

    public class TL_secureValueTypeUtilityBill extends SecureValueType {
        public static int constructor = -63531698;

        static {
        }

        public TL_secureValueTypeUtilityBill() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_secureValueTypeUtilityBill.constructor);
        }
    }

    public class TL_sendMessageCancelAction extends SendMessageAction {
        public static int constructor = -44119819;

        static {
        }

        public TL_sendMessageCancelAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageCancelAction.constructor);
        }
    }

    public class TL_sendMessageChooseContactAction extends SendMessageAction {
        public static int constructor = 1653390447;

        static {
        }

        public TL_sendMessageChooseContactAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageChooseContactAction.constructor);
        }
    }

    public class TL_sendMessageGamePlayAction extends SendMessageAction {
        public static int constructor = -580219064;

        static {
        }

        public TL_sendMessageGamePlayAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageGamePlayAction.constructor);
        }
    }

    public class TL_sendMessageGeoLocationAction extends SendMessageAction {
        public static int constructor = 393186209;

        static {
        }

        public TL_sendMessageGeoLocationAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageGeoLocationAction.constructor);
        }
    }

    public class TL_sendMessageRecordAudioAction extends SendMessageAction {
        public static int constructor = -718310409;

        static {
        }

        public TL_sendMessageRecordAudioAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageRecordAudioAction.constructor);
        }
    }

    public class TL_sendMessageRecordRoundAction extends SendMessageAction {
        public static int constructor = -1997373508;

        static {
        }

        public TL_sendMessageRecordRoundAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageRecordRoundAction.constructor);
        }
    }

    public class TL_sendMessageRecordVideoAction extends SendMessageAction {
        public static int constructor = -1584933265;

        static {
        }

        public TL_sendMessageRecordVideoAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageRecordVideoAction.constructor);
        }
    }

    public class TL_sendMessageTypingAction extends SendMessageAction {
        public static int constructor = 381645902;

        static {
        }

        public TL_sendMessageTypingAction() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageTypingAction.constructor);
        }
    }

    public class TL_sendMessageUploadAudioAction extends SendMessageAction {
        public static int constructor = -212740181;

        static {
        }

        public TL_sendMessageUploadAudioAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.progress = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadAudioAction.constructor);
            arg2.writeInt32(this.progress);
        }
    }

    public class TL_sendMessageUploadAudioAction_old extends TL_sendMessageUploadAudioAction {
        public static int constructor = -424899985;

        static {
        }

        public TL_sendMessageUploadAudioAction_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadAudioAction_old.constructor);
        }
    }

    public class TL_sendMessageUploadDocumentAction extends SendMessageAction {
        public static int constructor = -1441998364;

        static {
        }

        public TL_sendMessageUploadDocumentAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.progress = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadDocumentAction.constructor);
            arg2.writeInt32(this.progress);
        }
    }

    public class TL_sendMessageUploadDocumentAction_old extends TL_sendMessageUploadDocumentAction {
        public static int constructor = -1884362354;

        static {
        }

        public TL_sendMessageUploadDocumentAction_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadDocumentAction_old.constructor);
        }
    }

    public class TL_sendMessageUploadPhotoAction extends SendMessageAction {
        public static int constructor = -774682074;

        static {
        }

        public TL_sendMessageUploadPhotoAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.progress = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadPhotoAction.constructor);
            arg2.writeInt32(this.progress);
        }
    }

    public class TL_sendMessageUploadPhotoAction_old extends TL_sendMessageUploadPhotoAction {
        public static int constructor = -1727382502;

        static {
        }

        public TL_sendMessageUploadPhotoAction_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadPhotoAction_old.constructor);
        }
    }

    public class TL_sendMessageUploadRoundAction extends SendMessageAction {
        public static int constructor = 608050278;

        static {
        }

        public TL_sendMessageUploadRoundAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.progress = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadRoundAction.constructor);
            arg2.writeInt32(this.progress);
        }
    }

    public class TL_sendMessageUploadVideoAction extends SendMessageAction {
        public static int constructor = -378127636;

        static {
        }

        public TL_sendMessageUploadVideoAction() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.progress = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadVideoAction.constructor);
            arg2.writeInt32(this.progress);
        }
    }

    public class TL_sendMessageUploadVideoAction_old extends TL_sendMessageUploadVideoAction {
        public static int constructor = -1845219337;

        static {
        }

        public TL_sendMessageUploadVideoAction_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_sendMessageUploadVideoAction_old.constructor);
        }
    }

    public class TL_shippingOption extends TLObject {
        public static int constructor = -1239335713;
        public String id;
        public ArrayList prices;
        public String title;

        static {
        }

        public TL_shippingOption() {
            super();
            this.prices = new ArrayList();
        }

        public static TL_shippingOption TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_shippingOption.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_shippingOption", Integer.valueOf(arg2)));
            }

            TL_shippingOption v2 = new TL_shippingOption();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readString(arg6);
            this.title = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_labeledPrice v2 = TL_labeledPrice.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.prices.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_shippingOption.constructor);
            arg4.writeString(this.id);
            arg4.writeString(this.title);
            arg4.writeInt32(481674261);
            int v0 = this.prices.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.prices.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_stickerPack extends TLObject {
        public static int constructor = 313694676;
        public ArrayList documents;
        public String emoticon;

        static {
        }

        public TL_stickerPack() {
            super();
            this.documents = new ArrayList();
        }

        public static TL_stickerPack TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_stickerPack.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_stickerPack", Integer.valueOf(arg2)));
            }

            TL_stickerPack v2 = new TL_stickerPack();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.emoticon = arg6.readString(arg7);
            int v0 = arg6.readInt32(arg7);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg6.readInt32(arg7);
            while(v1 < v0) {
                this.documents.add(Long.valueOf(arg6.readInt64(arg7)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_stickerPack.constructor);
            arg5.writeString(this.emoticon);
            arg5.writeInt32(481674261);
            int v0 = this.documents.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.documents.get(v1).longValue());
            }
        }
    }

    public class TL_stickerSet extends StickerSet {
        public static int constructor = 1434820921;

        static {
        }

        public TL_stickerSet() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = false;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.archived = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.official = v0;
            if((this.flags & 8) != 0) {
                v1 = true;
            }

            this.masks = v1;
            if((this.flags & 1) != 0) {
                this.installed_date = arg4.readInt32(arg5);
            }

            this.id = arg4.readInt64(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
            this.short_name = arg4.readString(arg5);
            this.count = arg4.readInt32(arg5);
            this.hash = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_stickerSet.constructor);
            int v0 = this.archived ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.official ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.masks ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg3.writeInt32(this.installed_date);
            }

            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            arg3.writeString(this.short_name);
            arg3.writeInt32(this.count);
            arg3.writeInt32(this.hash);
        }
    }

    public class TL_stickerSetCovered extends StickerSetCovered {
        public static int constructor = 1678812626;

        static {
        }

        public TL_stickerSetCovered() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.set = StickerSet.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.cover = Document.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_stickerSetCovered.constructor);
            this.set.serializeToStream(arg2);
            this.cover.serializeToStream(arg2);
        }
    }

    public class TL_stickerSetMultiCovered extends StickerSetCovered {
        public static int constructor = 872932635;

        static {
        }

        public TL_stickerSetMultiCovered() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.set = StickerSet.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                Document v2 = Document.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.covers.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_stickerSetMultiCovered.constructor);
            this.set.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.covers.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.covers.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_stickerSet_layer75 extends TL_stickerSet {
        public static int constructor = -852477119;

        static {
        }

        public TL_stickerSet_layer75() {
            super();
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.installed = v0;
            v0 = (this.flags & 2) != 0 ? true : false;
            this.archived = v0;
            v0 = (this.flags & 4) != 0 ? true : false;
            this.official = v0;
            if((this.flags & 8) != 0) {
            }
            else {
                v1 = false;
            }

            this.masks = v1;
            this.id = arg4.readInt64(arg5);
            this.access_hash = arg4.readInt64(arg5);
            this.title = arg4.readString(arg5);
            this.short_name = arg4.readString(arg5);
            this.count = arg4.readInt32(arg5);
            this.hash = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_stickerSet_layer75.constructor);
            int v0 = this.installed ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.archived ? this.flags | 2 : this.flags & -3;
            this.flags = v0;
            v0 = this.official ? this.flags | 4 : this.flags & -5;
            this.flags = v0;
            v0 = this.masks ? this.flags | 8 : this.flags & -9;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            arg3.writeString(this.short_name);
            arg3.writeInt32(this.count);
            arg3.writeInt32(this.hash);
        }
    }

    public class TL_stickerSet_old extends TL_stickerSet {
        public static int constructor = -1482409193;

        static {
        }

        public TL_stickerSet_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.title = arg3.readString(arg4);
            this.short_name = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_stickerSet_old.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.title);
            arg3.writeString(this.short_name);
        }
    }

    public class TL_storage_fileGif extends storage_FileType {
        public static int constructor = -891180321;

        static {
        }

        public TL_storage_fileGif() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileGif.constructor);
        }
    }

    public class TL_storage_fileJpeg extends storage_FileType {
        public static int constructor = 8322574;

        static {
        }

        public TL_storage_fileJpeg() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileJpeg.constructor);
        }
    }

    public class TL_storage_fileMov extends storage_FileType {
        public static int constructor = 1258941372;

        static {
        }

        public TL_storage_fileMov() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileMov.constructor);
        }
    }

    public class TL_storage_fileMp3 extends storage_FileType {
        public static int constructor = 1384777335;

        static {
        }

        public TL_storage_fileMp3() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileMp3.constructor);
        }
    }

    public class TL_storage_fileMp4 extends storage_FileType {
        public static int constructor = -1278304028;

        static {
        }

        public TL_storage_fileMp4() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileMp4.constructor);
        }
    }

    public class TL_storage_filePartial extends storage_FileType {
        public static int constructor = 1086091090;

        static {
        }

        public TL_storage_filePartial() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_filePartial.constructor);
        }
    }

    public class TL_storage_filePdf extends storage_FileType {
        public static int constructor = -1373745011;

        static {
        }

        public TL_storage_filePdf() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_filePdf.constructor);
        }
    }

    public class TL_storage_filePng extends storage_FileType {
        public static int constructor = 172975040;

        static {
        }

        public TL_storage_filePng() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_filePng.constructor);
        }
    }

    public class TL_storage_fileUnknown extends storage_FileType {
        public static int constructor = -1432995067;

        static {
        }

        public TL_storage_fileUnknown() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileUnknown.constructor);
        }
    }

    public class TL_storage_fileWebp extends storage_FileType {
        public static int constructor = 276907596;

        static {
        }

        public TL_storage_fileWebp() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_storage_fileWebp.constructor);
        }
    }

    public class TL_textBold extends RichText {
        public static int constructor = 1730456516;
        public RichText text;

        static {
        }

        public TL_textBold() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textBold.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_textConcat extends RichText {
        public static int constructor = 2120376535;

        static {
        }

        public TL_textConcat() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                RichText v2 = RichText.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.texts.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_textConcat.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.texts.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.texts.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_textEmail extends RichText {
        public static int constructor = -564523562;
        public RichText text;

        static {
        }

        public TL_textEmail() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.email = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textEmail.constructor);
            this.text.serializeToStream(arg2);
            arg2.writeString(this.email);
        }
    }

    public class TL_textEmpty extends RichText {
        public static int constructor = -599948721;

        static {
        }

        public TL_textEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textEmpty.constructor);
        }
    }

    public class TL_textFixed extends RichText {
        public static int constructor = 1816074681;
        public RichText text;

        static {
        }

        public TL_textFixed() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textFixed.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_textItalic extends RichText {
        public static int constructor = -653089380;
        public RichText text;

        static {
        }

        public TL_textItalic() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textItalic.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_textPlain extends RichText {
        public static int constructor = 1950782688;
        public String text;

        static {
        }

        public TL_textPlain() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.text = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textPlain.constructor);
            arg2.writeString(this.text);
        }
    }

    public class TL_textStrike extends RichText {
        public static int constructor = -1678197867;
        public RichText text;

        static {
        }

        public TL_textStrike() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textStrike.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_textUnderline extends RichText {
        public static int constructor = -1054465340;
        public RichText text;

        static {
        }

        public TL_textUnderline() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_textUnderline.constructor);
            this.text.serializeToStream(arg2);
        }
    }

    public class TL_textUrl extends RichText {
        public static int constructor = 1009288385;
        public RichText text;

        static {
        }

        public TL_textUrl() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.text = RichText.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.url = arg2.readString(arg3);
            this.webpage_id = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_textUrl.constructor);
            this.text.serializeToStream(arg3);
            arg3.writeString(this.url);
            arg3.writeInt64(this.webpage_id);
        }
    }

    public class TL_topPeer extends TLObject {
        public static int constructor = -305282981;
        public Peer peer;
        public double rating;

        static {
        }

        public TL_topPeer() {
            super();
        }

        public static TL_topPeer TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_topPeer.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_topPeer", Integer.valueOf(arg2)));
            }

            TL_topPeer v2 = new TL_topPeer();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.rating = arg2.readDouble(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_topPeer.constructor);
            this.peer.serializeToStream(arg3);
            arg3.writeDouble(this.rating);
        }
    }

    public class TL_topPeerCategoryBotsInline extends TopPeerCategory {
        public static int constructor = 344356834;

        static {
        }

        public TL_topPeerCategoryBotsInline() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryBotsInline.constructor);
        }
    }

    public class TL_topPeerCategoryBotsPM extends TopPeerCategory {
        public static int constructor = -1419371685;

        static {
        }

        public TL_topPeerCategoryBotsPM() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryBotsPM.constructor);
        }
    }

    public class TL_topPeerCategoryChannels extends TopPeerCategory {
        public static int constructor = 371037736;

        static {
        }

        public TL_topPeerCategoryChannels() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryChannels.constructor);
        }
    }

    public class TL_topPeerCategoryCorrespondents extends TopPeerCategory {
        public static int constructor = 104314861;

        static {
        }

        public TL_topPeerCategoryCorrespondents() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryCorrespondents.constructor);
        }
    }

    public class TL_topPeerCategoryGroups extends TopPeerCategory {
        public static int constructor = -1122524854;

        static {
        }

        public TL_topPeerCategoryGroups() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryGroups.constructor);
        }
    }

    public class TL_topPeerCategoryPeers extends TLObject {
        public TopPeerCategory category;
        public static int constructor = -75283823;
        public int count;
        public ArrayList peers;

        static {
        }

        public TL_topPeerCategoryPeers() {
            super();
            this.peers = new ArrayList();
        }

        public static TL_topPeerCategoryPeers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_topPeerCategoryPeers.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_topPeerCategoryPeers", Integer.valueOf(arg2)));
            }

            TL_topPeerCategoryPeers v2 = new TL_topPeerCategoryPeers();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.category = TopPeerCategory.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            this.count = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_topPeer v2 = TL_topPeer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.peers.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_topPeerCategoryPeers.constructor);
            this.category.serializeToStream(arg4);
            arg4.writeInt32(this.count);
            arg4.writeInt32(481674261);
            int v0 = this.peers.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.peers.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_topPeerCategoryPhoneCalls extends TopPeerCategory {
        public static int constructor = 511092620;

        static {
        }

        public TL_topPeerCategoryPhoneCalls() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_topPeerCategoryPhoneCalls.constructor);
        }
    }

    public class TL_updateChannel extends Update {
        public int channel_id;
        public static int constructor = -1227598250;

        static {
        }

        public TL_updateChannel() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.channel_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannel.constructor);
            arg2.writeInt32(this.channel_id);
        }
    }

    public class TL_updateChannelAvailableMessages extends Update {
        public int available_min_id;
        public int channel_id;
        public static int constructor = 1893427255;

        static {
        }

        public TL_updateChannelAvailableMessages() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.available_min_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannelAvailableMessages.constructor);
            arg2.writeInt32(this.channel_id);
            arg2.writeInt32(this.available_min_id);
        }
    }

    public class TL_updateChannelMessageViews extends Update {
        public int channel_id;
        public static int constructor = -1734268085;
        public int id;
        public int views;

        static {
        }

        public TL_updateChannelMessageViews() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.id = arg2.readInt32(arg3);
            this.views = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannelMessageViews.constructor);
            arg2.writeInt32(this.channel_id);
            arg2.writeInt32(this.id);
            arg2.writeInt32(this.views);
        }
    }

    public class TL_updateChannelPinnedMessage extends Update {
        public int channel_id;
        public static int constructor = -1738988427;
        public int id;

        static {
        }

        public TL_updateChannelPinnedMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannelPinnedMessage.constructor);
            arg2.writeInt32(this.channel_id);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_updateChannelReadMessagesContents extends Update {
        public int channel_id;
        public static int constructor = -1987495099;
        public ArrayList messages;

        static {
        }

        public TL_updateChannelReadMessagesContents() {
            super();
            this.messages = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.channel_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.messages.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateChannelReadMessagesContents.constructor);
            arg4.writeInt32(this.channel_id);
            arg4.writeInt32(481674261);
            int v0 = this.messages.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.messages.get(v1).intValue());
            }
        }
    }

    public class TL_updateChannelTooLong extends Update {
        public int channel_id;
        public static int constructor = -352032773;
        public int flags;
        public int pts;

        static {
        }

        public TL_updateChannelTooLong() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.flags = arg2.readInt32(arg3);
            this.channel_id = arg2.readInt32(arg3);
            if((this.flags & 1) != 0) {
                this.pts = arg2.readInt32(arg3);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannelTooLong.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.channel_id);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.pts);
            }
        }
    }

    public class TL_updateChannelWebPage extends Update {
        public int channel_id;
        public static int constructor = 1081547008;
        public int pts;
        public int pts_count;
        public WebPage webpage;

        static {
        }

        public TL_updateChannelWebPage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.webpage = WebPage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChannelWebPage.constructor);
            arg2.writeInt32(this.channel_id);
            this.webpage.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateChatAdmins extends Update {
        public int chat_id;
        public static int constructor = 1855224129;
        public boolean enabled;
        public int version;

        static {
        }

        public TL_updateChatAdmins() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.enabled = arg2.readBool(arg3);
            this.version = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatAdmins.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeBool(this.enabled);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_updateChatParticipantAdd extends Update {
        public int chat_id;
        public static int constructor = -364179876;
        public int date;
        public int inviter_id;
        public int user_id;
        public int version;

        static {
        }

        public TL_updateChatParticipantAdd() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.inviter_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
            this.version = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatParticipantAdd.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.inviter_id);
            arg2.writeInt32(this.date);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_updateChatParticipantAdmin extends Update {
        public int chat_id;
        public static int constructor = -1232070311;
        public boolean is_admin;
        public int user_id;
        public int version;

        static {
        }

        public TL_updateChatParticipantAdmin() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.is_admin = arg2.readBool(arg3);
            this.version = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatParticipantAdmin.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.user_id);
            arg2.writeBool(this.is_admin);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_updateChatParticipantDelete extends Update {
        public int chat_id;
        public static int constructor = 1851755554;
        public int user_id;
        public int version;

        static {
        }

        public TL_updateChatParticipantDelete() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.version = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatParticipantDelete.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.version);
        }
    }

    public class TL_updateChatParticipants extends Update {
        public static int constructor = 125178264;
        public ChatParticipants participants;

        static {
        }

        public TL_updateChatParticipants() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.participants = ChatParticipants.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatParticipants.constructor);
            this.participants.serializeToStream(arg2);
        }
    }

    public class TL_updateChatUserTyping extends Update {
        public SendMessageAction action;
        public int chat_id;
        public static int constructor = -1704596961;
        public int user_id;

        static {
        }

        public TL_updateChatUserTyping() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.user_id = arg2.readInt32(arg3);
            this.action = SendMessageAction.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateChatUserTyping.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.user_id);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_updateConfig extends Update {
        public static int constructor = -1574314746;

        static {
        }

        public TL_updateConfig() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateConfig.constructor);
        }
    }

    public class TL_updateContactLink extends Update {
        public static int constructor = -1657903163;
        public ContactLink foreign_link;
        public ContactLink my_link;
        public int user_id;

        static {
        }

        public TL_updateContactLink() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.my_link = ContactLink.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.foreign_link = ContactLink.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateContactLink.constructor);
            arg2.writeInt32(this.user_id);
            this.my_link.serializeToStream(arg2);
            this.foreign_link.serializeToStream(arg2);
        }
    }

    public class TL_updateContactRegistered extends Update {
        public static int constructor = 628472761;
        public int date;
        public int user_id;

        static {
        }

        public TL_updateContactRegistered() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateContactRegistered.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_updateContactsReset extends Update {
        public static int constructor = 1887741886;

        static {
        }

        public TL_updateContactsReset() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateContactsReset.constructor);
        }
    }

    public class TL_updateDcOptions extends Update {
        public static int constructor = -1906403213;
        public ArrayList dc_options;

        static {
        }

        public TL_updateDcOptions() {
            super();
            this.dc_options = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_dcOption v2 = TL_dcOption.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.dc_options.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateDcOptions.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.dc_options.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.dc_options.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_updateDeleteChannelMessages extends Update {
        public int channel_id;
        public static int constructor = -1015733815;
        public ArrayList messages;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateDeleteChannelMessages() {
            super();
            this.messages = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.channel_id = arg5.readInt32(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.messages.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }

            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateDeleteChannelMessages.constructor);
            arg4.writeInt32(this.channel_id);
            arg4.writeInt32(481674261);
            int v0 = this.messages.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.messages.get(v1).intValue());
            }

            arg4.writeInt32(this.pts);
            arg4.writeInt32(this.pts_count);
        }
    }

    public class TL_updateDeleteMessages extends Update {
        public static int constructor = -1576161051;
        public ArrayList messages;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateDeleteMessages() {
            super();
            this.messages = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.messages.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }

            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateDeleteMessages.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.messages.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.messages.get(v1).intValue());
            }

            arg4.writeInt32(this.pts);
            arg4.writeInt32(this.pts_count);
        }
    }

    public class TL_updateDialogPinned extends Update {
        public static int constructor = 433225532;
        public int flags;
        public DialogPeer peer;
        public boolean pinned;

        static {
        }

        public TL_updateDialogPinned() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.pinned = v1;
            this.peer = DialogPeer.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateDialogPinned.constructor);
            int v0 = this.pinned ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_updateDialogUnreadMark extends Update {
        public static int constructor = -513517117;
        public int flags;
        public DialogPeer peer;
        public boolean unread;

        static {
        }

        public TL_updateDialogUnreadMark() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.unread = v1;
            this.peer = DialogPeer.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateDialogUnreadMark.constructor);
            int v0 = this.unread ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.peer.serializeToStream(arg2);
        }
    }

    public class TL_updateDraftMessage extends Update {
        public static int constructor = -299124375;
        public DraftMessage draft;
        public Peer peer;

        static {
        }

        public TL_updateDraftMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.draft = DraftMessage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateDraftMessage.constructor);
            this.peer.serializeToStream(arg2);
            this.draft.serializeToStream(arg2);
        }
    }

    public class TL_updateEditChannelMessage extends Update {
        public static int constructor = 457133559;
        public Message message;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateEditChannelMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateEditChannelMessage.constructor);
            this.message.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateEditMessage extends Update {
        public static int constructor = -469536605;
        public Message message;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateEditMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateEditMessage.constructor);
            this.message.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateEncryptedChatTyping extends Update {
        public int chat_id;
        public static int constructor = 386986326;

        static {
        }

        public TL_updateEncryptedChatTyping() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.chat_id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateEncryptedChatTyping.constructor);
            arg2.writeInt32(this.chat_id);
        }
    }

    public class TL_updateEncryptedMessagesRead extends Update {
        public int chat_id;
        public static int constructor = 956179895;
        public int date;
        public int max_date;

        static {
        }

        public TL_updateEncryptedMessagesRead() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat_id = arg2.readInt32(arg3);
            this.max_date = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateEncryptedMessagesRead.constructor);
            arg2.writeInt32(this.chat_id);
            arg2.writeInt32(this.max_date);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_updateEncryption extends Update {
        public EncryptedChat chat;
        public static int constructor = -1264392051;
        public int date;

        static {
        }

        public TL_updateEncryption() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.chat = EncryptedChat.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.date = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateEncryption.constructor);
            this.chat.serializeToStream(arg2);
            arg2.writeInt32(this.date);
        }
    }

    public class TL_updateFavedStickers extends Update {
        public static int constructor = -451831443;

        static {
        }

        public TL_updateFavedStickers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateFavedStickers.constructor);
        }
    }

    public class TL_updateGroupCall extends Update {
        public GroupCall call;
        public static int constructor = -2046916883;

        static {
        }

        public TL_updateGroupCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.call = GroupCall.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateGroupCall.constructor);
            this.call.serializeToStream(arg2);
        }
    }

    public class TL_updateGroupCallParticipant extends Update {
        public TL_inputGroupCall call;
        public static int constructor = 92188360;
        public GroupCallParticipant participant;

        static {
        }

        public TL_updateGroupCallParticipant() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.call = TL_inputGroupCall.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.participant = GroupCallParticipant.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateGroupCallParticipant.constructor);
            this.call.serializeToStream(arg2);
            this.participant.serializeToStream(arg2);
        }
    }

    public class TL_updateLangPack extends Update {
        public static int constructor = 1442983757;
        public TL_langPackDifference difference;

        static {
        }

        public TL_updateLangPack() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.difference = TL_langPackDifference.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateLangPack.constructor);
            this.difference.serializeToStream(arg2);
        }
    }

    public class TL_updateLangPackTooLong extends Update {
        public static int constructor = 281165899;

        static {
        }

        public TL_updateLangPackTooLong() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateLangPackTooLong.constructor);
        }
    }

    public class TL_updateMessageID extends Update {
        public static int constructor = 1318109142;
        public int id;
        public long random_id;

        static {
        }

        public TL_updateMessageID() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.random_id = arg2.readInt64(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_updateMessageID.constructor);
            arg3.writeInt32(this.id);
            arg3.writeInt64(this.random_id);
        }
    }

    public class TL_updateNewChannelMessage extends Update {
        public static int constructor = 1656358105;
        public Message message;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateNewChannelMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateNewChannelMessage.constructor);
            this.message.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateNewEncryptedMessage extends Update {
        public static int constructor = 314359194;
        public EncryptedMessage message;
        public int qts;

        static {
        }

        public TL_updateNewEncryptedMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = EncryptedMessage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.qts = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateNewEncryptedMessage.constructor);
            this.message.serializeToStream(arg2);
            arg2.writeInt32(this.qts);
        }
    }

    public class TL_updateNewMessage extends Update {
        public static int constructor = 522914557;
        public Message message;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateNewMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.message = Message.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateNewMessage.constructor);
            this.message.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateNewStickerSet extends Update {
        public static int constructor = 1753886890;
        public TL_messages_stickerSet stickerset;

        static {
        }

        public TL_updateNewStickerSet() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.stickerset = TL_messages_stickerSet.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateNewStickerSet.constructor);
            this.stickerset.serializeToStream(arg2);
        }
    }

    public class TL_updateNotifySettings extends Update {
        public static int constructor = -1094555409;
        public PeerNotifySettings notify_settings;
        public NotifyPeer peer;

        static {
        }

        public TL_updateNotifySettings() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = NotifyPeer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.notify_settings = PeerNotifySettings.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateNotifySettings.constructor);
            this.peer.serializeToStream(arg2);
            this.notify_settings.serializeToStream(arg2);
        }
    }

    public class TL_updatePhoneCall extends Update {
        public static int constructor = -1425052898;
        public PhoneCall phone_call;

        static {
        }

        public TL_updatePhoneCall() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.phone_call = PhoneCall.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updatePhoneCall.constructor);
            this.phone_call.serializeToStream(arg2);
        }
    }

    public class TL_updatePinnedDialogs extends Update {
        public static int constructor = -364071333;
        public int flags;
        public ArrayList order;

        static {
        }

        public TL_updatePinnedDialogs() {
            super();
            this.order = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            if((this.flags & 1) != 0) {
                int v0 = arg5.readInt32(arg6);
                int v3 = 0;
                if(v0 == 481674261) {
                    v0 = arg5.readInt32(arg6);
                    while(v3 < v0) {
                        DialogPeer v1 = DialogPeer.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v1 == null) {
                            return;
                        }
                        else {
                            this.order.add(v1);
                            ++v3;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
                }
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updatePinnedDialogs.constructor);
            arg4.writeInt32(this.flags);
            if((this.flags & 1) != 0) {
                arg4.writeInt32(481674261);
                int v0 = this.order.size();
                arg4.writeInt32(v0);
                int v1;
                for(v1 = 0; v1 < v0; ++v1) {
                    this.order.get(v1).serializeToStream(arg4);
                }
            }
        }
    }

    public class TL_updatePrivacy extends Update {
        public static int constructor = -298113238;
        public PrivacyKey key;
        public ArrayList rules;

        static {
        }

        public TL_updatePrivacy() {
            super();
            this.rules = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.key = PrivacyKey.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PrivacyRule v2 = PrivacyRule.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.rules.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updatePrivacy.constructor);
            this.key.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            int v0 = this.rules.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.rules.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_updateReadChannelInbox extends Update {
        public int channel_id;
        public static int constructor = 1108669311;
        public int max_id;

        static {
        }

        public TL_updateReadChannelInbox() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.max_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateReadChannelInbox.constructor);
            arg2.writeInt32(this.channel_id);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_updateReadChannelOutbox extends Update {
        public int channel_id;
        public static int constructor = 634833351;
        public int max_id;

        static {
        }

        public TL_updateReadChannelOutbox() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.channel_id = arg2.readInt32(arg3);
            this.max_id = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateReadChannelOutbox.constructor);
            arg2.writeInt32(this.channel_id);
            arg2.writeInt32(this.max_id);
        }
    }

    public class TL_updateReadFeaturedStickers extends Update {
        public static int constructor = 1461528386;

        static {
        }

        public TL_updateReadFeaturedStickers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateReadFeaturedStickers.constructor);
        }
    }

    public class TL_updateReadHistoryInbox extends Update {
        public static int constructor = -1721631396;
        public int max_id;
        public Peer peer;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateReadHistoryInbox() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.max_id = arg2.readInt32(arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateReadHistoryInbox.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateReadHistoryOutbox extends Update {
        public static int constructor = 791617983;
        public int max_id;
        public Peer peer;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateReadHistoryOutbox() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.peer = Peer.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.max_id = arg2.readInt32(arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateReadHistoryOutbox.constructor);
            this.peer.serializeToStream(arg2);
            arg2.writeInt32(this.max_id);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updateReadMessagesContents extends Update {
        public static int constructor = 1757493555;
        public ArrayList messages;
        public int pts;
        public int pts_count;

        static {
        }

        public TL_updateReadMessagesContents() {
            super();
            this.messages = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                this.messages.add(Integer.valueOf(arg5.readInt32(arg6)));
                ++v1;
            }

            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateReadMessagesContents.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.messages.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg4.writeInt32(this.messages.get(v1).intValue());
            }

            arg4.writeInt32(this.pts);
            arg4.writeInt32(this.pts_count);
        }
    }

    public class TL_updateRecentStickers extends Update {
        public static int constructor = -1706939360;

        static {
        }

        public TL_updateRecentStickers() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateRecentStickers.constructor);
        }
    }

    public class TL_updateSavedGifs extends Update {
        public static int constructor = -1821035490;

        static {
        }

        public TL_updateSavedGifs() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateSavedGifs.constructor);
        }
    }

    public class TL_updateServiceNotification extends Update {
        public static int constructor = -337352679;
        public ArrayList entities;
        public int flags;
        public int inbox_date;
        public MessageMedia media;
        public String message;
        public boolean popup;
        public String type;

        static {
        }

        public TL_updateServiceNotification() {
            super();
            this.entities = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.popup = v0;
            if((this.flags & 2) != 0) {
                this.inbox_date = arg5.readInt32(arg6);
            }

            this.type = arg5.readString(arg6);
            this.message = arg5.readString(arg6);
            this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            int v0_1 = arg5.readInt32(arg6);
            if(v0_1 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg5.readInt32(arg6);
            while(v2 < v0_1) {
                MessageEntity v1 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v1 == null) {
                    return;
                }

                this.entities.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_updateServiceNotification.constructor);
            int v0 = this.popup ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg4.writeInt32(this.flags);
            if((this.flags & 2) != 0) {
                arg4.writeInt32(this.inbox_date);
            }

            arg4.writeString(this.type);
            arg4.writeString(this.message);
            this.media.serializeToStream(arg4);
            arg4.writeInt32(481674261);
            v0 = this.entities.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.entities.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_updateShort extends Updates {
        public static int constructor = 2027216577;

        static {
        }

        public TL_updateShort() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.update = Update.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.date = arg2.readInt32(arg3);
        }
    }

    public class TL_updateShortChatMessage extends Updates {
        public static int constructor = 377562760;

        static {
        }

        public TL_updateShortChatMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            this.id = arg5.readInt32(arg6);
            this.from_id = arg5.readInt32(arg6);
            this.chat_id = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = MessageFwdHeader.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }
    }

    public class TL_updateShortMessage extends Updates {
        public static int constructor = -1857044719;

        static {
        }

        public TL_updateShortMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.mentioned = v0;
            v0 = (this.flags & 32) != 0 ? true : false;
            this.media_unread = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.silent = v0;
            this.id = arg5.readInt32(arg6);
            this.user_id = arg5.readInt32(arg6);
            this.message = arg5.readString(arg6);
            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            if((this.flags & 4) != 0) {
                this.fwd_from = MessageFwdHeader.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 2048) != 0) {
                this.via_bot_id = arg5.readInt32(arg6);
            }

            if((this.flags & 8) != 0) {
                this.reply_to_msg_id = arg5.readInt32(arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }
    }

    public class TL_updateShortSentMessage extends Updates {
        public static int constructor = 301019932;

        static {
        }

        public TL_updateShortSentMessage() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            int v1 = 0;
            boolean v0 = (this.flags & 2) != 0 ? true : false;
            this.out = v0;
            this.id = arg5.readInt32(arg6);
            this.pts = arg5.readInt32(arg6);
            this.pts_count = arg5.readInt32(arg6);
            this.date = arg5.readInt32(arg6);
            if((this.flags & 512) != 0) {
                this.media = MessageMedia.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 128) != 0) {
                int v0_1 = arg5.readInt32(arg6);
                if(v0_1 == 481674261) {
                    v0_1 = arg5.readInt32(arg6);
                    while(v1 < v0_1) {
                        MessageEntity v2 = MessageEntity.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                        if(v2 == null) {
                            return;
                        }
                        else {
                            this.entities.add(v2);
                            ++v1;
                            continue;
                        }

                        return;
                    }
                }
                else if(!arg6) {
                    return;
                }
                else {
                    throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
                }
            }
        }
    }

    public class TL_updateStickerSets extends Update {
        public static int constructor = 1135492588;

        static {
        }

        public TL_updateStickerSets() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateStickerSets.constructor);
        }
    }

    public class TL_updateStickerSetsOrder extends Update {
        public static int constructor = 196268545;
        public int flags;
        public boolean masks;
        public ArrayList order;

        static {
        }

        public TL_updateStickerSetsOrder() {
            super();
            this.order = new ArrayList();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.masks = v0;
            int v0_1 = arg6.readInt32(arg7);
            if(v0_1 != 481674261) {
                if(!arg7) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg6.readInt32(arg7);
            while(v2 < v0_1) {
                this.order.add(Long.valueOf(arg6.readInt64(arg7)));
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_updateStickerSetsOrder.constructor);
            int v0 = this.masks ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg5.writeInt32(this.flags);
            arg5.writeInt32(481674261);
            v0 = this.order.size();
            arg5.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                arg5.writeInt64(this.order.get(v1).longValue());
            }
        }
    }

    public class TL_updateUserBlocked extends Update {
        public boolean blocked;
        public static int constructor = -2131957734;
        public int user_id;

        static {
        }

        public TL_updateUserBlocked() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.blocked = arg2.readBool(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserBlocked.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeBool(this.blocked);
        }
    }

    public class TL_updateUserName extends Update {
        public static int constructor = -1489818765;
        public String first_name;
        public String last_name;
        public int user_id;
        public String username;

        static {
        }

        public TL_updateUserName() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.username = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserName.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.username);
        }
    }

    public class TL_updateUserPhone extends Update {
        public static int constructor = 314130811;
        public String phone;
        public int user_id;

        static {
        }

        public TL_updateUserPhone() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.phone = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserPhone.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeString(this.phone);
        }
    }

    public class TL_updateUserPhoto extends Update {
        public static int constructor = -1791935732;
        public int date;
        public UserProfilePhoto photo;
        public boolean previous;
        public int user_id;

        static {
        }

        public TL_updateUserPhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
            this.photo = UserProfilePhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.previous = arg2.readBool(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserPhoto.constructor);
            arg2.writeInt32(this.user_id);
            arg2.writeInt32(this.date);
            this.photo.serializeToStream(arg2);
            arg2.writeBool(this.previous);
        }
    }

    public class TL_updateUserStatus extends Update {
        public static int constructor = 469489699;
        public UserStatus status;
        public int user_id;

        static {
        }

        public TL_updateUserStatus() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.status = UserStatus.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserStatus.constructor);
            arg2.writeInt32(this.user_id);
            this.status.serializeToStream(arg2);
        }
    }

    public class TL_updateUserTyping extends Update {
        public SendMessageAction action;
        public static int constructor = 1548249383;
        public int user_id;

        static {
        }

        public TL_updateUserTyping() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.user_id = arg2.readInt32(arg3);
            this.action = SendMessageAction.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateUserTyping.constructor);
            arg2.writeInt32(this.user_id);
            this.action.serializeToStream(arg2);
        }
    }

    public class TL_updateWebPage extends Update {
        public static int constructor = 2139689491;
        public int pts;
        public int pts_count;
        public WebPage webpage;

        static {
        }

        public TL_updateWebPage() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.webpage = WebPage.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.pts = arg2.readInt32(arg3);
            this.pts_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updateWebPage.constructor);
            this.webpage.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.pts_count);
        }
    }

    public class TL_updates extends Updates {
        public static int constructor = 1957577280;

        static {
        }

        public TL_updates() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Update v5 = Update.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.updates.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                User v5_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.users.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Chat v1_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.chats.add(v1_1);
                ++v3;
            }

            this.date = arg8.readInt32(arg9);
            this.seq = arg8.readInt32(arg9);
        }
    }

    public class TL_updatesCombined extends Updates {
        public static int constructor = 1918567619;

        static {
        }

        public TL_updatesCombined() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Update v5 = Update.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.updates.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                User v5_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.users.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                Chat v1_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.chats.add(v1_1);
                ++v3;
            }

            this.date = arg8.readInt32(arg9);
            this.seq_start = arg8.readInt32(arg9);
            this.seq = arg8.readInt32(arg9);
        }
    }

    public class TL_updatesTooLong extends Updates {
        public static int constructor = -484987010;

        static {
        }

        public TL_updatesTooLong() {
            super();
        }
    }

    public class TL_updates_channelDifference extends updates_ChannelDifference {
        public static int constructor = 543450958;

        static {
        }

        public TL_updates_channelDifference() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.isFinal = v0;
            this.pts = arg8.readInt32(arg9);
            if((this.flags & 2) != 0) {
                this.timeout = arg8.readInt32(arg9);
            }

            int v0_1 = arg8.readInt32(arg9);
            int v3 = 481674261;
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0_1; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.new_messages.add(v5);
            }

            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0_1; ++v4) {
                Update v5_1 = Update.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.other_updates.add(v5_1);
            }

            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0_1; ++v4) {
                Chat v5_2 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.chats.add(v5_2);
            }

            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            while(v2 < v0_1) {
                User v1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1 == null) {
                    return;
                }

                this.users.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_updates_channelDifference.constructor);
            int v0 = this.isFinal ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg6.writeInt32(this.flags);
            arg6.writeInt32(this.pts);
            if((this.flags & 2) != 0) {
                arg6.writeInt32(this.timeout);
            }

            v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.new_messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.new_messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.other_updates.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.other_updates.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_updates_channelDifferenceEmpty extends updates_ChannelDifference {
        public static int constructor = 1041346555;

        static {
        }

        public TL_updates_channelDifferenceEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            boolean v1 = true;
            if((this.flags & 1) != 0) {
            }
            else {
                v1 = false;
            }

            this.isFinal = v1;
            this.pts = arg3.readInt32(arg4);
            if((this.flags & 2) != 0) {
                this.timeout = arg3.readInt32(arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_channelDifferenceEmpty.constructor);
            int v0 = this.isFinal ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.pts);
            if((this.flags & 2) != 0) {
                arg2.writeInt32(this.timeout);
            }
        }
    }

    public class TL_updates_channelDifferenceTooLong extends updates_ChannelDifference {
        public static int constructor = 1788705589;

        static {
        }

        public TL_updates_channelDifferenceTooLong() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            this.flags = arg8.readInt32(arg9);
            int v2 = 0;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.isFinal = v0;
            this.pts = arg8.readInt32(arg9);
            if((this.flags & 2) != 0) {
                this.timeout = arg8.readInt32(arg9);
            }

            this.top_message = arg8.readInt32(arg9);
            this.read_inbox_max_id = arg8.readInt32(arg9);
            this.read_outbox_max_id = arg8.readInt32(arg9);
            this.unread_count = arg8.readInt32(arg9);
            this.unread_mentions_count = arg8.readInt32(arg9);
            int v0_1 = arg8.readInt32(arg9);
            int v3 = 481674261;
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0_1; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.messages.add(v5);
            }

            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0_1; ++v4) {
                Chat v5_1 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.chats.add(v5_1);
            }

            v0_1 = arg8.readInt32(arg9);
            if(v0_1 != v3) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0_1)));
            }

            v0_1 = arg8.readInt32(arg9);
            while(v2 < v0_1) {
                User v1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1 == null) {
                    return;
                }

                this.users.add(v1);
                ++v2;
            }
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_updates_channelDifferenceTooLong.constructor);
            int v0 = this.isFinal ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg6.writeInt32(this.flags);
            arg6.writeInt32(this.pts);
            if((this.flags & 2) != 0) {
                arg6.writeInt32(this.timeout);
            }

            arg6.writeInt32(this.top_message);
            arg6.writeInt32(this.read_inbox_max_id);
            arg6.writeInt32(this.read_outbox_max_id);
            arg6.writeInt32(this.unread_count);
            arg6.writeInt32(this.unread_mentions_count);
            v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }
        }
    }

    public class TL_updates_difference extends updates_Difference {
        public static int constructor = 16030880;

        static {
        }

        public TL_updates_difference() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.new_messages.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                EncryptedMessage v5_1 = EncryptedMessage.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.new_encrypted_messages.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Update v5_2 = Update.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.other_updates.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_3 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_3 == null) {
                    return;
                }

                this.chats.add(v5_3);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }

            this.state = TL_updates_state.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_updates_difference.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.new_messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.new_messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.new_encrypted_messages.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.new_encrypted_messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.other_updates.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.other_updates.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }

            this.state.serializeToStream(arg6);
        }
    }

    public class TL_updates_differenceEmpty extends updates_Difference {
        public static int constructor = 1567990072;

        static {
        }

        public TL_updates_differenceEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.date = arg2.readInt32(arg3);
            this.seq = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_differenceEmpty.constructor);
            arg2.writeInt32(this.date);
            arg2.writeInt32(this.seq);
        }
    }

    public class TL_updates_differenceSlice extends updates_Difference {
        public static int constructor = -1459938943;

        static {
        }

        public TL_updates_differenceSlice() {
            super();
        }

        public void readParams(AbstractSerializedData arg8, boolean arg9) {
            int v0 = arg8.readInt32(arg9);
            int v1 = 481674261;
            int v3 = 0;
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            int v4;
            for(v4 = 0; v4 < v0; ++v4) {
                Message v5 = Message.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5 == null) {
                    return;
                }

                this.new_messages.add(v5);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                EncryptedMessage v5_1 = EncryptedMessage.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_1 == null) {
                    return;
                }

                this.new_encrypted_messages.add(v5_1);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Update v5_2 = Update.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_2 == null) {
                    return;
                }

                this.other_updates.add(v5_2);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            for(v4 = 0; v4 < v0; ++v4) {
                Chat v5_3 = Chat.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v5_3 == null) {
                    return;
                }

                this.chats.add(v5_3);
            }

            v0 = arg8.readInt32(arg9);
            if(v0 != v1) {
                if(!arg9) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg8.readInt32(arg9);
            while(v3 < v0) {
                User v1_1 = User.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
                if(v1_1 == null) {
                    return;
                }

                this.users.add(v1_1);
                ++v3;
            }

            this.intermediate_state = TL_updates_state.TLdeserialize(arg8, arg8.readInt32(arg9), arg9);
        }

        public void serializeToStream(AbstractSerializedData arg6) {
            arg6.writeInt32(TL_updates_differenceSlice.constructor);
            int v0 = 481674261;
            arg6.writeInt32(v0);
            int v1 = this.new_messages.size();
            arg6.writeInt32(v1);
            int v2 = 0;
            int v3;
            for(v3 = 0; v3 < v1; ++v3) {
                this.new_messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.new_encrypted_messages.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.new_encrypted_messages.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.other_updates.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.other_updates.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v1 = this.chats.size();
            arg6.writeInt32(v1);
            for(v3 = 0; v3 < v1; ++v3) {
                this.chats.get(v3).serializeToStream(arg6);
            }

            arg6.writeInt32(v0);
            v0 = this.users.size();
            arg6.writeInt32(v0);
            while(v2 < v0) {
                this.users.get(v2).serializeToStream(arg6);
                ++v2;
            }

            this.intermediate_state.serializeToStream(arg6);
        }
    }

    public class TL_updates_differenceTooLong extends updates_Difference {
        public static int constructor = 1258196845;

        static {
        }

        public TL_updates_differenceTooLong() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.pts = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_differenceTooLong.constructor);
            arg2.writeInt32(this.pts);
        }
    }

    public class TL_updates_getChannelDifference extends TLObject {
        public InputChannel channel;
        public static int constructor = 51854712;
        public ChannelMessagesFilter filter;
        public int flags;
        public boolean force;
        public int limit;
        public int pts;

        static {
        }

        public TL_updates_getChannelDifference() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return updates_ChannelDifference.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_getChannelDifference.constructor);
            int v0 = this.force ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.channel.serializeToStream(arg2);
            this.filter.serializeToStream(arg2);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_updates_getDifference extends TLObject {
        public static int constructor = 630429265;
        public int date;
        public int flags;
        public int pts;
        public int pts_total_limit;
        public int qts;

        static {
        }

        public TL_updates_getDifference() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return updates_Difference.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_getDifference.constructor);
            arg2.writeInt32(this.flags);
            arg2.writeInt32(this.pts);
            if((this.flags & 1) != 0) {
                arg2.writeInt32(this.pts_total_limit);
            }

            arg2.writeInt32(this.date);
            arg2.writeInt32(this.qts);
        }
    }

    public class TL_updates_getState extends TLObject {
        public static int constructor = -304838614;

        static {
        }

        public TL_updates_getState() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_updates_state.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_getState.constructor);
        }
    }

    public class TL_updates_state extends TLObject {
        public static int constructor = -1519637954;
        public int date;
        public int pts;
        public int qts;
        public int seq;
        public int unread_count;

        static {
        }

        public TL_updates_state() {
            super();
        }

        public static TL_updates_state TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_updates_state.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_updates_state", Integer.valueOf(arg2)));
            }

            TL_updates_state v2 = new TL_updates_state();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.pts = arg2.readInt32(arg3);
            this.qts = arg2.readInt32(arg3);
            this.date = arg2.readInt32(arg3);
            this.seq = arg2.readInt32(arg3);
            this.unread_count = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_updates_state.constructor);
            arg2.writeInt32(this.pts);
            arg2.writeInt32(this.qts);
            arg2.writeInt32(this.date);
            arg2.writeInt32(this.seq);
            arg2.writeInt32(this.unread_count);
        }
    }

    public class TL_upload_cdnFile extends upload_CdnFile {
        public static int constructor = -1449145777;

        static {
        }

        public TL_upload_cdnFile() {
            super();
        }

        public void freeResources() {
            if(this.disableFree) {
                return;
            }

            if(this.bytes != null) {
                this.bytes.reuse();
                this.bytes = null;
            }
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.bytes = arg1.readByteBuffer(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_cdnFile.constructor);
            arg2.writeByteBuffer(this.bytes);
        }
    }

    public class TL_upload_cdnFileReuploadNeeded extends upload_CdnFile {
        public static int constructor = -290921362;

        static {
        }

        public TL_upload_cdnFileReuploadNeeded() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.request_token = arg1.readByteArray(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_cdnFileReuploadNeeded.constructor);
            arg2.writeByteArray(this.request_token);
        }
    }

    public class TL_upload_file extends upload_File {
        public static int constructor = 157948117;

        static {
        }

        public TL_upload_file() {
            super();
        }

        public void freeResources() {
            if(this.disableFree) {
                return;
            }

            if(this.bytes != null) {
                this.bytes.reuse();
                this.bytes = null;
            }
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.type = storage_FileType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.mtime = arg2.readInt32(arg3);
            this.bytes = arg2.readByteBuffer(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_file.constructor);
            this.type.serializeToStream(arg2);
            arg2.writeInt32(this.mtime);
            arg2.writeByteBuffer(this.bytes);
        }
    }

    public class TL_upload_fileCdnRedirect extends upload_File {
        public static int constructor = -242427324;

        static {
        }

        public TL_upload_fileCdnRedirect() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.dc_id = arg5.readInt32(arg6);
            this.file_token = arg5.readByteArray(arg6);
            this.encryption_key = arg5.readByteArray(arg6);
            this.encryption_iv = arg5.readByteArray(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                TL_fileHash v2 = TL_fileHash.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.file_hashes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_upload_fileCdnRedirect.constructor);
            arg4.writeInt32(this.dc_id);
            arg4.writeByteArray(this.file_token);
            arg4.writeByteArray(this.encryption_key);
            arg4.writeByteArray(this.encryption_iv);
            arg4.writeInt32(481674261);
            int v0 = this.file_hashes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.file_hashes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_upload_getCdnFile extends TLObject {
        public static int constructor = 536919235;
        public byte[] file_token;
        public int limit;
        public int offset;

        static {
        }

        public TL_upload_getCdnFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return upload_CdnFile.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_getCdnFile.constructor);
            arg2.writeByteArray(this.file_token);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_upload_getCdnFileHashes extends TLObject {
        public static int constructor = 1302676017;
        public byte[] file_token;
        public int offset;

        static {
        }

        public TL_upload_getCdnFileHashes() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_fileHash v2 = TL_fileHash.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_getCdnFileHashes.constructor);
            arg2.writeByteArray(this.file_token);
            arg2.writeInt32(this.offset);
        }
    }

    public class TL_upload_getFile extends TLObject {
        public static int constructor = -475607115;
        public int limit;
        public InputFileLocation location;
        public int offset;

        static {
        }

        public TL_upload_getFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_upload_file.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_getFile.constructor);
            this.location.serializeToStream(arg2);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_upload_getFileHashes extends TLObject {
        public static int constructor = -956147407;
        public InputFileLocation location;
        public int offset;

        static {
        }

        public TL_upload_getFileHashes() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_fileHash v2 = TL_fileHash.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_getFileHashes.constructor);
            this.location.serializeToStream(arg2);
            arg2.writeInt32(this.offset);
        }
    }

    public class TL_upload_getWebFile extends TLObject {
        public static int constructor = 619086221;
        public int limit;
        public InputWebFileLocation location;
        public int offset;

        static {
        }

        public TL_upload_getWebFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_upload_webFile.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_getWebFile.constructor);
            this.location.serializeToStream(arg2);
            arg2.writeInt32(this.offset);
            arg2.writeInt32(this.limit);
        }
    }

    public class TL_upload_reuploadCdnFile extends TLObject {
        public static int constructor = -1691921240;
        public byte[] file_token;
        public byte[] request_token;

        static {
        }

        public TL_upload_reuploadCdnFile() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                TL_fileHash v2 = TL_fileHash.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_reuploadCdnFile.constructor);
            arg2.writeByteArray(this.file_token);
            arg2.writeByteArray(this.request_token);
        }
    }

    public class TL_upload_saveBigFilePart extends TLObject {
        public NativeByteBuffer bytes;
        public static int constructor = -562337987;
        public long file_id;
        public int file_part;
        public int file_total_parts;

        static {
        }

        public TL_upload_saveBigFilePart() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
            if(this.disableFree) {
                return;
            }

            if(this.bytes != null) {
                this.bytes.reuse();
                this.bytes = null;
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_upload_saveBigFilePart.constructor);
            arg3.writeInt64(this.file_id);
            arg3.writeInt32(this.file_part);
            arg3.writeInt32(this.file_total_parts);
            arg3.writeByteBuffer(this.bytes);
        }
    }

    public class TL_upload_saveFilePart extends TLObject {
        public NativeByteBuffer bytes;
        public static int constructor = -1291540959;
        public long file_id;
        public int file_part;

        static {
        }

        public TL_upload_saveFilePart() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return Bool.TLdeserialize(arg1, arg2, arg3);
        }

        public void freeResources() {
            if(this.disableFree) {
                return;
            }

            if(this.bytes != null) {
                this.bytes.reuse();
                this.bytes = null;
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_upload_saveFilePart.constructor);
            arg3.writeInt64(this.file_id);
            arg3.writeInt32(this.file_part);
            arg3.writeByteBuffer(this.bytes);
        }
    }

    public class TL_upload_webFile extends TLObject {
        public NativeByteBuffer bytes;
        public static int constructor = 568808380;
        public storage_FileType file_type;
        public String mime_type;
        public int mtime;
        public int size;

        static {
        }

        public TL_upload_webFile() {
            super();
        }

        public static TL_upload_webFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_upload_webFile.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_upload_webFile", Integer.valueOf(arg2)));
            }

            TL_upload_webFile v2 = new TL_upload_webFile();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void freeResources() {
            if(this.disableFree) {
                return;
            }

            if(this.bytes != null) {
                this.bytes.reuse();
                this.bytes = null;
            }
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.size = arg2.readInt32(arg3);
            this.mime_type = arg2.readString(arg3);
            this.file_type = storage_FileType.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.mtime = arg2.readInt32(arg3);
            this.bytes = arg2.readByteBuffer(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_upload_webFile.constructor);
            arg2.writeInt32(this.size);
            arg2.writeString(this.mime_type);
            this.file_type.serializeToStream(arg2);
            arg2.writeInt32(this.mtime);
            arg2.writeByteBuffer(this.bytes);
        }
    }

    public class TL_user extends User {
        public static int constructor = 773059779;

        static {
        }

        public TL_user() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            boolean v1 = false;
            boolean v0 = (this.flags & 1024) != 0 ? true : false;
            this.self = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.contact = v0;
            v0 = (this.flags & 4096) != 0 ? true : false;
            this.mutual_contact = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.deleted = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.bot = v0;
            v0 = (this.flags & 32768) != 0 ? true : false;
            this.bot_chat_history = v0;
            v0 = (this.flags & 65536) != 0 ? true : false;
            this.bot_nochats = v0;
            v0 = (this.flags & 131072) != 0 ? true : false;
            this.verified = v0;
            int v3 = 262144;
            v0 = (this.flags & v3) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1048576) != 0 ? true : false;
            this.min = v0;
            if((this.flags & 2097152) != 0) {
                v1 = true;
            }

            this.bot_inline_geo = v1;
            this.id = arg6.readInt32(arg7);
            if((this.flags & 1) != 0) {
                this.access_hash = arg6.readInt64(arg7);
            }

            if((this.flags & 2) != 0) {
                this.first_name = arg6.readString(arg7);
            }

            if((this.flags & 4) != 0) {
                this.last_name = arg6.readString(arg7);
            }

            if((this.flags & 8) != 0) {
                this.username = arg6.readString(arg7);
            }

            if((this.flags & 16) != 0) {
                this.phone = arg6.readString(arg7);
            }

            if((this.flags & 32) != 0) {
                this.photo = UserProfilePhoto.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
            }

            if((this.flags & 64) != 0) {
                this.status = UserStatus.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
            }

            if((this.flags & 16384) != 0) {
                this.bot_info_version = arg6.readInt32(arg7);
            }

            if((this.flags & v3) != 0) {
                this.restriction_reason = arg6.readString(arg7);
            }

            if((this.flags & 524288) != 0) {
                this.bot_inline_placeholder = arg6.readString(arg7);
            }

            if((this.flags & 4194304) != 0) {
                this.lang_code = arg6.readString(arg7);
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_user.constructor);
            int v0 = this.self ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.contact ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.mutual_contact ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            v0 = this.deleted ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.bot ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            v0 = this.bot_chat_history ? this.flags | 32768 : this.flags & -32769;
            this.flags = v0;
            v0 = this.bot_nochats ? this.flags | 65536 : this.flags & -65537;
            this.flags = v0;
            v0 = this.verified ? this.flags | 131072 : this.flags & -131073;
            this.flags = v0;
            int v1 = 262144;
            v0 = this.restricted ? this.flags | v1 : this.flags & -262145;
            this.flags = v0;
            v0 = this.min ? this.flags | 1048576 : this.flags & -1048577;
            this.flags = v0;
            v0 = this.bot_inline_geo ? this.flags | 2097152 : this.flags & -2097153;
            this.flags = v0;
            arg5.writeInt32(this.flags);
            arg5.writeInt32(this.id);
            if((this.flags & 1) != 0) {
                arg5.writeInt64(this.access_hash);
            }

            if((this.flags & 2) != 0) {
                arg5.writeString(this.first_name);
            }

            if((this.flags & 4) != 0) {
                arg5.writeString(this.last_name);
            }

            if((this.flags & 8) != 0) {
                arg5.writeString(this.username);
            }

            if((this.flags & 16) != 0) {
                arg5.writeString(this.phone);
            }

            if((this.flags & 32) != 0) {
                this.photo.serializeToStream(arg5);
            }

            if((this.flags & 64) != 0) {
                this.status.serializeToStream(arg5);
            }

            if((this.flags & 16384) != 0) {
                arg5.writeInt32(this.bot_info_version);
            }

            if((this.flags & v1) != 0) {
                arg5.writeString(this.restriction_reason);
            }

            if((this.flags & 524288) != 0) {
                arg5.writeString(this.bot_inline_placeholder);
            }

            if((this.flags & 4194304) != 0) {
                arg5.writeString(this.lang_code);
            }
        }
    }

    public class TL_userContact_old2 extends User {
        public static int constructor = -894214632;

        static {
        }

        public TL_userContact_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.username = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.phone = arg3.readString(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userContact_old2.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeString(this.username);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.phone);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userContact_old extends TL_userContact_old2 {
        public static int constructor = -218397927;

        static {
        }

        public TL_userContact_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.phone = arg3.readString(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userContact_old.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.phone);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userDeleted_old2 extends User {
        public static int constructor = -704549510;

        static {
        }

        public TL_userDeleted_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.username = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userDeleted_old2.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.username);
        }
    }

    public class TL_userDeleted_old extends TL_userDeleted_old2 {
        public static int constructor = -1298475060;

        static {
        }

        public TL_userDeleted_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userDeleted_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
        }
    }

    public class TL_userEmpty extends User {
        public static int constructor = 537022650;

        static {
        }

        public TL_userEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userEmpty.constructor);
            arg2.writeInt32(this.id);
        }
    }

    public class TL_userForeign_old2 extends User {
        public static int constructor = 123533224;

        static {
        }

        public TL_userForeign_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.username = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userForeign_old2.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeString(this.username);
            arg3.writeInt64(this.access_hash);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userForeign_old extends TL_userForeign_old2 {
        public static int constructor = 1377093789;

        static {
        }

        public TL_userForeign_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userForeign_old.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeInt64(this.access_hash);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userFull extends TLObject {
        public String about;
        public boolean blocked;
        public BotInfo bot_info;
        public int common_chats_count;
        public static int constructor = 253890367;
        public int flags;
        public TL_contacts_link link;
        public PeerNotifySettings notify_settings;
        public boolean phone_calls_available;
        public boolean phone_calls_private;
        public Photo profile_photo;
        public User user;

        static {
        }

        public TL_userFull() {
            super();
        }

        public static TL_userFull TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_userFull.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_userFull", Integer.valueOf(arg2)));
            }

            TL_userFull v2 = new TL_userFull();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg4, boolean arg5) {
            this.flags = arg4.readInt32(arg5);
            boolean v1 = true;
            boolean v0 = (this.flags & 1) != 0 ? true : false;
            this.blocked = v0;
            v0 = (this.flags & 16) != 0 ? true : false;
            this.phone_calls_available = v0;
            if((this.flags & 32) != 0) {
            }
            else {
                v1 = false;
            }

            this.phone_calls_private = v1;
            this.user = User.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 2) != 0) {
                this.about = arg4.readString(arg5);
            }

            this.link = TL_contacts_link.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 4) != 0) {
                this.profile_photo = Photo.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            this.notify_settings = PeerNotifySettings.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            if((this.flags & 8) != 0) {
                this.bot_info = BotInfo.TLdeserialize(arg4, arg4.readInt32(arg5), arg5);
            }

            this.common_chats_count = arg4.readInt32(arg5);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userFull.constructor);
            int v0 = this.blocked ? this.flags | 1 : this.flags & -2;
            this.flags = v0;
            v0 = this.phone_calls_available ? this.flags | 16 : this.flags & -17;
            this.flags = v0;
            v0 = this.phone_calls_private ? this.flags | 32 : this.flags & -33;
            this.flags = v0;
            arg2.writeInt32(this.flags);
            this.user.serializeToStream(arg2);
            if((this.flags & 2) != 0) {
                arg2.writeString(this.about);
            }

            this.link.serializeToStream(arg2);
            if((this.flags & 4) != 0) {
                this.profile_photo.serializeToStream(arg2);
            }

            this.notify_settings.serializeToStream(arg2);
            if((this.flags & 8) != 0) {
                this.bot_info.serializeToStream(arg2);
            }

            arg2.writeInt32(this.common_chats_count);
        }
    }

    public class TL_userProfilePhoto extends UserProfilePhoto {
        public static int constructor = -715532088;

        static {
        }

        public TL_userProfilePhoto() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.photo_id = arg3.readInt64(arg4);
            this.photo_small = FileLocation.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.photo_big = FileLocation.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userProfilePhoto.constructor);
            arg3.writeInt64(this.photo_id);
            this.photo_small.serializeToStream(arg3);
            this.photo_big.serializeToStream(arg3);
        }
    }

    public class TL_userProfilePhotoEmpty extends UserProfilePhoto {
        public static int constructor = 1326562017;

        static {
        }

        public TL_userProfilePhotoEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userProfilePhotoEmpty.constructor);
        }
    }

    public class TL_userProfilePhoto_old extends TL_userProfilePhoto {
        public static int constructor = -1727196013;

        static {
        }

        public TL_userProfilePhoto_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.photo_small = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.photo_big = FileLocation.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userProfilePhoto_old.constructor);
            this.photo_small.serializeToStream(arg2);
            this.photo_big.serializeToStream(arg2);
        }
    }

    public class TL_userRequest_old2 extends User {
        public static int constructor = -640891665;

        static {
        }

        public TL_userRequest_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.username = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.phone = arg3.readString(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userRequest_old2.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeString(this.username);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.phone);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userRequest_old extends TL_userRequest_old2 {
        public static int constructor = 585682608;

        static {
        }

        public TL_userRequest_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt32(arg4);
            this.first_name = arg3.readString(arg4);
            this.last_name = arg3.readString(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.phone = arg3.readString(arg4);
            this.photo = UserProfilePhoto.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.status = UserStatus.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_userRequest_old.constructor);
            arg3.writeInt32(this.id);
            arg3.writeString(this.first_name);
            arg3.writeString(this.last_name);
            arg3.writeInt64(this.access_hash);
            arg3.writeString(this.phone);
            this.photo.serializeToStream(arg3);
            this.status.serializeToStream(arg3);
        }
    }

    public class TL_userSelf_old2 extends TL_userSelf_old3 {
        public static int constructor = 1879553105;

        static {
        }

        public TL_userSelf_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.username = arg2.readString(arg3);
            this.phone = arg2.readString(arg3);
            this.photo = UserProfilePhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.status = UserStatus.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.inactive = arg2.readBool(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userSelf_old2.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.username);
            arg2.writeString(this.phone);
            this.photo.serializeToStream(arg2);
            this.status.serializeToStream(arg2);
            arg2.writeBool(this.inactive);
        }
    }

    public class TL_userSelf_old3 extends User {
        public static int constructor = 476112392;

        static {
        }

        public TL_userSelf_old3() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.username = arg2.readString(arg3);
            this.phone = arg2.readString(arg3);
            this.photo = UserProfilePhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.status = UserStatus.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userSelf_old3.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.username);
            arg2.writeString(this.phone);
            this.photo.serializeToStream(arg2);
            this.status.serializeToStream(arg2);
        }
    }

    public class TL_userSelf_old extends TL_userSelf_old3 {
        public static int constructor = 1912944108;

        static {
        }

        public TL_userSelf_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.first_name = arg2.readString(arg3);
            this.last_name = arg2.readString(arg3);
            this.phone = arg2.readString(arg3);
            this.photo = UserProfilePhoto.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.status = UserStatus.TLdeserialize(arg2, arg2.readInt32(arg3), arg3);
            this.inactive = arg2.readBool(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userSelf_old.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.first_name);
            arg2.writeString(this.last_name);
            arg2.writeString(this.phone);
            this.photo.serializeToStream(arg2);
            this.status.serializeToStream(arg2);
            arg2.writeBool(this.inactive);
        }
    }

    public class TL_userStatusEmpty extends UserStatus {
        public static int constructor = 164646985;

        static {
        }

        public TL_userStatusEmpty() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusEmpty.constructor);
        }
    }

    public class TL_userStatusLastMonth extends UserStatus {
        public static int constructor = 2011940674;

        static {
        }

        public TL_userStatusLastMonth() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusLastMonth.constructor);
        }
    }

    public class TL_userStatusLastWeek extends UserStatus {
        public static int constructor = 129960444;

        static {
        }

        public TL_userStatusLastWeek() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusLastWeek.constructor);
        }
    }

    public class TL_userStatusOffline extends UserStatus {
        public static int constructor = 9203775;

        static {
        }

        public TL_userStatusOffline() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.expires = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusOffline.constructor);
            arg2.writeInt32(this.expires);
        }
    }

    public class TL_userStatusOnline extends UserStatus {
        public static int constructor = -306628279;

        static {
        }

        public TL_userStatusOnline() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.expires = arg1.readInt32(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusOnline.constructor);
            arg2.writeInt32(this.expires);
        }
    }

    public class TL_userStatusRecently extends UserStatus {
        public static int constructor = -496024847;

        static {
        }

        public TL_userStatusRecently() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_userStatusRecently.constructor);
        }
    }

    public class TL_user_layer65 extends TL_user {
        public static int constructor = -787638374;

        static {
        }

        public TL_user_layer65() {
            super();
        }

        public void readParams(AbstractSerializedData arg6, boolean arg7) {
            this.flags = arg6.readInt32(arg7);
            boolean v1 = false;
            boolean v0 = (this.flags & 1024) != 0 ? true : false;
            this.self = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.contact = v0;
            v0 = (this.flags & 4096) != 0 ? true : false;
            this.mutual_contact = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.deleted = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.bot = v0;
            v0 = (this.flags & 32768) != 0 ? true : false;
            this.bot_chat_history = v0;
            v0 = (this.flags & 65536) != 0 ? true : false;
            this.bot_nochats = v0;
            v0 = (this.flags & 131072) != 0 ? true : false;
            this.verified = v0;
            int v3 = 262144;
            v0 = (this.flags & v3) != 0 ? true : false;
            this.restricted = v0;
            v0 = (this.flags & 1048576) != 0 ? true : false;
            this.min = v0;
            if((this.flags & 2097152) != 0) {
                v1 = true;
            }

            this.bot_inline_geo = v1;
            this.id = arg6.readInt32(arg7);
            if((this.flags & 1) != 0) {
                this.access_hash = arg6.readInt64(arg7);
            }

            if((this.flags & 2) != 0) {
                this.first_name = arg6.readString(arg7);
            }

            if((this.flags & 4) != 0) {
                this.last_name = arg6.readString(arg7);
            }

            if((this.flags & 8) != 0) {
                this.username = arg6.readString(arg7);
            }

            if((this.flags & 16) != 0) {
                this.phone = arg6.readString(arg7);
            }

            if((this.flags & 32) != 0) {
                this.photo = UserProfilePhoto.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
            }

            if((this.flags & 64) != 0) {
                this.status = UserStatus.TLdeserialize(arg6, arg6.readInt32(arg7), arg7);
            }

            if((this.flags & 16384) != 0) {
                this.bot_info_version = arg6.readInt32(arg7);
            }

            if((this.flags & v3) != 0) {
                this.restriction_reason = arg6.readString(arg7);
            }

            if((this.flags & 524288) != 0) {
                this.bot_inline_placeholder = arg6.readString(arg7);
            }
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_user_layer65.constructor);
            int v0 = this.self ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.contact ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.mutual_contact ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            v0 = this.deleted ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.bot ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            v0 = this.bot_chat_history ? this.flags | 32768 : this.flags & -32769;
            this.flags = v0;
            v0 = this.bot_nochats ? this.flags | 65536 : this.flags & -65537;
            this.flags = v0;
            v0 = this.verified ? this.flags | 131072 : this.flags & -131073;
            this.flags = v0;
            int v1 = 262144;
            v0 = this.restricted ? this.flags | v1 : this.flags & -262145;
            this.flags = v0;
            v0 = this.min ? this.flags | 1048576 : this.flags & -1048577;
            this.flags = v0;
            v0 = this.bot_inline_geo ? this.flags | 2097152 : this.flags & -2097153;
            this.flags = v0;
            arg5.writeInt32(this.flags);
            arg5.writeInt32(this.id);
            if((this.flags & 1) != 0) {
                arg5.writeInt64(this.access_hash);
            }

            if((this.flags & 2) != 0) {
                arg5.writeString(this.first_name);
            }

            if((this.flags & 4) != 0) {
                arg5.writeString(this.last_name);
            }

            if((this.flags & 8) != 0) {
                arg5.writeString(this.username);
            }

            if((this.flags & 16) != 0) {
                arg5.writeString(this.phone);
            }

            if((this.flags & 32) != 0) {
                this.photo.serializeToStream(arg5);
            }

            if((this.flags & 64) != 0) {
                this.status.serializeToStream(arg5);
            }

            if((this.flags & 16384) != 0) {
                arg5.writeInt32(this.bot_info_version);
            }

            if((this.flags & v1) != 0) {
                arg5.writeString(this.restriction_reason);
            }

            if((this.flags & 524288) != 0) {
                arg5.writeString(this.bot_inline_placeholder);
            }
        }
    }

    public class TL_user_old extends TL_user {
        public static int constructor = 585404530;

        static {
        }

        public TL_user_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.flags = arg5.readInt32(arg6);
            boolean v1 = false;
            boolean v0 = (this.flags & 1024) != 0 ? true : false;
            this.self = v0;
            v0 = (this.flags & 2048) != 0 ? true : false;
            this.contact = v0;
            v0 = (this.flags & 4096) != 0 ? true : false;
            this.mutual_contact = v0;
            v0 = (this.flags & 8192) != 0 ? true : false;
            this.deleted = v0;
            v0 = (this.flags & 16384) != 0 ? true : false;
            this.bot = v0;
            v0 = (this.flags & 32768) != 0 ? true : false;
            this.bot_chat_history = v0;
            v0 = (this.flags & 65536) != 0 ? true : false;
            this.bot_nochats = v0;
            v0 = (this.flags & 131072) != 0 ? true : false;
            this.verified = v0;
            if((this.flags & 262144) != 0) {
                v1 = true;
            }

            this.explicit_content = v1;
            this.id = arg5.readInt32(arg6);
            if((this.flags & 1) != 0) {
                this.access_hash = arg5.readInt64(arg6);
            }

            if((this.flags & 2) != 0) {
                this.first_name = arg5.readString(arg6);
            }

            if((this.flags & 4) != 0) {
                this.last_name = arg5.readString(arg6);
            }

            if((this.flags & 8) != 0) {
                this.username = arg5.readString(arg6);
            }

            if((this.flags & 16) != 0) {
                this.phone = arg5.readString(arg6);
            }

            if((this.flags & 32) != 0) {
                this.photo = UserProfilePhoto.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 64) != 0) {
                this.status = UserStatus.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
            }

            if((this.flags & 16384) != 0) {
                this.bot_info_version = arg5.readInt32(arg6);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_user_old.constructor);
            int v0 = this.self ? this.flags | 1024 : this.flags & -1025;
            this.flags = v0;
            v0 = this.contact ? this.flags | 2048 : this.flags & -2049;
            this.flags = v0;
            v0 = this.mutual_contact ? this.flags | 4096 : this.flags & -4097;
            this.flags = v0;
            v0 = this.deleted ? this.flags | 8192 : this.flags & -8193;
            this.flags = v0;
            v0 = this.bot ? this.flags | 16384 : this.flags & -16385;
            this.flags = v0;
            v0 = this.bot_chat_history ? this.flags | 32768 : this.flags & -32769;
            this.flags = v0;
            v0 = this.bot_nochats ? this.flags | 65536 : this.flags & -65537;
            this.flags = v0;
            v0 = this.verified ? this.flags | 131072 : this.flags & -131073;
            this.flags = v0;
            v0 = this.explicit_content ? this.flags | 262144 : this.flags & -262145;
            this.flags = v0;
            arg3.writeInt32(this.flags);
            arg3.writeInt32(this.id);
            if((this.flags & 1) != 0) {
                arg3.writeInt64(this.access_hash);
            }

            if((this.flags & 2) != 0) {
                arg3.writeString(this.first_name);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.last_name);
            }

            if((this.flags & 8) != 0) {
                arg3.writeString(this.username);
            }

            if((this.flags & 16) != 0) {
                arg3.writeString(this.phone);
            }

            if((this.flags & 32) != 0) {
                this.photo.serializeToStream(arg3);
            }

            if((this.flags & 64) != 0) {
                this.status.serializeToStream(arg3);
            }

            if((this.flags & 16384) != 0) {
                arg3.writeInt32(this.bot_info_version);
            }
        }
    }

    public class TL_users_getFullUser extends TLObject {
        public static int constructor = -902781519;
        public InputUser id;

        static {
        }

        public TL_users_getFullUser() {
            super();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg1, int arg2, boolean arg3) {
            return TL_userFull.TLdeserialize(arg1, arg2, arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_users_getFullUser.constructor);
            this.id.serializeToStream(arg2);
        }
    }

    public class TL_users_getUsers extends TLObject {
        public static int constructor = 227648840;
        public ArrayList id;

        static {
        }

        public TL_users_getUsers() {
            super();
            this.id = new ArrayList();
        }

        public TLObject deserializeResponse(AbstractSerializedData arg5, int arg6, boolean arg7) {
            Vector v6 = new Vector();
            int v0 = arg5.readInt32(arg7);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                User v2 = User.TLdeserialize(arg5, arg5.readInt32(arg7), arg7);
                if(v2 == null) {
                    return ((TLObject)v6);
                }

                v6.objects.add(v2);
            }

            return ((TLObject)v6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_users_getUsers.constructor);
            arg4.writeInt32(481674261);
            int v0 = this.id.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.id.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_videoEmpty_layer45 extends Video {
        public static int constructor = -1056548696;

        static {
        }

        public TL_videoEmpty_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_videoEmpty_layer45.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_videoEncrypted extends TL_video_layer45 {
        public static int constructor = 1431655763;

        static {
        }

        public TL_videoEncrypted() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.caption = arg3.readString(arg4);
            this.duration = arg3.readInt32(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
            this.key = arg3.readByteArray(arg4);
            this.iv = arg3.readByteArray(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_videoEncrypted.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeString(this.caption);
            arg3.writeInt32(this.duration);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
            arg3.writeByteArray(this.key);
            arg3.writeByteArray(this.iv);
        }
    }

    public class TL_video_layer45 extends Video {
        public static int constructor = -148338733;

        static {
        }

        public TL_video_layer45() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_video_layer45.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
        }
    }

    public class TL_video_old2 extends TL_video_layer45 {
        public static int constructor = 948937617;

        static {
        }

        public TL_video_old2() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.caption = arg3.readString(arg4);
            this.duration = arg3.readInt32(arg4);
            this.mime_type = arg3.readString(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_video_old2.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeString(this.caption);
            arg3.writeInt32(this.duration);
            arg3.writeString(this.mime_type);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
        }
    }

    public class TL_video_old3 extends TL_video_layer45 {
        public static int constructor = -291550643;

        static {
        }

        public TL_video_old3() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.duration = arg3.readInt32(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_video_old3.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeInt32(this.duration);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
        }
    }

    public class TL_video_old extends TL_video_layer45 {
        public static int constructor = 1510253727;

        static {
        }

        public TL_video_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.access_hash = arg3.readInt64(arg4);
            this.user_id = arg3.readInt32(arg4);
            this.date = arg3.readInt32(arg4);
            this.caption = arg3.readString(arg4);
            this.duration = arg3.readInt32(arg4);
            this.size = arg3.readInt32(arg4);
            this.thumb = PhotoSize.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            this.dc_id = arg3.readInt32(arg4);
            this.w = arg3.readInt32(arg4);
            this.h = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_video_old.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt64(this.access_hash);
            arg3.writeInt32(this.user_id);
            arg3.writeInt32(this.date);
            arg3.writeString(this.caption);
            arg3.writeInt32(this.duration);
            arg3.writeInt32(this.size);
            this.thumb.serializeToStream(arg3);
            arg3.writeInt32(this.dc_id);
            arg3.writeInt32(this.w);
            arg3.writeInt32(this.h);
        }
    }

    public class TL_wallPaper extends WallPaper {
        public static int constructor = -860866985;

        static {
        }

        public TL_wallPaper() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.id = arg5.readInt32(arg6);
            this.title = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                PhotoSize v2 = PhotoSize.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.sizes.add(v2);
                ++v1;
            }

            this.color = arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_wallPaper.constructor);
            arg4.writeInt32(this.id);
            arg4.writeString(this.title);
            arg4.writeInt32(481674261);
            int v0 = this.sizes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.sizes.get(v1).serializeToStream(arg4);
            }

            arg4.writeInt32(this.color);
        }
    }

    public class TL_wallPaperSolid extends WallPaper {
        public static int constructor = 1662091044;

        static {
        }

        public TL_wallPaperSolid() {
            super();
        }

        public void readParams(AbstractSerializedData arg2, boolean arg3) {
            this.id = arg2.readInt32(arg3);
            this.title = arg2.readString(arg3);
            this.bg_color = arg2.readInt32(arg3);
            this.color = arg2.readInt32(arg3);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_wallPaperSolid.constructor);
            arg2.writeInt32(this.id);
            arg2.writeString(this.title);
            arg2.writeInt32(this.bg_color);
            arg2.writeInt32(this.color);
        }
    }

    public class TL_webAuthorization extends TLObject {
        public int bot_id;
        public String browser;
        public static int constructor = -892779534;
        public int date_active;
        public int date_created;
        public String domain;
        public long hash;
        public String ip;
        public String platform;
        public String region;

        static {
        }

        public TL_webAuthorization() {
            super();
        }

        public static TL_webAuthorization TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            if(TL_webAuthorization.constructor != arg2) {
                if(!arg3) {
                    return null;
                }

                throw new RuntimeException(String.format("can\'t parse magic %x in TL_webAuthorization", Integer.valueOf(arg2)));
            }

            TL_webAuthorization v2 = new TL_webAuthorization();
            v2.readParams(arg1, arg3);
            return v2;
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.hash = arg3.readInt64(arg4);
            this.bot_id = arg3.readInt32(arg4);
            this.domain = arg3.readString(arg4);
            this.browser = arg3.readString(arg4);
            this.platform = arg3.readString(arg4);
            this.date_created = arg3.readInt32(arg4);
            this.date_active = arg3.readInt32(arg4);
            this.ip = arg3.readString(arg4);
            this.region = arg3.readString(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webAuthorization.constructor);
            arg3.writeInt64(this.hash);
            arg3.writeInt32(this.bot_id);
            arg3.writeString(this.domain);
            arg3.writeString(this.browser);
            arg3.writeString(this.platform);
            arg3.writeInt32(this.date_created);
            arg3.writeInt32(this.date_active);
            arg3.writeString(this.ip);
            arg3.writeString(this.region);
        }
    }

    public class TL_webDocument extends WebDocument {
        public static int constructor = 475467473;

        static {
        }

        public TL_webDocument() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.url = arg5.readString(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.size = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_webDocument.constructor);
            arg4.writeString(this.url);
            arg4.writeInt64(this.access_hash);
            arg4.writeInt32(this.size);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_webDocumentNoProxy extends WebDocument {
        public static int constructor = -104284986;

        static {
        }

        public TL_webDocumentNoProxy() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.url = arg5.readString(arg6);
            this.size = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }
        }

        public void serializeToStream(AbstractSerializedData arg4) {
            arg4.writeInt32(TL_webDocumentNoProxy.constructor);
            arg4.writeString(this.url);
            arg4.writeInt32(this.size);
            arg4.writeString(this.mime_type);
            arg4.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg4.writeInt32(v0);
            int v1;
            for(v1 = 0; v1 < v0; ++v1) {
                this.attributes.get(v1).serializeToStream(arg4);
            }
        }
    }

    public class TL_webDocument_layer81 extends TL_webDocument {
        public static int constructor = -971322408;

        static {
        }

        public TL_webDocument_layer81() {
            super();
        }

        public void readParams(AbstractSerializedData arg5, boolean arg6) {
            this.url = arg5.readString(arg6);
            this.access_hash = arg5.readInt64(arg6);
            this.size = arg5.readInt32(arg6);
            this.mime_type = arg5.readString(arg6);
            int v0 = arg5.readInt32(arg6);
            int v1 = 0;
            if(v0 != 481674261) {
                if(!arg6) {
                    return;
                }

                throw new RuntimeException(String.format("wrong Vector magic, got %x", Integer.valueOf(v0)));
            }

            v0 = arg5.readInt32(arg6);
            while(v1 < v0) {
                DocumentAttribute v2 = DocumentAttribute.TLdeserialize(arg5, arg5.readInt32(arg6), arg6);
                if(v2 == null) {
                    return;
                }

                this.attributes.add(v2);
                ++v1;
            }

            arg5.readInt32(arg6);
        }

        public void serializeToStream(AbstractSerializedData arg5) {
            arg5.writeInt32(TL_webDocument_layer81.constructor);
            arg5.writeString(this.url);
            arg5.writeInt64(this.access_hash);
            arg5.writeInt32(this.size);
            arg5.writeString(this.mime_type);
            arg5.writeInt32(481674261);
            int v0 = this.attributes.size();
            arg5.writeInt32(v0);
            int v2;
            for(v2 = 0; v2 < v0; ++v2) {
                this.attributes.get(v2).serializeToStream(arg5);
            }

            arg5.writeInt32(0);
        }
    }

    public class TL_webPage extends WebPage {
        public static int constructor = 1594340540;

        static {
        }

        public TL_webPage() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.url = arg3.readString(arg4);
            this.display_url = arg3.readString(arg4);
            this.hash = arg3.readInt32(arg4);
            if((this.flags & 1) != 0) {
                this.type = arg3.readString(arg4);
            }

            if((this.flags & 2) != 0) {
                this.site_name = arg3.readString(arg4);
            }

            if((this.flags & 4) != 0) {
                this.title = arg3.readString(arg4);
            }

            if((this.flags & 8) != 0) {
                this.description = arg3.readString(arg4);
            }

            if((this.flags & 16) != 0) {
                this.photo = Photo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_url = arg3.readString(arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_type = arg3.readString(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_width = arg3.readInt32(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_height = arg3.readInt32(arg4);
            }

            if((this.flags & 128) != 0) {
                this.duration = arg3.readInt32(arg4);
            }

            if((this.flags & 256) != 0) {
                this.author = arg3.readString(arg4);
            }

            if((this.flags & 512) != 0) {
                this.document = Document.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 1024) != 0) {
                this.cached_page = Page.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webPage.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeString(this.url);
            arg3.writeString(this.display_url);
            arg3.writeInt32(this.hash);
            if((this.flags & 1) != 0) {
                arg3.writeString(this.type);
            }

            if((this.flags & 2) != 0) {
                arg3.writeString(this.site_name);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.title);
            }

            if((this.flags & 8) != 0) {
                arg3.writeString(this.description);
            }

            if((this.flags & 16) != 0) {
                this.photo.serializeToStream(arg3);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_url);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_type);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_width);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_height);
            }

            if((this.flags & 128) != 0) {
                arg3.writeInt32(this.duration);
            }

            if((this.flags & 256) != 0) {
                arg3.writeString(this.author);
            }

            if((this.flags & 512) != 0) {
                this.document.serializeToStream(arg3);
            }

            if((this.flags & 1024) != 0) {
                this.cached_page.serializeToStream(arg3);
            }
        }
    }

    public class TL_webPageEmpty extends WebPage {
        public static int constructor = -350980120;

        static {
        }

        public TL_webPageEmpty() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.id = arg1.readInt64(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webPageEmpty.constructor);
            arg3.writeInt64(this.id);
        }
    }

    public class TL_webPageNotModified extends WebPage {
        public static int constructor = -2054908813;

        static {
        }

        public TL_webPageNotModified() {
            super();
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_webPageNotModified.constructor);
        }
    }

    public class TL_webPagePending extends WebPage {
        public static int constructor = -981018084;

        static {
        }

        public TL_webPagePending() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.id = arg3.readInt64(arg4);
            this.date = arg3.readInt32(arg4);
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webPagePending.constructor);
            arg3.writeInt64(this.id);
            arg3.writeInt32(this.date);
        }
    }

    public class TL_webPageUrlPending extends WebPage {
        public static int constructor = -736472729;

        static {
        }

        public TL_webPageUrlPending() {
            super();
        }

        public void readParams(AbstractSerializedData arg1, boolean arg2) {
            this.url = arg1.readString(arg2);
        }

        public void serializeToStream(AbstractSerializedData arg2) {
            arg2.writeInt32(TL_webPageUrlPending.constructor);
            arg2.writeString(this.url);
        }
    }

    public class TL_webPage_layer58 extends TL_webPage {
        public static int constructor = -897446185;

        static {
        }

        public TL_webPage_layer58() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.url = arg3.readString(arg4);
            this.display_url = arg3.readString(arg4);
            if((this.flags & 1) != 0) {
                this.type = arg3.readString(arg4);
            }

            if((this.flags & 2) != 0) {
                this.site_name = arg3.readString(arg4);
            }

            if((this.flags & 4) != 0) {
                this.title = arg3.readString(arg4);
            }

            if((this.flags & 8) != 0) {
                this.description = arg3.readString(arg4);
            }

            if((this.flags & 16) != 0) {
                this.photo = Photo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_url = arg3.readString(arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_type = arg3.readString(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_width = arg3.readInt32(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_height = arg3.readInt32(arg4);
            }

            if((this.flags & 128) != 0) {
                this.duration = arg3.readInt32(arg4);
            }

            if((this.flags & 256) != 0) {
                this.author = arg3.readString(arg4);
            }

            if((this.flags & 512) != 0) {
                this.document = Document.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webPage_layer58.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeString(this.url);
            arg3.writeString(this.display_url);
            if((this.flags & 1) != 0) {
                arg3.writeString(this.type);
            }

            if((this.flags & 2) != 0) {
                arg3.writeString(this.site_name);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.title);
            }

            if((this.flags & 8) != 0) {
                arg3.writeString(this.description);
            }

            if((this.flags & 16) != 0) {
                this.photo.serializeToStream(arg3);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_url);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_type);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_width);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_height);
            }

            if((this.flags & 128) != 0) {
                arg3.writeInt32(this.duration);
            }

            if((this.flags & 256) != 0) {
                arg3.writeString(this.author);
            }

            if((this.flags & 512) != 0) {
                this.document.serializeToStream(arg3);
            }
        }
    }

    public class TL_webPage_old extends TL_webPage {
        public static int constructor = -1558273867;

        static {
        }

        public TL_webPage_old() {
            super();
        }

        public void readParams(AbstractSerializedData arg3, boolean arg4) {
            this.flags = arg3.readInt32(arg4);
            this.id = arg3.readInt64(arg4);
            this.url = arg3.readString(arg4);
            this.display_url = arg3.readString(arg4);
            if((this.flags & 1) != 0) {
                this.type = arg3.readString(arg4);
            }

            if((this.flags & 2) != 0) {
                this.site_name = arg3.readString(arg4);
            }

            if((this.flags & 4) != 0) {
                this.title = arg3.readString(arg4);
            }

            if((this.flags & 8) != 0) {
                this.description = arg3.readString(arg4);
            }

            if((this.flags & 16) != 0) {
                this.photo = Photo.TLdeserialize(arg3, arg3.readInt32(arg4), arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_url = arg3.readString(arg4);
            }

            if((this.flags & 32) != 0) {
                this.embed_type = arg3.readString(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_width = arg3.readInt32(arg4);
            }

            if((this.flags & 64) != 0) {
                this.embed_height = arg3.readInt32(arg4);
            }

            if((this.flags & 128) != 0) {
                this.duration = arg3.readInt32(arg4);
            }

            if((this.flags & 256) != 0) {
                this.author = arg3.readString(arg4);
            }
        }

        public void serializeToStream(AbstractSerializedData arg3) {
            arg3.writeInt32(TL_webPage_old.constructor);
            arg3.writeInt32(this.flags);
            arg3.writeInt64(this.id);
            arg3.writeString(this.url);
            arg3.writeString(this.display_url);
            if((this.flags & 1) != 0) {
                arg3.writeString(this.type);
            }

            if((this.flags & 2) != 0) {
                arg3.writeString(this.site_name);
            }

            if((this.flags & 4) != 0) {
                arg3.writeString(this.title);
            }

            if((this.flags & 8) != 0) {
                arg3.writeString(this.description);
            }

            if((this.flags & 16) != 0) {
                this.photo.serializeToStream(arg3);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_url);
            }

            if((this.flags & 32) != 0) {
                arg3.writeString(this.embed_type);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_width);
            }

            if((this.flags & 64) != 0) {
                arg3.writeInt32(this.embed_height);
            }

            if((this.flags & 128) != 0) {
                arg3.writeInt32(this.duration);
            }

            if((this.flags & 256) != 0) {
                arg3.writeString(this.author);
            }
        }
    }

    public abstract class TopPeerCategory extends TLObject {
        public TopPeerCategory() {
            super();
        }

        public static TopPeerCategory TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_topPeerCategoryPhoneCalls v0;
            TL_topPeerCategoryChannels v0_2;
            switch(arg2) {
                case -1419371685: {
                    TL_topPeerCategoryBotsPM v0_1 = new TL_topPeerCategoryBotsPM();
                    break;
                }
                case -1122524854: {
                    TL_topPeerCategoryGroups v0_5 = new TL_topPeerCategoryGroups();
                    break;
                }
                case 104314861: {
                    TL_topPeerCategoryCorrespondents v0_4 = new TL_topPeerCategoryCorrespondents();
                    break;
                }
                case 344356834: {
                    TL_topPeerCategoryBotsInline v0_3 = new TL_topPeerCategoryBotsInline();
                    break;
                }
                case 371037736: {
                    v0_2 = new TL_topPeerCategoryChannels();
                    break;
                }
                case 511092620: {
                    v0 = new TL_topPeerCategoryPhoneCalls();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_topPeerCategoryPhoneCalls)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in TopPeerCategory", Integer.valueOf(arg2)));
                }
            }

            if((((TL_topPeerCategoryPhoneCalls)v0_2)) != null) {
                ((TopPeerCategory)v0_2).readParams(arg1, arg3);
            }

            return ((TopPeerCategory)v0_2);
        }
    }

    public abstract class Update extends TLObject {
        public Update() {
            super();
        }

        public static Update TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_updateWebPage v0;
            TL_updateEncryption v0_12;
            switch(arg2) {
                case -299124375: {
                    TL_updateDraftMessage v0_59 = new TL_updateDraftMessage();
                    break;
                }
                case -298113238: {
                    TL_updatePrivacy v0_58 = new TL_updatePrivacy();
                    break;
                }
                case 92188360: {
                    TL_updateGroupCallParticipant v0_57 = new TL_updateGroupCallParticipant();
                    break;
                }
                case 125178264: {
                    TL_updateChatParticipants v0_56 = new TL_updateChatParticipants();
                    break;
                }
                case 196268545: {
                    TL_updateStickerSetsOrder v0_55 = new TL_updateStickerSetsOrder();
                    break;
                }
                case 281165899: {
                    TL_updateLangPackTooLong v0_54 = new TL_updateLangPackTooLong();
                    break;
                }
                case 314130811: {
                    TL_updateUserPhone v0_53 = new TL_updateUserPhone();
                    break;
                }
                case 314359194: {
                    TL_updateNewEncryptedMessage v0_52 = new TL_updateNewEncryptedMessage();
                    break;
                }
                case 386986326: {
                    TL_updateEncryptedChatTyping v0_51 = new TL_updateEncryptedChatTyping();
                    break;
                }
                case 433225532: {
                    TL_updateDialogPinned v0_50 = new TL_updateDialogPinned();
                    break;
                }
                case 457133559: {
                    TL_updateEditChannelMessage v0_49 = new TL_updateEditChannelMessage();
                    break;
                }
                case 469489699: {
                    TL_updateUserStatus v0_48 = new TL_updateUserStatus();
                    break;
                }
                case 522914557: {
                    TL_updateNewMessage v0_47 = new TL_updateNewMessage();
                    break;
                }
                case 628472761: {
                    TL_updateContactRegistered v0_46 = new TL_updateContactRegistered();
                    break;
                }
                case 634833351: {
                    TL_updateReadChannelOutbox v0_45 = new TL_updateReadChannelOutbox();
                    break;
                }
                case 791617983: {
                    TL_updateReadHistoryOutbox v0_43 = new TL_updateReadHistoryOutbox();
                    break;
                }
                case 956179895: {
                    TL_updateEncryptedMessagesRead v0_41 = new TL_updateEncryptedMessagesRead();
                    break;
                }
                case 1081547008: {
                    TL_updateChannelWebPage v0_39 = new TL_updateChannelWebPage();
                    break;
                }
                case 1108669311: {
                    TL_updateReadChannelInbox v0_37 = new TL_updateReadChannelInbox();
                    break;
                }
                case 1135492588: {
                    TL_updateStickerSets v0_35 = new TL_updateStickerSets();
                    break;
                }
                case 1318109142: {
                    TL_updateMessageID v0_33 = new TL_updateMessageID();
                    break;
                }
                case 1442983757: {
                    TL_updateLangPack v0_31 = new TL_updateLangPack();
                    break;
                }
                case 1461528386: {
                    TL_updateReadFeaturedStickers v0_29 = new TL_updateReadFeaturedStickers();
                    break;
                }
                case 1548249383: {
                    TL_updateUserTyping v0_27 = new TL_updateUserTyping();
                    break;
                }
                case 1656358105: {
                    TL_updateNewChannelMessage v0_25 = new TL_updateNewChannelMessage();
                    break;
                }
                case 1753886890: {
                    TL_updateNewStickerSet v0_23 = new TL_updateNewStickerSet();
                    break;
                }
                case 1757493555: {
                    TL_updateReadMessagesContents v0_21 = new TL_updateReadMessagesContents();
                    break;
                }
                case 1851755554: {
                    TL_updateChatParticipantDelete v0_19 = new TL_updateChatParticipantDelete();
                    break;
                }
                case 1855224129: {
                    TL_updateChatAdmins v0_17 = new TL_updateChatAdmins();
                    break;
                }
                case 1887741886: {
                    TL_updateContactsReset v0_15 = new TL_updateContactsReset();
                    break;
                }
                case 1893427255: {
                    TL_updateChannelAvailableMessages v0_13 = new TL_updateChannelAvailableMessages();
                    break;
                }
                case 2139689491: {
                    v0 = new TL_updateWebPage();
                    break;
                }
                case -2131957734: {
                    TL_updateUserBlocked v0_44 = new TL_updateUserBlocked();
                    break;
                }
                case -2046916883: {
                    TL_updateGroupCall v0_42 = new TL_updateGroupCall();
                    break;
                }
                case -1987495099: {
                    TL_updateChannelReadMessagesContents v0_40 = new TL_updateChannelReadMessagesContents();
                    break;
                }
                case -1906403213: {
                    TL_updateDcOptions v0_38 = new TL_updateDcOptions();
                    break;
                }
                case -1821035490: {
                    TL_updateSavedGifs v0_36 = new TL_updateSavedGifs();
                    break;
                }
                case -1791935732: {
                    TL_updateUserPhoto v0_34 = new TL_updateUserPhoto();
                    break;
                }
                case -1738988427: {
                    TL_updateChannelPinnedMessage v0_32 = new TL_updateChannelPinnedMessage();
                    break;
                }
                case -1734268085: {
                    TL_updateChannelMessageViews v0_30 = new TL_updateChannelMessageViews();
                    break;
                }
                case -1721631396: {
                    TL_updateReadHistoryInbox v0_28 = new TL_updateReadHistoryInbox();
                    break;
                }
                case -1706939360: {
                    TL_updateRecentStickers v0_26 = new TL_updateRecentStickers();
                    break;
                }
                case -1704596961: {
                    TL_updateChatUserTyping v0_24 = new TL_updateChatUserTyping();
                    break;
                }
                case -1657903163: {
                    TL_updateContactLink v0_22 = new TL_updateContactLink();
                    break;
                }
                case -1576161051: {
                    TL_updateDeleteMessages v0_20 = new TL_updateDeleteMessages();
                    break;
                }
                case -1574314746: {
                    TL_updateConfig v0_18 = new TL_updateConfig();
                    break;
                }
                case -1489818765: {
                    TL_updateUserName v0_16 = new TL_updateUserName();
                    break;
                }
                case -1425052898: {
                    TL_updatePhoneCall v0_14 = new TL_updatePhoneCall();
                    break;
                }
                case -1264392051: {
                    v0_12 = new TL_updateEncryption();
                    break;
                }
                case -1232070311: {
                    TL_updateChatParticipantAdmin v0_11 = new TL_updateChatParticipantAdmin();
                    break;
                }
                case -1227598250: {
                    TL_updateChannel v0_10 = new TL_updateChannel();
                    break;
                }
                case -1094555409: {
                    TL_updateNotifySettings v0_9 = new TL_updateNotifySettings();
                    break;
                }
                case -1015733815: {
                    TL_updateDeleteChannelMessages v0_8 = new TL_updateDeleteChannelMessages();
                    break;
                }
                case -513517117: {
                    TL_updateDialogUnreadMark v0_7 = new TL_updateDialogUnreadMark();
                    break;
                }
                case -469536605: {
                    TL_updateEditMessage v0_6 = new TL_updateEditMessage();
                    break;
                }
                case -451831443: {
                    TL_updateFavedStickers v0_5 = new TL_updateFavedStickers();
                    break;
                }
                case -364179876: {
                    TL_updateChatParticipantAdd v0_4 = new TL_updateChatParticipantAdd();
                    break;
                }
                case -364071333: {
                    TL_updatePinnedDialogs v0_3 = new TL_updatePinnedDialogs();
                    break;
                }
                case -352032773: {
                    TL_updateChannelTooLong v0_2 = new TL_updateChannelTooLong();
                    break;
                }
                case -337352679: {
                    TL_updateServiceNotification v0_1 = new TL_updateServiceNotification();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_updateWebPage)v0_12)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Update", Integer.valueOf(arg2)));
                }
            }

            if((((TL_updateWebPage)v0_12)) != null) {
                ((Update)v0_12).readParams(arg1, arg3);
            }

            return ((Update)v0_12);
        }
    }

    public abstract class Updates extends TLObject {
        public int chat_id;
        public ArrayList chats;
        public int date;
        public ArrayList entities;
        public int flags;
        public int from_id;
        public MessageFwdHeader fwd_from;
        public int id;
        public MessageMedia media;
        public boolean media_unread;
        public boolean mentioned;
        public String message;
        public boolean out;
        public int pts;
        public int pts_count;
        public int reply_to_msg_id;
        public int seq;
        public int seq_start;
        public boolean silent;
        public Update update;
        public ArrayList updates;
        public int user_id;
        public ArrayList users;
        public int via_bot_id;

        public Updates() {
            super();
            this.updates = new ArrayList();
            this.users = new ArrayList();
            this.chats = new ArrayList();
            this.entities = new ArrayList();
        }

        public static Updates TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_updateShort v0;
            TL_updateShortMessage v0_2;
            switch(arg2) {
                case 301019932: {
                    TL_updateShortSentMessage v0_6 = new TL_updateShortSentMessage();
                    break;
                }
                case 377562760: {
                    TL_updateShortChatMessage v0_5 = new TL_updateShortChatMessage();
                    break;
                }
                case 1918567619: {
                    TL_updatesCombined v0_4 = new TL_updatesCombined();
                    break;
                }
                case 1957577280: {
                    TL_updates v0_3 = new TL_updates();
                    break;
                }
                case 2027216577: {
                    v0 = new TL_updateShort();
                    break;
                }
                case -1857044719: {
                    v0_2 = new TL_updateShortMessage();
                    break;
                }
                case -484987010: {
                    TL_updatesTooLong v0_1 = new TL_updatesTooLong();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_updateShort)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Updates", Integer.valueOf(arg2)));
                }
            }

            if((((TL_updateShort)v0_2)) != null) {
                ((Updates)v0_2).readParams(arg1, arg3);
            }

            return ((Updates)v0_2);
        }
    }

    public class User extends TLObject {
        public long access_hash;
        public boolean bot;
        public boolean bot_chat_history;
        public int bot_info_version;
        public boolean bot_inline_geo;
        public String bot_inline_placeholder;
        public boolean bot_nochats;
        public boolean contact;
        public boolean deleted;
        public boolean explicit_content;
        public String first_name;
        public int flags;
        public int id;
        public boolean inactive;
        public String lang_code;
        public String last_name;
        public boolean min;
        public boolean mutual_contact;
        public String phone;
        public UserProfilePhoto photo;
        public boolean restricted;
        public String restriction_reason;
        public boolean self;
        public UserStatus status;
        public String username;
        public boolean verified;

        public User() {
            super();
        }

        public static User TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_userSelf_old v0;
            TL_userSelf_old2 v0_3;
            switch(arg2) {
                case 1377093789: {
                    TL_userForeign_old v0_5 = new TL_userForeign_old();
                    break;
                }
                case 1879553105: {
                    v0_3 = new TL_userSelf_old2();
                    break;
                }
                case 1912944108: {
                    v0 = new TL_userSelf_old();
                    break;
                }
                case -1298475060: {
                    TL_userDeleted_old v0_8 = new TL_userDeleted_old();
                    break;
                }
                case -894214632: {
                    TL_userContact_old2 v0_6 = new TL_userContact_old2();
                    break;
                }
                case -787638374: {
                    TL_user_layer65 v0_4 = new TL_user_layer65();
                    break;
                }
                case -704549510: {
                    TL_userDeleted_old2 v0_2 = new TL_userDeleted_old2();
                    break;
                }
                case -640891665: {
                    TL_userRequest_old2 v0_1 = new TL_userRequest_old2();
                    break;
                }
                case -218397927: {
                    TL_userContact_old v0_14 = new TL_userContact_old();
                    break;
                }
                case 123533224: {
                    TL_userForeign_old2 v0_13 = new TL_userForeign_old2();
                    break;
                }
                case 476112392: {
                    TL_userSelf_old3 v0_12 = new TL_userSelf_old3();
                    break;
                }
                case 537022650: {
                    TL_userEmpty v0_11 = new TL_userEmpty();
                    break;
                }
                case 585404530: {
                    TL_user_old v0_10 = new TL_user_old();
                    break;
                }
                case 585682608: {
                    TL_userRequest_old v0_9 = new TL_userRequest_old();
                    break;
                }
                case 773059779: {
                    TL_user v0_7 = new TL_user();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_userSelf_old)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in User", Integer.valueOf(arg2)));
                }
            }

            if((((TL_userSelf_old)v0_3)) != null) {
                ((User)v0_3).readParams(arg1, arg3);
            }

            return ((User)v0_3);
        }
    }

    public abstract class UserProfilePhoto extends TLObject {
        public FileLocation photo_big;
        public long photo_id;
        public FileLocation photo_small;

        public UserProfilePhoto() {
            super();
        }

        public static UserProfilePhoto TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_userProfilePhotoEmpty v0;
            if(arg2 == -1727196013) {
                TL_userProfilePhoto_old v0_2 = new TL_userProfilePhoto_old();
            }
            else if(arg2 == -715532088) {
                TL_userProfilePhoto v0_1 = new TL_userProfilePhoto();
            }
            else if(arg2 != 1326562017) {
                v0 = null;
            }
            else {
                v0 = new TL_userProfilePhotoEmpty();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in UserProfilePhoto", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((UserProfilePhoto)v0).readParams(arg1, arg3);
            }

            return ((UserProfilePhoto)v0);
        }
    }

    public abstract class UserStatus extends TLObject {
        public int expires;

        public UserStatus() {
            super();
        }

        public static UserStatus TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_userStatusLastMonth v0;
            TL_userStatusLastWeek v0_3;
            switch(arg2) {
                case -306628279: {
                    TL_userStatusOnline v0_5 = new TL_userStatusOnline();
                    break;
                }
                case 9203775: {
                    TL_userStatusOffline v0_4 = new TL_userStatusOffline();
                    break;
                }
                case 129960444: {
                    v0_3 = new TL_userStatusLastWeek();
                    break;
                }
                case 164646985: {
                    TL_userStatusEmpty v0_2 = new TL_userStatusEmpty();
                    break;
                }
                case 2011940674: {
                    v0 = new TL_userStatusLastMonth();
                    break;
                }
                case -496024847: {
                    TL_userStatusRecently v0_1 = new TL_userStatusRecently();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_userStatusLastMonth)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in UserStatus", Integer.valueOf(arg2)));
                }
            }

            if((((TL_userStatusLastMonth)v0_3)) != null) {
                ((UserStatus)v0_3).readParams(arg1, arg3);
            }

            return ((UserStatus)v0_3);
        }
    }

    public class Vector extends TLObject {
        public static int constructor = 481674261;
        public ArrayList objects;

        static {
        }

        public Vector() {
            super();
            this.objects = new ArrayList();
        }
    }

    public abstract class Video extends TLObject {
        public long access_hash;
        public String caption;
        public int date;
        public int dc_id;
        public int duration;
        public int h;
        public long id;
        public byte[] iv;
        public byte[] key;
        public String mime_type;
        public int size;
        public PhotoSize thumb;
        public int user_id;
        public int w;

        public Video() {
            super();
        }

        public static Video TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_video_old v0;
            TL_videoEncrypted v0_2;
            switch(arg2) {
                case -291550643: {
                    TL_video_old3 v0_5 = new TL_video_old3();
                    break;
                }
                case -148338733: {
                    TL_video_layer45 v0_4 = new TL_video_layer45();
                    break;
                }
                case 948937617: {
                    TL_video_old2 v0_3 = new TL_video_old2();
                    break;
                }
                case 1431655763: {
                    v0_2 = new TL_videoEncrypted();
                    break;
                }
                case 1510253727: {
                    v0 = new TL_video_old();
                    break;
                }
                case -1056548696: {
                    TL_videoEmpty_layer45 v0_1 = new TL_videoEmpty_layer45();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_video_old)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in Video", Integer.valueOf(arg2)));
                }
            }

            if((((TL_video_old)v0_2)) != null) {
                ((Video)v0_2).readParams(arg1, arg3);
            }

            return ((Video)v0_2);
        }
    }

    public abstract class WallPaper extends TLObject {
        public int bg_color;
        public int color;
        public int id;
        public ArrayList sizes;
        public String title;

        public WallPaper() {
            super();
            this.sizes = new ArrayList();
        }

        public static WallPaper TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_wallPaperSolid v0;
            if(arg2 == -860866985) {
                TL_wallPaper v0_1 = new TL_wallPaper();
            }
            else if(arg2 != 1662091044) {
                v0 = null;
            }
            else {
                v0 = new TL_wallPaperSolid();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in WallPaper", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((WallPaper)v0).readParams(arg1, arg3);
            }

            return ((WallPaper)v0);
        }
    }

    public abstract class WebDocument extends TLObject {
        public long access_hash;
        public ArrayList attributes;
        public String mime_type;
        public int size;
        public String url;

        public WebDocument() {
            super();
            this.attributes = new ArrayList();
        }

        public static WebDocument TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_webDocument v0;
            TL_webDocument_layer81 v0_2;
            if(arg2 == -971322408) {
                v0_2 = new TL_webDocument_layer81();
            }
            else if(arg2 == -104284986) {
                TL_webDocumentNoProxy v0_1 = new TL_webDocumentNoProxy();
            }
            else if(arg2 != 475467473) {
                v0 = null;
            }
            else {
                v0 = new TL_webDocument();
            }

            if((((TL_webDocument)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in WebDocument", Integer.valueOf(arg2)));
                }
            }

            if((((TL_webDocument)v0_2)) != null) {
                ((WebDocument)v0_2).readParams(arg1, arg3);
            }

            return ((WebDocument)v0_2);
        }
    }

    public abstract class WebPage extends TLObject {
        public String author;
        public Page cached_page;
        public int date;
        public String description;
        public String display_url;
        public Document document;
        public int duration;
        public int embed_height;
        public String embed_type;
        public String embed_url;
        public int embed_width;
        public int flags;
        public int hash;
        public long id;
        public Photo photo;
        public String site_name;
        public String title;
        public String type;
        public String url;

        public WebPage() {
            super();
        }

        public static WebPage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_webPage v0;
            TL_webPageEmpty v0_3;
            switch(arg2) {
                case 1594340540: {
                    v0 = new TL_webPage();
                    break;
                }
                case -2054908813: {
                    TL_webPageNotModified v0_2 = new TL_webPageNotModified();
                    break;
                }
                case -1558273867: {
                    TL_webPage_old v0_1 = new TL_webPage_old();
                    break;
                }
                case -981018084: {
                    TL_webPagePending v0_6 = new TL_webPagePending();
                    break;
                }
                case -897446185: {
                    TL_webPage_layer58 v0_5 = new TL_webPage_layer58();
                    break;
                }
                case -736472729: {
                    TL_webPageUrlPending v0_4 = new TL_webPageUrlPending();
                    break;
                }
                case -350980120: {
                    v0_3 = new TL_webPageEmpty();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_webPage)v0_3)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in WebPage", Integer.valueOf(arg2)));
                }
            }

            if((((TL_webPage)v0_3)) != null) {
                ((WebPage)v0_3).readParams(arg1, arg3);
            }

            return ((WebPage)v0_3);
        }
    }

    public abstract class auth_CodeType extends TLObject {
        public auth_CodeType() {
            super();
        }

        public static auth_CodeType TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_auth_codeTypeCall v0;
            TL_auth_codeTypeSms v0_1;
            if(arg2 == 577556219) {
                TL_auth_codeTypeFlashCall v0_2 = new TL_auth_codeTypeFlashCall();
            }
            else if(arg2 == 1923290508) {
                v0_1 = new TL_auth_codeTypeSms();
            }
            else if(arg2 != 1948046307) {
                v0 = null;
            }
            else {
                v0 = new TL_auth_codeTypeCall();
            }

            if((((TL_auth_codeTypeCall)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in auth_CodeType", Integer.valueOf(arg2)));
                }
            }

            if((((TL_auth_codeTypeCall)v0_1)) != null) {
                ((auth_CodeType)v0_1).readParams(arg1, arg3);
            }

            return ((auth_CodeType)v0_1);
        }
    }

    public abstract class auth_SentCodeType extends TLObject {
        public int length;
        public String pattern;

        public auth_SentCodeType() {
            super();
        }

        public static auth_SentCodeType TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_auth_sentCodeTypeCall v0;
            if(arg2 == -1425815847) {
                TL_auth_sentCodeTypeFlashCall v0_3 = new TL_auth_sentCodeTypeFlashCall();
            }
            else if(arg2 == -1073693790) {
                TL_auth_sentCodeTypeSms v0_2 = new TL_auth_sentCodeTypeSms();
            }
            else if(arg2 == 1035688326) {
                TL_auth_sentCodeTypeApp v0_1 = new TL_auth_sentCodeTypeApp();
            }
            else if(arg2 != 1398007207) {
                v0 = null;
            }
            else {
                v0 = new TL_auth_sentCodeTypeCall();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in auth_SentCodeType", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((auth_SentCodeType)v0).readParams(arg1, arg3);
            }

            return ((auth_SentCodeType)v0);
        }
    }

    public abstract class channels_ChannelParticipants extends TLObject {
        public int count;
        public ArrayList participants;
        public ArrayList users;

        public channels_ChannelParticipants() {
            super();
            this.participants = new ArrayList();
            this.users = new ArrayList();
        }

        public static channels_ChannelParticipants TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_channels_channelParticipants v0;
            if(arg2 == -266911767) {
                TL_channels_channelParticipantsNotModified v0_1 = new TL_channels_channelParticipantsNotModified();
            }
            else if(arg2 != -177282392) {
                v0 = null;
            }
            else {
                v0 = new TL_channels_channelParticipants();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in channels_ChannelParticipants", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((channels_ChannelParticipants)v0).readParams(arg1, arg3);
            }

            return ((channels_ChannelParticipants)v0);
        }
    }

    public abstract class contacts_Blocked extends TLObject {
        public ArrayList blocked;
        public int count;
        public ArrayList users;

        public contacts_Blocked() {
            super();
            this.blocked = new ArrayList();
            this.users = new ArrayList();
        }

        public static contacts_Blocked TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_contacts_blocked v0;
            if(arg2 == -1878523231) {
                TL_contacts_blockedSlice v0_1 = new TL_contacts_blockedSlice();
            }
            else if(arg2 != 471043349) {
                v0 = null;
            }
            else {
                v0 = new TL_contacts_blocked();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in contacts_Blocked", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((contacts_Blocked)v0).readParams(arg1, arg3);
            }

            return ((contacts_Blocked)v0);
        }
    }

    public abstract class contacts_Contacts extends TLObject {
        public ArrayList contacts;
        public int saved_count;
        public ArrayList users;

        public contacts_Contacts() {
            super();
            this.contacts = new ArrayList();
            this.users = new ArrayList();
        }

        public static contacts_Contacts TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_contacts_contacts v0;
            if(arg2 == -1219778094) {
                TL_contacts_contactsNotModified v0_1 = new TL_contacts_contactsNotModified();
            }
            else if(arg2 != -353862078) {
                v0 = null;
            }
            else {
                v0 = new TL_contacts_contacts();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in contacts_Contacts", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((contacts_Contacts)v0).readParams(arg1, arg3);
            }

            return ((contacts_Contacts)v0);
        }
    }

    public abstract class contacts_TopPeers extends TLObject {
        public contacts_TopPeers() {
            super();
        }

        public static contacts_TopPeers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_contacts_topPeers v0;
            TL_contacts_topPeersNotModified v0_1;
            if(arg2 == -1255369827) {
                TL_contacts_topPeersDisabled v0_2 = new TL_contacts_topPeersDisabled();
            }
            else if(arg2 == -567906571) {
                v0_1 = new TL_contacts_topPeersNotModified();
            }
            else if(arg2 != 1891070632) {
                v0 = null;
            }
            else {
                v0 = new TL_contacts_topPeers();
            }

            if((((TL_contacts_topPeers)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in contacts_TopPeers", Integer.valueOf(arg2)));
                }
            }

            if((((TL_contacts_topPeers)v0_1)) != null) {
                ((contacts_TopPeers)v0_1).readParams(arg1, arg3);
            }

            return ((contacts_TopPeers)v0_1);
        }
    }

    public abstract class help_AppUpdate extends TLObject {
        public help_AppUpdate() {
            super();
        }

        public static help_AppUpdate TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_help_appUpdate v0;
            TL_help_noAppUpdate v0_1;
            if(arg2 == -1000708810) {
                v0_1 = new TL_help_noAppUpdate();
            }
            else if(arg2 != 497489295) {
                v0 = null;
            }
            else {
                v0 = new TL_help_appUpdate();
            }

            if((((TL_help_appUpdate)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in help_AppUpdate", Integer.valueOf(arg2)));
                }
            }

            if((((TL_help_appUpdate)v0_1)) != null) {
                ((help_AppUpdate)v0_1).readParams(arg1, arg3);
            }

            return ((help_AppUpdate)v0_1);
        }
    }

    public abstract class help_DeepLinkInfo extends TLObject {
        public help_DeepLinkInfo() {
            super();
        }

        public static help_DeepLinkInfo TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_help_deepLinkInfo v0;
            TL_help_deepLinkInfoEmpty v0_1;
            if(arg2 == 1722786150) {
                v0_1 = new TL_help_deepLinkInfoEmpty();
            }
            else if(arg2 != 1783556146) {
                v0 = null;
            }
            else {
                v0 = new TL_help_deepLinkInfo();
            }

            if((((TL_help_deepLinkInfo)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in help_DeepLinkInfo", Integer.valueOf(arg2)));
                }
            }

            if((((TL_help_deepLinkInfo)v0_1)) != null) {
                ((help_DeepLinkInfo)v0_1).readParams(arg1, arg3);
            }

            return ((help_DeepLinkInfo)v0_1);
        }
    }

    public abstract class help_PassportConfig extends TLObject {
        public help_PassportConfig() {
            super();
        }

        public static help_PassportConfig TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_help_passportConfigNotModified v0;
            if(arg2 == -1600596305) {
                TL_help_passportConfig v0_1 = new TL_help_passportConfig();
            }
            else if(arg2 != -1078332329) {
                v0 = null;
            }
            else {
                v0 = new TL_help_passportConfigNotModified();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in help_PassportConfig", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((help_PassportConfig)v0).readParams(arg1, arg3);
            }

            return ((help_PassportConfig)v0);
        }
    }

    public abstract class help_ProxyData extends TLObject {
        public help_ProxyData() {
            super();
        }

        public static help_ProxyData TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_help_proxyDataPromo v0;
            if(arg2 == -526508104) {
                TL_help_proxyDataEmpty v0_1 = new TL_help_proxyDataEmpty();
            }
            else if(arg2 != 737668643) {
                v0 = null;
            }
            else {
                v0 = new TL_help_proxyDataPromo();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in help_ProxyData", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((help_ProxyData)v0).readParams(arg1, arg3);
            }

            return ((help_ProxyData)v0);
        }
    }

    public abstract class help_TermsOfServiceUpdate extends TLObject {
        public help_TermsOfServiceUpdate() {
            super();
        }

        public static help_TermsOfServiceUpdate TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_help_termsOfServiceUpdate v0;
            TL_help_termsOfServiceUpdateEmpty v0_1;
            if(arg2 == -483352705) {
                v0_1 = new TL_help_termsOfServiceUpdateEmpty();
            }
            else if(arg2 != 686618977) {
                v0 = null;
            }
            else {
                v0 = new TL_help_termsOfServiceUpdate();
            }

            if((((TL_help_termsOfServiceUpdate)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in help_TermsOfServiceUpdate", Integer.valueOf(arg2)));
                }
            }

            if((((TL_help_termsOfServiceUpdate)v0_1)) != null) {
                ((help_TermsOfServiceUpdate)v0_1).readParams(arg1, arg3);
            }

            return ((help_TermsOfServiceUpdate)v0_1);
        }
    }

    public abstract class messages_AllStickers extends TLObject {
        public ArrayList documents;
        public String hash;
        public ArrayList packs;
        public ArrayList sets;

        public messages_AllStickers() {
            super();
            this.sets = new ArrayList();
            this.packs = new ArrayList();
            this.documents = new ArrayList();
        }

        public static messages_AllStickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_allStickers v0;
            TL_messages_allStickersNotModified v0_1;
            if(arg2 == -395967805) {
                v0_1 = new TL_messages_allStickersNotModified();
            }
            else if(arg2 != -302170017) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_allStickers();
            }

            if((((TL_messages_allStickers)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_AllStickers", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_allStickers)v0_1)) != null) {
                ((messages_AllStickers)v0_1).readParams(arg1, arg3);
            }

            return ((messages_AllStickers)v0_1);
        }
    }

    public abstract class messages_BotResults extends TLObject {
        public int cache_time;
        public int flags;
        public boolean gallery;
        public String next_offset;
        public long query_id;
        public ArrayList results;
        public TL_inlineBotSwitchPM switch_pm;
        public ArrayList users;

        public messages_BotResults() {
            super();
            this.results = new ArrayList();
            this.users = new ArrayList();
        }

        public static messages_BotResults TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_botResults_layer71 v0;
            TL_messages_botResults v0_1;
            if(arg2 == -1803769784) {
                v0_1 = new TL_messages_botResults();
            }
            else if(arg2 != -858565059) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_botResults_layer71();
            }

            if((((TL_messages_botResults_layer71)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_BotResults", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_botResults_layer71)v0_1)) != null) {
                ((messages_BotResults)v0_1).readParams(arg1, arg3);
            }

            return ((messages_BotResults)v0_1);
        }
    }

    public abstract class messages_Chats extends TLObject {
        public ArrayList chats;
        public int count;

        public messages_Chats() {
            super();
            this.chats = new ArrayList();
        }

        public static messages_Chats TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_chats v0;
            if(arg2 == -1663561404) {
                TL_messages_chatsSlice v0_1 = new TL_messages_chatsSlice();
            }
            else if(arg2 != 1694474197) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_chats();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_Chats", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_Chats)v0).readParams(arg1, arg3);
            }

            return ((messages_Chats)v0);
        }
    }

    public abstract class messages_DhConfig extends TLObject {
        public int g;
        public byte[] p;
        public byte[] random;
        public int version;

        public messages_DhConfig() {
            super();
        }

        public static messages_DhConfig TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_dhConfig v0;
            TL_messages_dhConfigNotModified v0_1;
            if(arg2 == -1058912715) {
                v0_1 = new TL_messages_dhConfigNotModified();
            }
            else if(arg2 != 740433629) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_dhConfig();
            }

            if((((TL_messages_dhConfig)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_DhConfig", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_dhConfig)v0_1)) != null) {
                ((messages_DhConfig)v0_1).readParams(arg1, arg3);
            }

            return ((messages_DhConfig)v0_1);
        }
    }

    public abstract class messages_Dialogs extends TLObject {
        public ArrayList chats;
        public int count;
        public ArrayList dialogs;
        public ArrayList messages;
        public ArrayList users;

        public messages_Dialogs() {
            super();
            this.dialogs = new ArrayList();
            this.messages = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static messages_Dialogs TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_dialogsSlice v0;
            if(arg2 == -253500010) {
                TL_messages_dialogsNotModified v0_2 = new TL_messages_dialogsNotModified();
            }
            else if(arg2 == 364538944) {
                TL_messages_dialogs v0_1 = new TL_messages_dialogs();
            }
            else if(arg2 != 1910543603) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_dialogsSlice();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_Dialogs", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_Dialogs)v0).readParams(arg1, arg3);
            }

            return ((messages_Dialogs)v0);
        }
    }

    public abstract class messages_FavedStickers extends TLObject {
        public int hash;
        public ArrayList packs;
        public ArrayList stickers;

        public messages_FavedStickers() {
            super();
            this.packs = new ArrayList();
            this.stickers = new ArrayList();
        }

        public static messages_FavedStickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_favedStickers v0;
            if(arg2 == -1634752813) {
                TL_messages_favedStickersNotModified v0_1 = new TL_messages_favedStickersNotModified();
            }
            else if(arg2 != -209768682) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_favedStickers();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_FavedStickers", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_FavedStickers)v0).readParams(arg1, arg3);
            }

            return ((messages_FavedStickers)v0);
        }
    }

    public abstract class messages_FeaturedStickers extends TLObject {
        public int hash;
        public ArrayList sets;
        public ArrayList unread;

        public messages_FeaturedStickers() {
            super();
            this.sets = new ArrayList();
            this.unread = new ArrayList();
        }

        public static messages_FeaturedStickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_featuredStickersNotModified v0;
            TL_messages_featuredStickers v0_1;
            if(arg2 == -123893531) {
                v0_1 = new TL_messages_featuredStickers();
            }
            else if(arg2 != 82699215) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_featuredStickersNotModified();
            }

            if((((TL_messages_featuredStickersNotModified)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_FeaturedStickers", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_featuredStickersNotModified)v0_1)) != null) {
                ((messages_FeaturedStickers)v0_1).readParams(arg1, arg3);
            }

            return ((messages_FeaturedStickers)v0_1);
        }
    }

    public abstract class messages_FoundStickerSets extends TLObject {
        public messages_FoundStickerSets() {
            super();
        }

        public static messages_FoundStickerSets TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_foundStickerSets v0;
            if(arg2 == 223655517) {
                TL_messages_foundStickerSetsNotModified v0_1 = new TL_messages_foundStickerSetsNotModified();
            }
            else if(arg2 != 1359533640) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_foundStickerSets();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_FoundStickerSets", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_FoundStickerSets)v0).readParams(arg1, arg3);
            }

            return ((messages_FoundStickerSets)v0);
        }
    }

    public abstract class messages_Messages extends TLObject {
        public ArrayList chats;
        public int count;
        public int flags;
        public ArrayList messages;
        public int pts;
        public ArrayList users;

        public messages_Messages() {
            super();
            this.messages = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static messages_Messages TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_messagesSlice v0;
            TL_messages_messages v0_2;
            if(arg2 == -1938715001) {
                v0_2 = new TL_messages_messages();
            }
            else if(arg2 == -1725551049) {
                TL_messages_channelMessages v0_1 = new TL_messages_channelMessages();
            }
            else if(arg2 != 189033187) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_messagesSlice();
            }

            if((((TL_messages_messagesSlice)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_Messages", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_messagesSlice)v0_2)) != null) {
                ((messages_Messages)v0_2).readParams(arg1, arg3);
            }

            return ((messages_Messages)v0_2);
        }
    }

    public abstract class messages_RecentStickers extends TLObject {
        public messages_RecentStickers() {
            super();
        }

        public static messages_RecentStickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_recentStickers v0;
            if(arg2 == 186120336) {
                TL_messages_recentStickersNotModified v0_1 = new TL_messages_recentStickersNotModified();
            }
            else if(arg2 != 586395571) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_recentStickers();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_RecentStickers", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_RecentStickers)v0).readParams(arg1, arg3);
            }

            return ((messages_RecentStickers)v0);
        }
    }

    public abstract class messages_SavedGifs extends TLObject {
        public ArrayList gifs;
        public int hash;

        public messages_SavedGifs() {
            super();
            this.gifs = new ArrayList();
        }

        public static messages_SavedGifs TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_savedGifs v0;
            if(arg2 == -402498398) {
                TL_messages_savedGifsNotModified v0_1 = new TL_messages_savedGifsNotModified();
            }
            else if(arg2 != 772213157) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_savedGifs();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_SavedGifs", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_SavedGifs)v0).readParams(arg1, arg3);
            }

            return ((messages_SavedGifs)v0);
        }
    }

    public abstract class messages_SentEncryptedMessage extends TLObject {
        public int date;
        public EncryptedFile file;

        public messages_SentEncryptedMessage() {
            super();
        }

        public static messages_SentEncryptedMessage TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_sentEncryptedMessage v0;
            TL_messages_sentEncryptedFile v0_1;
            if(arg2 == -1802240206) {
                v0_1 = new TL_messages_sentEncryptedFile();
            }
            else if(arg2 != 1443858741) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_sentEncryptedMessage();
            }

            if((((TL_messages_sentEncryptedMessage)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_SentEncryptedMessage", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_sentEncryptedMessage)v0_1)) != null) {
                ((messages_SentEncryptedMessage)v0_1).readParams(arg1, arg3);
            }

            return ((messages_SentEncryptedMessage)v0_1);
        }
    }

    public abstract class messages_StickerSetInstallResult extends TLObject {
        public ArrayList sets;

        public messages_StickerSetInstallResult() {
            super();
            this.sets = new ArrayList();
        }

        public static messages_StickerSetInstallResult TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_stickerSetInstallResultSuccess v0;
            TL_messages_stickerSetInstallResultArchive v0_1;
            if(arg2 == 904138920) {
                v0_1 = new TL_messages_stickerSetInstallResultArchive();
            }
            else if(arg2 != 946083368) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_stickerSetInstallResultSuccess();
            }

            if((((TL_messages_stickerSetInstallResultSuccess)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_StickerSetInstallResult", Integer.valueOf(arg2)));
                }
            }

            if((((TL_messages_stickerSetInstallResultSuccess)v0_1)) != null) {
                ((messages_StickerSetInstallResult)v0_1).readParams(arg1, arg3);
            }

            return ((messages_StickerSetInstallResult)v0_1);
        }
    }

    public abstract class messages_Stickers extends TLObject {
        public messages_Stickers() {
            super();
        }

        public static messages_Stickers TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_messages_stickersNotModified v0;
            if(arg2 == -463889475) {
                TL_messages_stickers v0_1 = new TL_messages_stickers();
            }
            else if(arg2 != -244016606) {
                v0 = null;
            }
            else {
                v0 = new TL_messages_stickersNotModified();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in messages_Stickers", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((messages_Stickers)v0).readParams(arg1, arg3);
            }

            return ((messages_Stickers)v0);
        }
    }

    public abstract class payments_PaymentResult extends TLObject {
        public Updates updates;
        public String url;

        public payments_PaymentResult() {
            super();
        }

        public static payments_PaymentResult TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_payments_paymentVerficationNeeded v0;
            if(arg2 == 1314881805) {
                TL_payments_paymentResult v0_1 = new TL_payments_paymentResult();
            }
            else if(arg2 != 1800845601) {
                v0 = null;
            }
            else {
                v0 = new TL_payments_paymentVerficationNeeded();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in payments_PaymentResult", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((payments_PaymentResult)v0).readParams(arg1, arg3);
            }

            return ((payments_PaymentResult)v0);
        }
    }

    public abstract class photos_Photos extends TLObject {
        public int count;
        public ArrayList photos;
        public ArrayList users;

        public photos_Photos() {
            super();
            this.photos = new ArrayList();
            this.users = new ArrayList();
        }

        public static photos_Photos TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_photos_photosSlice v0;
            if(arg2 == -1916114267) {
                TL_photos_photos v0_1 = new TL_photos_photos();
            }
            else if(arg2 != 352657236) {
                v0 = null;
            }
            else {
                v0 = new TL_photos_photosSlice();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in photos_Photos", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((photos_Photos)v0).readParams(arg1, arg3);
            }

            return ((photos_Photos)v0);
        }
    }

    public abstract class storage_FileType extends TLObject {
        public storage_FileType() {
            super();
        }

        public static storage_FileType TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_storage_fileMp3 v0;
            TL_storage_filePartial v0_5;
            switch(arg2) {
                case 8322574: {
                    TL_storage_fileJpeg v0_1 = new TL_storage_fileJpeg();
                    break;
                }
                case 172975040: {
                    TL_storage_filePng v0_9 = new TL_storage_filePng();
                    break;
                }
                case 276907596: {
                    TL_storage_fileWebp v0_7 = new TL_storage_fileWebp();
                    break;
                }
                case 1086091090: {
                    v0_5 = new TL_storage_filePartial();
                    break;
                }
                case 1258941372: {
                    TL_storage_fileMov v0_3 = new TL_storage_fileMov();
                    break;
                }
                case 1384777335: {
                    v0 = new TL_storage_fileMp3();
                    break;
                }
                case -1432995067: {
                    TL_storage_fileUnknown v0_8 = new TL_storage_fileUnknown();
                    break;
                }
                case -1373745011: {
                    TL_storage_filePdf v0_6 = new TL_storage_filePdf();
                    break;
                }
                case -1278304028: {
                    TL_storage_fileMp4 v0_4 = new TL_storage_fileMp4();
                    break;
                }
                case -891180321: {
                    TL_storage_fileGif v0_2 = new TL_storage_fileGif();
                    break;
                }
                default: {
                    v0 = null;
                    break;
                }
            }

            if((((TL_storage_fileMp3)v0_5)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in storage_FileType", Integer.valueOf(arg2)));
                }
            }

            if((((TL_storage_fileMp3)v0_5)) != null) {
                ((storage_FileType)v0_5).readParams(arg1, arg3);
            }

            return ((storage_FileType)v0_5);
        }
    }

    public abstract class updates_ChannelDifference extends TLObject {
        public ArrayList chats;
        public int flags;
        public boolean isFinal;
        public ArrayList messages;
        public ArrayList new_messages;
        public ArrayList other_updates;
        public int pts;
        public int read_inbox_max_id;
        public int read_outbox_max_id;
        public int timeout;
        public int top_message;
        public int unread_count;
        public int unread_mentions_count;
        public ArrayList users;

        public updates_ChannelDifference() {
            super();
            this.new_messages = new ArrayList();
            this.other_updates = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
            this.messages = new ArrayList();
        }

        public static updates_ChannelDifference TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_updates_channelDifferenceTooLong v0;
            TL_updates_channelDifference v0_2;
            if(arg2 == 543450958) {
                v0_2 = new TL_updates_channelDifference();
            }
            else if(arg2 == 1041346555) {
                TL_updates_channelDifferenceEmpty v0_1 = new TL_updates_channelDifferenceEmpty();
            }
            else if(arg2 != 1788705589) {
                v0 = null;
            }
            else {
                v0 = new TL_updates_channelDifferenceTooLong();
            }

            if((((TL_updates_channelDifferenceTooLong)v0_2)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in updates_ChannelDifference", Integer.valueOf(arg2)));
                }
            }

            if((((TL_updates_channelDifferenceTooLong)v0_2)) != null) {
                ((updates_ChannelDifference)v0_2).readParams(arg1, arg3);
            }

            return ((updates_ChannelDifference)v0_2);
        }
    }

    public abstract class updates_Difference extends TLObject {
        public ArrayList chats;
        public int date;
        public TL_updates_state intermediate_state;
        public ArrayList new_encrypted_messages;
        public ArrayList new_messages;
        public ArrayList other_updates;
        public int pts;
        public int seq;
        public TL_updates_state state;
        public ArrayList users;

        public updates_Difference() {
            super();
            this.new_messages = new ArrayList();
            this.new_encrypted_messages = new ArrayList();
            this.other_updates = new ArrayList();
            this.chats = new ArrayList();
            this.users = new ArrayList();
        }

        public static updates_Difference TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_updates_differenceEmpty v0;
            TL_updates_differenceTooLong v0_1;
            if(arg2 == -1459938943) {
                TL_updates_differenceSlice v0_3 = new TL_updates_differenceSlice();
            }
            else if(arg2 == 16030880) {
                TL_updates_difference v0_2 = new TL_updates_difference();
            }
            else if(arg2 == 1258196845) {
                v0_1 = new TL_updates_differenceTooLong();
            }
            else if(arg2 != 1567990072) {
                v0 = null;
            }
            else {
                v0 = new TL_updates_differenceEmpty();
            }

            if((((TL_updates_differenceEmpty)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in updates_Difference", Integer.valueOf(arg2)));
                }
            }

            if((((TL_updates_differenceEmpty)v0_1)) != null) {
                ((updates_Difference)v0_1).readParams(arg1, arg3);
            }

            return ((updates_Difference)v0_1);
        }
    }

    public abstract class upload_CdnFile extends TLObject {
        public NativeByteBuffer bytes;
        public byte[] request_token;

        public upload_CdnFile() {
            super();
        }

        public static upload_CdnFile TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_upload_cdnFileReuploadNeeded v0;
            TL_upload_cdnFile v0_1;
            if(arg2 == -1449145777) {
                v0_1 = new TL_upload_cdnFile();
            }
            else if(arg2 != -290921362) {
                v0 = null;
            }
            else {
                v0 = new TL_upload_cdnFileReuploadNeeded();
            }

            if((((TL_upload_cdnFileReuploadNeeded)v0_1)) == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in upload_CdnFile", Integer.valueOf(arg2)));
                }
            }

            if((((TL_upload_cdnFileReuploadNeeded)v0_1)) != null) {
                ((upload_CdnFile)v0_1).readParams(arg1, arg3);
            }

            return ((upload_CdnFile)v0_1);
        }
    }

    public abstract class upload_File extends TLObject {
        public NativeByteBuffer bytes;
        public int dc_id;
        public byte[] encryption_iv;
        public byte[] encryption_key;
        public ArrayList file_hashes;
        public byte[] file_token;
        public int mtime;
        public storage_FileType type;

        public upload_File() {
            super();
            this.file_hashes = new ArrayList();
        }

        public static upload_File TLdeserialize(AbstractSerializedData arg1, int arg2, boolean arg3) {
            TL_upload_file v0;
            if(arg2 == -242427324) {
                TL_upload_fileCdnRedirect v0_1 = new TL_upload_fileCdnRedirect();
            }
            else if(arg2 != 157948117) {
                v0 = null;
            }
            else {
                v0 = new TL_upload_file();
            }

            if(v0 == null) {
                if(!arg3) {
                }
                else {
                    throw new RuntimeException(String.format("can\'t parse magic %x in upload_File", Integer.valueOf(arg2)));
                }
            }

            if(v0 != null) {
                ((upload_File)v0).readParams(arg1, arg3);
            }

            return ((upload_File)v0);
        }
    }

    public static final int CHAT_FLAG_IS_PUBLIC = 64;
    public static final int LAYER = 85;
    public static final int MESSAGE_FLAG_EDITED = 32768;
    public static final int MESSAGE_FLAG_FWD = 4;
    public static final int MESSAGE_FLAG_HAS_BOT_ID = 2048;
    public static final int MESSAGE_FLAG_HAS_ENTITIES = 128;
    public static final int MESSAGE_FLAG_HAS_FROM_ID = 256;
    public static final int MESSAGE_FLAG_HAS_MARKUP = 64;
    public static final int MESSAGE_FLAG_HAS_MEDIA = 512;
    public static final int MESSAGE_FLAG_HAS_VIEWS = 1024;
    public static final int MESSAGE_FLAG_MEGAGROUP = -2147483648;
    public static final int MESSAGE_FLAG_REPLY = 8;
    public static final int USER_FLAG_ACCESS_HASH = 1;
    public static final int USER_FLAG_FIRST_NAME = 2;
    public static final int USER_FLAG_LAST_NAME = 4;
    public static final int USER_FLAG_PHONE = 16;
    public static final int USER_FLAG_PHOTO = 32;
    public static final int USER_FLAG_STATUS = 64;
    public static final int USER_FLAG_UNUSED = 128;
    public static final int USER_FLAG_UNUSED2 = 256;
    public static final int USER_FLAG_UNUSED3 = 512;
    public static final int USER_FLAG_USERNAME = 8;

    public TLRPC() {
        super();
    }
}

